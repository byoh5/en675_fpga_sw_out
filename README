EN675 Core code
=====================================


코드 구성
---------

FPGA ver 20.01.30 14:05
이 코드는 Serial Flash Memory(SFLS) 또는 DDR에서 바로 부팅할 수 있습니다.

Source\core\shared\exbl.lds의 28, 29번째 줄에서 모드에 따라 시작 주소를 설정해주세요.
SFLS로 부팅할 binary 생성시 .reset : AT (ORIGIN(FLASH))
 DDR로 부팅할 binary 생성시 .reset : AT (ORIGIN(DDR))

all 명령은 core.elf가 생성됩니다. Eclipse에서 디버깅을 위한 것으로 DDR로 컴파일해야합니다.
create_binary 명령은 먼저 all(core.elf)이 실행되어 core.bin이 생성되고 boot.bin + core.bin이 합쳐서 EN675.bin을 생성해냅니다.
ECM에서 SFLS에 write할 경우 EN675.bin을 생성하여 Write하세요. (SFLS로 컴파일한 elf/binary여야 합니다)

"\\192.168.0.10\_연구소_Team2\_EN675\Document\릴리즈문서\EN675_Ver0.4_개발환경구성_Cmake.pdf" 을 참조하시기 바랍니다.

CPU0, 1, 2, 3은 source/core폴더에서 core0, core1, core2, core3의 main_.c 파일을 root로 합니다.
CPU0에서 freeRTOS, CPU3에서 ISP가 준비되어있습니다.
DDR BSS영역 뒤의 16MByte 영역을 RTOS Heap 영역으로 사용합니다.
그리고 그 뒤 4MByte 영역은 F/W Heap 영역으로 사용합니다. 자세한 내용은 exbl.lds를 참조하세요.
만약 freeRTOS를 사용하지 않는다면 Cmake/device.cmake의 USE_FREERTOS 부분을 찾아 0으로 수정하시면 됩니다. (테스트 되지 않음)


메모리 구성
---------

Code에서 사용하고 있는 메모리는 SRAM입니다. 저장공간은 SFLS를 사용합니다.
이 binary를 SFLS에 write 하면, 초기화 과정을 거친 후 0xC0020000에 있는 binary를 읽어 DDR로 복사합니다.
그 다음 모든 CPU는 0x80000100으로 jump 합니다.

|               |
|               |
|---------------| 0x8000_0000 (DDR START)
| .reset        |
|---------------| 0x8xxx_xxxx
| .text         |
|---------------| 0x8xxx_xxxx
| .rodata       |
|---------------| 0x8xxx_xxxx
| .data         |
|---------------| 0x8xxx_xxxx
| .bss          |
|---------------| 0x8xxx_xxxx
| .heap         |
|---------------| 0x8xxx_xxxx
|               |
|         empty |
|               |
|---------------| 0x8400_0000 (DDR END - 64MB)
|               |
|         empty |
|               |
|---------------| 0x87FF_FFFF (DDR END - 128MB)
|               |
|         empty |
|               |
|---------------| 0x8FFF_FFFF (DDR END - 256MB)
|               |
|               |
|               |
|               |
|               |
|               |
|---------------| 0xA000_0000 (SRAM START)
|               |
|         empty |
|               |
|---------------| 0xA004_0000 (SRAM END - 256KB)
|               |
|               |
|               |
|               |
|               |
|               |
|---------------| 0xC000_0000 (SFLS START)
|               |
|         empty |
|               |
|---------------| 0xC100_0000 (SFLS END - 16MB)
|               |
|         empty |
|               |
|---------------| 0xC200_0000 (SFLS END - 32MB)
|               |
|               |


이클립스 구성
---------

이클립스에서 디버깅모드를 사용하기 위해 Debug와 Release로 구성이 나뉘어 있습니다. Debug는 -O0옵션을 사용하며, Release는 -Os옵션을 사용합니다.
이클립스에 추가할 때, Debug 모드의 경우 Debug 폴더의 .project와 .cproject가 root가 되겠습니다.


코드 컴파일
---------

이 코드는 Cmake 기반의 makefile으로 구성되어 있습니다. 이 소스코드를 컴파일 하기 위해서는 Cmake를 설치해야 합니다.
Cmake의 버전은 최소 3.13.2가 되어야 하며, https://cmake.org/download/ 에서 다운로드 받을 수 있습니다.


