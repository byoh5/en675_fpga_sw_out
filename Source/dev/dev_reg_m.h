#ifndef REG_H_
#define REG_H_
_regs_ BF_4(UINT ID : 24 ,UINT _rev0 : 6, UINT IF_RST : 1 ,UINT ID_VAL : 1 ) _rege_ _SFLS_0;
_regs_ BF_4(UINT BUS_CMD_RD : 8 ,UINT BUS_CMD_WR : 8 ,UINT BUS_CMD_WREN : 8 ,UINT BUS_CMD_RDREG : 8 ) _rege_ _SFLS_1;
_regs_ BF_13(UINT BUS_RD_CMD_MODE : 2 ,UINT BUS_RD_ADR_MODE : 2 ,UINT BUS_RD_DAT_MODE : 2 ,UINT BUS_WR_CMD_MODE : 2 ,UINT BUS_WR_ADR_MODE : 2 ,UINT BUS_WR_DAT_MODE : 2 ,UINT BUS_WREN_CMD_MODE : 2 ,UINT BUS_RDREG_CMD_MODE : 2 ,UINT BUS_RDREG_DAT_MODE : 2 ,UINT BUS_ADR_EXT : 1 ,UINT BUS_GAP_EN      : 1 ,UINT BUS_GAP         : 4 , UINT _rev0 : 8 ) _rege_ _SFLS_2;
_regs_ BF_4(UINT USR_CMD_RDREG : 8 ,UINT USR_RDREG_CMD_MODE : 2 ,UINT USR_RDREG_DAT_MODE : 2 , UINT _rev0 : 20 ) _rege_ _SFLS_3;
_regs_ BF_14(UINT USR_CMD_MODE : 2 ,UINT USR_ADR_MODE    : 2 ,UINT USR_DAT_MODE    : 2 ,UINT USR_ADR_EN      : 1 ,UINT USR_GAP_EN      : 1 ,UINT USR_RD_EN : 1 ,UINT USR_WR_EN : 1 ,UINT USR_GAP : 4 ,UINT USR_LEN : 2 ,UINT USR_ADR_EXT : 1 ,UINT USR_BUSY_EN : 1 ,UINT _rev0 : 4, UINT USR_RDLTC : 2 ,UINT USR_CMD : 8 ) _rege_ _SFLS_4;
_regs_ BF_1(UINT USR_ADR : 32 ) _rege_ _SFLS_5;
_regs_ BF_1(UINT USR_RDDAT : 32 ) _rege_ _SFLS_6;
_regs_ BF_1(UINT USR_WRDAT : 32 ) _rege_ _SFLS_7;
_regs_ BF_11(UINT IO_RXEDGE : 1 ,UINT IO_TXEDGE : 1 ,UINT _rev0 : 4, UINT IO_RDLTC : 2 ,UINT IO_CLKDIV : 8 ,UINT _rev1 : 5, UINT IO_CS_GAP : 3 ,UINT _rev2 : 5, UINT USRBUS_REQ : 1 ,UINT BUS_REQ : 1 ,UINT USR_REQ : 1 ) _rege_ _SFLS_8;
_regs_ BF_9(UINT CMD_RXEDGE : 1 ,UINT CMD_TXEDGE : 1 ,UINT DAT_RXEDGE : 1 ,UINT DAT_TXEDGE : 1 ,UINT _rev0 : 24, UINT BITMODE : 1 ,UINT IOMODE : 1 ,UINT MODE : 1 ,UINT EN : 1 ) _rege_ _SDIO0_0;
_regs_ BF_4(UINT _rev0 : 17, UINT CLK_EN : 1 ,UINT CLK_SELECT : 2 ,UINT CLK_DIV : 12 ) _rege_ _SDIO0_1;
_regs_ BF_1(UINT CMD_ARG : 32 ) _rege_ _SDIO0_2;
_regs_ BF_10(UINT _rev0 : 2, UINT CMD_IDX : 6 ,UINT _rev1 : 14, UINT CMD_RESP_TOUT : 1 ,UINT CMD_RESP_CRCERR : 1 ,UINT _rev2 : 4, UINT CMD_RESP_BUSY_EN : 1 ,UINT CMD_RESP_TYPE : 1 ,UINT CMD_RESP_EN : 1 ,UINT CMD_EN : 1 ) _rege_ _SDIO0_3;
_regs_ BF_4(UINT _rev0 : 18, UINT CMD_RESP_IDX : 6 ,UINT _rev1 : 1, UINT CMD_RESP_CRC : 7 ) _rege_ _SDIO0_4;
_regs_ BF_1(UINT CMD_RESP_DAT127_96 : 32 ) _rege_ _SDIO0_5;
_regs_ BF_1(UINT CMD_RESP_DAT95_64 : 32 ) _rege_ _SDIO0_6;
_regs_ BF_1(UINT CMD_RESP_DAT63_32 : 32 ) _rege_ _SDIO0_7;
_regs_ BF_1(UINT CMD_RESP_DAT31_0 : 32 ) _rege_ _SDIO0_8;
_regs_ BF_1(UINT CMD_RESP_TLMT : 32 ) _rege_ _SDIO0_9;
_regs_ BF_1(UINT DAT_ADR : 32 ) _rege_ _SDIO0_10;
_regs_ BF_4(UINT TRG : 1 ,UINT _rev0 : 3, UINT DAT_BLKBYTE : 12 ,UINT DAT_BLKNUM : 16 ) _rege_ _SDIO0_11;
_regs_ BF_1(UINT DAT_BLKADR : 32 ) _rege_ _SDIO0_12;
_regs_ BF_17(UINT DAT_CRCERR : 1 ,UINT DAT_BUSY : 1 ,UINT _rev0 : 14, UINT IO_IRQ : 1 ,UINT IO_IRQ_CLR : 1 ,UINT IO_IRQ_EN : 1 ,UINT CMD_IRQ : 1 ,UINT CMD_IRQ_CLR : 1 ,UINT CMD_IRQ_EN : 1 ,UINT DAT_IRQ : 1 ,UINT DAT_IRQ_CLR : 1 ,UINT DAT_IRQ_EN : 1 ,UINT CMD53_FN : 3 ,UINT CMD53_BM : 1 ,UINT CMD53_OP : 1 ,UINT DAT_WE : 1 ,UINT DAT_EN : 1 ) _rege_ _SDIO0_13;
_regs_ BF_3(UINT DAT_TOUT : 8 ,UINT _rev0 : 8, UINT DAT_BLKCNT : 16 ) _rege_ _SDIO0_14;
_regs_ BF_4(UINT _rev0 : 18, UINT DAT_STOP_CMD : 6 ,UINT _rev1 : 2, UINT DAT_IORW_CMD : 6 ) _rege_ _SDIO0_15;
_regs_ BF_8(UINT _rev0 : 2, UINT DAT_WRCMD_S : 6 ,UINT _rev1 : 2, UINT DAT_WRCMD_M : 6 ,UINT _rev2 : 2, UINT DAT_RDCMD_S : 6 ,UINT _rev3 : 2, UINT DAT_RDCMD_M : 6 ) _rege_ _SDIO0_16;
_regs_ BF_9(UINT CMD_RXEDGE : 1 ,UINT CMD_TXEDGE : 1 ,UINT DAT_RXEDGE : 1 ,UINT DAT_TXEDGE : 1 ,UINT _rev0 : 24, UINT BITMODE : 1 ,UINT IOMODE : 1 ,UINT MODE : 1 ,UINT EN : 1 ) _rege_ _SDIO1_0;
_regs_ BF_4(UINT _rev0 : 17, UINT CLK_EN : 1 ,UINT CLK_SELECT : 2 ,UINT CLK_DIV : 12 ) _rege_ _SDIO1_1;
_regs_ BF_1(UINT CMD_ARG : 32 ) _rege_ _SDIO1_2;
_regs_ BF_10(UINT _rev0 : 2, UINT CMD_IDX : 6 ,UINT _rev1 : 14, UINT CMD_RESP_TOUT : 1 ,UINT CMD_RESP_CRCERR : 1 ,UINT _rev2 : 4, UINT CMD_RESP_BUSY_EN : 1 ,UINT CMD_RESP_TYPE : 1 ,UINT CMD_RESP_EN : 1 ,UINT CMD_EN : 1 ) _rege_ _SDIO1_3;
_regs_ BF_4(UINT _rev0 : 18, UINT CMD_RESP_IDX : 6 ,UINT _rev1 : 1, UINT CMD_RESP_CRC : 7 ) _rege_ _SDIO1_4;
_regs_ BF_1(UINT CMD_RESP_DAT127_96 : 32 ) _rege_ _SDIO1_5;
_regs_ BF_1(UINT CMD_RESP_DAT95_64 : 32 ) _rege_ _SDIO1_6;
_regs_ BF_1(UINT CMD_RESP_DAT63_32 : 32 ) _rege_ _SDIO1_7;
_regs_ BF_1(UINT CMD_RESP_DAT31_0 : 32 ) _rege_ _SDIO1_8;
_regs_ BF_1(UINT CMD_RESP_TLMT : 32 ) _rege_ _SDIO1_9;
_regs_ BF_1(UINT DAT_ADR : 32 ) _rege_ _SDIO1_10;
_regs_ BF_4(UINT TRG : 1 ,UINT _rev0 : 3, UINT DAT_BLKBYTE : 12 ,UINT DAT_BLKNUM : 16 ) _rege_ _SDIO1_11;
_regs_ BF_1(UINT DAT_BLKADR : 32 ) _rege_ _SDIO1_12;
_regs_ BF_17(UINT DAT_CRCERR : 1 ,UINT DAT_BUSY : 1 ,UINT _rev0 : 14, UINT IO_IRQ : 1 ,UINT IO_IRQ_CLR : 1 ,UINT IO_IRQ_EN : 1 ,UINT CMD_IRQ : 1 ,UINT CMD_IRQ_CLR : 1 ,UINT CMD_IRQ_EN : 1 ,UINT DAT_IRQ : 1 ,UINT DAT_IRQ_CLR : 1 ,UINT DAT_IRQ_EN : 1 ,UINT CMD53_FN : 3 ,UINT CMD53_BM : 1 ,UINT CMD53_OP : 1 ,UINT DAT_WE : 1 ,UINT DAT_EN : 1 ) _rege_ _SDIO1_13;
_regs_ BF_3(UINT DAT_TOUT : 8 ,UINT _rev0 : 8, UINT DAT_BLKCNT : 16 ) _rege_ _SDIO1_14;
_regs_ BF_4(UINT _rev0 : 18, UINT DAT_STOP_CMD : 6 ,UINT _rev1 : 2, UINT DAT_IORW_CMD : 6 ) _rege_ _SDIO1_15;
_regs_ BF_8(UINT _rev0 : 2, UINT DAT_WRCMD_S : 6 ,UINT _rev1 : 2, UINT DAT_WRCMD_M : 6 ,UINT _rev2 : 2, UINT DAT_RDCMD_S : 6 ,UINT _rev3 : 2, UINT DAT_RDCMD_M : 6 ) _rege_ _SDIO1_16;
_regs_ BF_9(UINT MDIO_RXEDGE : 1 ,UINT MDIO_TXEDGE : 1 ,UINT MDIO_RDLTC : 2 ,UINT _rev0 : 10, UINT MDIO_OPCODE : 2 ,UINT _rev1 : 3, UINT MDIO_PHYADR : 5 ,UINT _rev2 : 3, UINT MDIO_REGADR : 5 ) _rege_ _ETH_0;
_regs_ BF_4(UINT MDIO_GAPLMT : 8 ,UINT MDIO_CLKLMT : 8 ,UINT _rev0 : 15, UINT MDIO_REQ : 1 ) _rege_ _ETH_1;
_regs_ BF_2(UINT MDIO_TXDAT : 16 ,UINT MDIO_RXDAT : 16 ) _rege_ _ETH_2;
_regs_ BF_9(UINT RX_EN : 1 ,UINT _rev0 : 8, UINT RX_RCKEDGE : 1 ,UINT RX_DATTYPE : 2 ,UINT RX_RCKDLY : 4 ,UINT RX_ERTYPE : 2 ,UINT RX_RMII10 : 1 ,UINT _rev1 : 11, UINT RX_INT_SEL : 2 ) _rege_ _ETH_12;
_regs_ BF_13(UINT TX_DATBIT : 1 ,UINT TX_DATTYPE : 1 ,UINT TX_CLKOE : 1 ,UINT TX_CLKEDGE : 1 ,UINT TX_CLKSEL : 1 ,UINT TX_CRSCHK : 1 ,UINT TX_COLCHK : 1 ,UINT TX_COLSEL : 1 ,UINT TX_PAUSE_EN : 1 ,UINT TX_PAUSE : 1 ,UINT _rev0 : 20, UINT TX_COLEN : 1 ,UINT TX_RMII10 : 1 ) _rege_ _ETH_13;
_regs_ BF_7(UINT _rev0 : 8, UINT TX_TXENDLY : 4 ,UINT TX_TXD0DLY : 4 ,UINT TX_TXD1DLY : 4 ,UINT TX_TXD2DLY : 4 ,UINT TX_TXD3DLY : 4 ,UINT TX_TCKDLY : 4 ) _rege_ _ETH_14;
_regs_ BF_8(UINT TX_IFGGAP : 16 ,UINT _rev0 : 10, UINT IRQ_RX : 1 ,UINT IRQ_TX : 1 ,UINT IRQ_RX_EN : 1 ,UINT IRQ_TX_EN : 1 ,UINT IRQ_RX_CLR : 1 ,UINT IRQ_TX_CLR : 1 ) _rege_ _ETH_15;
_regs_ BF_1(UINT RX_ADR : 32 ) _rege_ _ETH_16;
_regs_ BF_4(UINT RX_QOS : 4 ,UINT RX_ADROFS : 12 ,UINT _rev0 : 8, UINT RX_LMT : 8 ) _rege_ _ETH_17;
_regs_ BF_1(UINT TX_ADR : 32 ) _rege_ _ETH_18;
_regs_ BF_7(UINT TX_LEN : 12 ,UINT _rev0 : 12, UINT TX_QOS : 4 ,UINT TX_EMPTY : 1 ,UINT TX_FULL : 1 ,UINT _rev1 : 1, UINT TX_VAL : 1 ) _rege_ _ETH_19;
_regs_ BF_1(UINT DSTMAC_EN : 32 ) _rege_ _ETH_32;
_regs_ BF_3(UINT DSTMAC_EN0 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR0_47_32 : 16 ) _rege_ _ETH_33;
_regs_ BF_1(UINT DSTMAC_ADR0_31_0 : 32 ) _rege_ _ETH_34;
_regs_ BF_3(UINT DSTMAC_EN1 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR1_47_32 : 16 ) _rege_ _ETH_35;
_regs_ BF_1(UINT DSTMAC_ADR1_31_0 : 32 ) _rege_ _ETH_36;
_regs_ BF_3(UINT DSTMAC_EN2 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR2_47_32 : 16 ) _rege_ _ETH_37;
_regs_ BF_1(UINT DSTMAC_ADR2_31_0 : 32 ) _rege_ _ETH_38;
_regs_ BF_3(UINT DSTMAC_EN3 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR3_47_32 : 16 ) _rege_ _ETH_39;
_regs_ BF_1(UINT DSTMAC_ADR3_31_0 : 32 ) _rege_ _ETH_40;
_regs_ BF_3(UINT DSTMAC_EN4 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR4_47_32 : 16 ) _rege_ _ETH_41;
_regs_ BF_1(UINT DSTMAC_ADR4_31_0 : 32 ) _rege_ _ETH_42;
_regs_ BF_3(UINT DSTMAC_EN5 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR5_47_32 : 16 ) _rege_ _ETH_43;
_regs_ BF_1(UINT DSTMAC_ADR5_31_0 : 32 ) _rege_ _ETH_44;
_regs_ BF_3(UINT DSTMAC_EN6 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR6_47_32 : 16 ) _rege_ _ETH_45;
_regs_ BF_1(UINT DSTMAC_ADR6_31_0 : 32 ) _rege_ _ETH_46;
_regs_ BF_3(UINT DSTMAC_EN7 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR7_47_32 : 16 ) _rege_ _ETH_47;
_regs_ BF_1(UINT DSTMAC_ADR7_31_0 : 32 ) _rege_ _ETH_48;
_regs_ BF_3(UINT DSTMAC_EN8 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR8_47_32 : 16 ) _rege_ _ETH_49;
_regs_ BF_1(UINT DSTMAC_ADR8_31_0 : 32 ) _rege_ _ETH_50;
_regs_ BF_3(UINT DSTMAC_EN9 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR9_47_32 : 16 ) _rege_ _ETH_51;
_regs_ BF_1(UINT DSTMAC_ADR9_31_0 : 32 ) _rege_ _ETH_52;
_regs_ BF_3(UINT DSTMAC_EN10 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR10_47_32 : 16 ) _rege_ _ETH_53;
_regs_ BF_1(UINT DSTMAC_ADR10_31_0 : 32 ) _rege_ _ETH_54;
_regs_ BF_3(UINT DSTMAC_EN11 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR11_47_32 : 16 ) _rege_ _ETH_55;
_regs_ BF_1(UINT DSTMAC_ADR11_31_0 : 32 ) _rege_ _ETH_56;
_regs_ BF_3(UINT DSTMAC_EN12 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR12_47_32 : 16 ) _rege_ _ETH_57;
_regs_ BF_1(UINT DSTMAC_ADR12_31_0 : 32 ) _rege_ _ETH_58;
_regs_ BF_3(UINT DSTMAC_EN13 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR13_47_32 : 16 ) _rege_ _ETH_59;
_regs_ BF_1(UINT DSTMAC_ADR13_31_0 : 32 ) _rege_ _ETH_60;
_regs_ BF_3(UINT DSTMAC_EN14 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR14_47_32 : 16 ) _rege_ _ETH_61;
_regs_ BF_1(UINT DSTMAC_ADR14_31_0 : 32 ) _rege_ _ETH_62;
_regs_ BF_3(UINT DSTMAC_EN15 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR15_47_32 : 16 ) _rege_ _ETH_63;
_regs_ BF_1(UINT DSTMAC_ADR15_31_0 : 32 ) _rege_ _ETH_64;
_regs_ BF_3(UINT DSTMAC_EN16 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR16_47_32 : 16 ) _rege_ _ETH_65;
_regs_ BF_1(UINT DSTMAC_ADR16_31_0 : 32 ) _rege_ _ETH_66;
_regs_ BF_3(UINT DSTMAC_EN17 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR17_47_32 : 16 ) _rege_ _ETH_67;
_regs_ BF_1(UINT DSTMAC_ADR17_31_0 : 32 ) _rege_ _ETH_68;
_regs_ BF_3(UINT DSTMAC_EN18 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR18_47_32 : 16 ) _rege_ _ETH_69;
_regs_ BF_1(UINT DSTMAC_ADR18_31_0 : 32 ) _rege_ _ETH_70;
_regs_ BF_3(UINT DSTMAC_EN19 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR19_47_32 : 16 ) _rege_ _ETH_71;
_regs_ BF_1(UINT DSTMAC_ADR19_31_0 : 32 ) _rege_ _ETH_72;
_regs_ BF_3(UINT DSTMAC_EN20 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR20_47_32 : 16 ) _rege_ _ETH_73;
_regs_ BF_1(UINT DSTMAC_ADR20_31_0 : 32 ) _rege_ _ETH_74;
_regs_ BF_3(UINT DSTMAC_EN21 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR21_47_32 : 16 ) _rege_ _ETH_75;
_regs_ BF_1(UINT DSTMAC_ADR21_31_0 : 32 ) _rege_ _ETH_76;
_regs_ BF_3(UINT DSTMAC_EN22 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR22_47_32 : 16 ) _rege_ _ETH_77;
_regs_ BF_1(UINT DSTMAC_ADR22_31_0 : 32 ) _rege_ _ETH_78;
_regs_ BF_3(UINT DSTMAC_EN23 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR23_47_32 : 16 ) _rege_ _ETH_79;
_regs_ BF_1(UINT DSTMAC_ADR23_31_0 : 32 ) _rege_ _ETH_80;
_regs_ BF_3(UINT DSTMAC_EN24 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR24_47_32 : 16 ) _rege_ _ETH_81;
_regs_ BF_1(UINT DSTMAC_ADR24_31_0 : 32 ) _rege_ _ETH_82;
_regs_ BF_3(UINT DSTMAC_EN25 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR25_47_32 : 16 ) _rege_ _ETH_83;
_regs_ BF_1(UINT DSTMAC_ADR25_31_0 : 32 ) _rege_ _ETH_84;
_regs_ BF_3(UINT DSTMAC_EN26 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR26_47_32 : 16 ) _rege_ _ETH_85;
_regs_ BF_1(UINT DSTMAC_ADR26_31_0 : 32 ) _rege_ _ETH_86;
_regs_ BF_3(UINT DSTMAC_EN27 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR27_47_32 : 16 ) _rege_ _ETH_87;
_regs_ BF_1(UINT DSTMAC_ADR27_31_0 : 32 ) _rege_ _ETH_88;
_regs_ BF_3(UINT DSTMAC_EN28 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR28_47_32 : 16 ) _rege_ _ETH_89;
_regs_ BF_1(UINT DSTMAC_ADR28_31_0 : 32 ) _rege_ _ETH_90;
_regs_ BF_3(UINT DSTMAC_EN29 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR29_47_32 : 16 ) _rege_ _ETH_91;
_regs_ BF_1(UINT DSTMAC_ADR29_31_0 : 32 ) _rege_ _ETH_92;
_regs_ BF_3(UINT DSTMAC_EN30 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR30_47_32 : 16 ) _rege_ _ETH_93;
_regs_ BF_1(UINT DSTMAC_ADR30_31_0 : 32 ) _rege_ _ETH_94;
_regs_ BF_3(UINT DSTMAC_EN31 : 1 ,UINT _rev0 : 15, UINT DSTMAC_ADR31_47_32 : 16 ) _rege_ _ETH_95;
_regs_ BF_1(UINT DSTMAC_ADR31_31_0 : 32 ) _rege_ _ETH_96;
_regs_ BF_4(UINT _rev0 : 29, UINT DSTMAC_BYP : 1 ,UINT RX_CRC_EN : 1 ,UINT RX_ERR_EN : 1 ) _rege_ _ETH_97;
_regs_ BF_2(UINT _rev0 : 20, UINT RX_LTC : 12 ) _rege_ _ETH_98;
_regs_ BF_2(UINT _rev0 : 20, UINT TX_GO_LTC : 12 ) _rege_ _ETH_99;
_regs_ BF_2(UINT _rev0 : 20, UINT TX_LTC : 12 ) _rege_ _ETH_100;
_regs_ BF_3(UINT LEN_CUR : 8 ,UINT _rev0 : 14, UINT LEN_DAT : 10 ) _rege_ _ETH_131072;
_regs_ BF_8(UINT PIN0_IN : 1 ,UINT PIN0_OUT : 1 ,UINT PIN0_OEN : 1 ,UINT PIN0_IRQ_DIR : 2 ,UINT PIN0_IRQ_EN : 1 ,UINT PIN0_IRQ_CLR : 1 ,UINT PIN0_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_0;
_regs_ BF_8(UINT PIN1_IN : 1 ,UINT PIN1_OUT : 1 ,UINT PIN1_OEN : 1 ,UINT PIN1_IRQ_DIR : 2 ,UINT PIN1_IRQ_EN : 1 ,UINT PIN1_IRQ_CLR : 1 ,UINT PIN1_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_1;
_regs_ BF_8(UINT PIN2_IN : 1 ,UINT PIN2_OUT : 1 ,UINT PIN2_OEN : 1 ,UINT PIN2_IRQ_DIR : 2 ,UINT PIN2_IRQ_EN : 1 ,UINT PIN2_IRQ_CLR : 1 ,UINT PIN2_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_2;
_regs_ BF_8(UINT PIN3_IN : 1 ,UINT PIN3_OUT : 1 ,UINT PIN3_OEN : 1 ,UINT PIN3_IRQ_DIR : 2 ,UINT PIN3_IRQ_EN : 1 ,UINT PIN3_IRQ_CLR : 1 ,UINT PIN3_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_3;
_regs_ BF_8(UINT PIN4_IN : 1 ,UINT PIN4_OUT : 1 ,UINT PIN4_OEN : 1 ,UINT PIN4_IRQ_DIR : 2 ,UINT PIN4_IRQ_EN : 1 ,UINT PIN4_IRQ_CLR : 1 ,UINT PIN4_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_4;
_regs_ BF_8(UINT PIN5_IN : 1 ,UINT PIN5_OUT : 1 ,UINT PIN5_OEN : 1 ,UINT PIN5_IRQ_DIR : 2 ,UINT PIN5_IRQ_EN : 1 ,UINT PIN5_IRQ_CLR : 1 ,UINT PIN5_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_5;
_regs_ BF_8(UINT PIN6_IN : 1 ,UINT PIN6_OUT : 1 ,UINT PIN6_OEN : 1 ,UINT PIN6_IRQ_DIR : 2 ,UINT PIN6_IRQ_EN : 1 ,UINT PIN6_IRQ_CLR : 1 ,UINT PIN6_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_6;
_regs_ BF_8(UINT PIN7_IN : 1 ,UINT PIN7_OUT : 1 ,UINT PIN7_OEN : 1 ,UINT PIN7_IRQ_DIR : 2 ,UINT PIN7_IRQ_EN : 1 ,UINT PIN7_IRQ_CLR : 1 ,UINT PIN7_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_7;
_regs_ BF_8(UINT PIN8_IN : 1 ,UINT PIN8_OUT : 1 ,UINT PIN8_OEN : 1 ,UINT PIN8_IRQ_DIR : 2 ,UINT PIN8_IRQ_EN : 1 ,UINT PIN8_IRQ_CLR : 1 ,UINT PIN8_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_8;
_regs_ BF_8(UINT PIN9_IN : 1 ,UINT PIN9_OUT : 1 ,UINT PIN9_OEN : 1 ,UINT PIN9_IRQ_DIR : 2 ,UINT PIN9_IRQ_EN : 1 ,UINT PIN9_IRQ_CLR : 1 ,UINT PIN9_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_9;
_regs_ BF_8(UINT PIN10_IN : 1 ,UINT PIN10_OUT : 1 ,UINT PIN10_OEN : 1 ,UINT PIN10_IRQ_DIR : 2 ,UINT PIN10_IRQ_EN : 1 ,UINT PIN10_IRQ_CLR : 1 ,UINT PIN10_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_10;
_regs_ BF_8(UINT PIN11_IN : 1 ,UINT PIN11_OUT : 1 ,UINT PIN11_OEN : 1 ,UINT PIN11_IRQ_DIR : 2 ,UINT PIN11_IRQ_EN : 1 ,UINT PIN11_IRQ_CLR : 1 ,UINT PIN11_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_11;
_regs_ BF_8(UINT PIN12_IN : 1 ,UINT PIN12_OUT : 1 ,UINT PIN12_OEN : 1 ,UINT PIN12_IRQ_DIR : 2 ,UINT PIN12_IRQ_EN : 1 ,UINT PIN12_IRQ_CLR : 1 ,UINT PIN12_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_12;
_regs_ BF_8(UINT PIN13_IN : 1 ,UINT PIN13_OUT : 1 ,UINT PIN13_OEN : 1 ,UINT PIN13_IRQ_DIR : 2 ,UINT PIN13_IRQ_EN : 1 ,UINT PIN13_IRQ_CLR : 1 ,UINT PIN13_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_13;
_regs_ BF_8(UINT PIN14_IN : 1 ,UINT PIN14_OUT : 1 ,UINT PIN14_OEN : 1 ,UINT PIN14_IRQ_DIR : 2 ,UINT PIN14_IRQ_EN : 1 ,UINT PIN14_IRQ_CLR : 1 ,UINT PIN14_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_14;
_regs_ BF_8(UINT PIN15_IN : 1 ,UINT PIN15_OUT : 1 ,UINT PIN15_OEN : 1 ,UINT PIN15_IRQ_DIR : 2 ,UINT PIN15_IRQ_EN : 1 ,UINT PIN15_IRQ_CLR : 1 ,UINT PIN15_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_15;
_regs_ BF_8(UINT PIN16_IN : 1 ,UINT PIN16_OUT : 1 ,UINT PIN16_OEN : 1 ,UINT PIN16_IRQ_DIR : 2 ,UINT PIN16_IRQ_EN : 1 ,UINT PIN16_IRQ_CLR : 1 ,UINT PIN16_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_16;
_regs_ BF_8(UINT PIN17_IN : 1 ,UINT PIN17_OUT : 1 ,UINT PIN17_OEN : 1 ,UINT PIN17_IRQ_DIR : 2 ,UINT PIN17_IRQ_EN : 1 ,UINT PIN17_IRQ_CLR : 1 ,UINT PIN17_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_17;
_regs_ BF_8(UINT PIN18_IN : 1 ,UINT PIN18_OUT : 1 ,UINT PIN18_OEN : 1 ,UINT PIN18_IRQ_DIR : 2 ,UINT PIN18_IRQ_EN : 1 ,UINT PIN18_IRQ_CLR : 1 ,UINT PIN18_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_18;
_regs_ BF_8(UINT PIN19_IN : 1 ,UINT PIN19_OUT : 1 ,UINT PIN19_OEN : 1 ,UINT PIN19_IRQ_DIR : 2 ,UINT PIN19_IRQ_EN : 1 ,UINT PIN19_IRQ_CLR : 1 ,UINT PIN19_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_19;
_regs_ BF_8(UINT PIN20_IN : 1 ,UINT PIN20_OUT : 1 ,UINT PIN20_OEN : 1 ,UINT PIN20_IRQ_DIR : 2 ,UINT PIN20_IRQ_EN : 1 ,UINT PIN20_IRQ_CLR : 1 ,UINT PIN20_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_20;
_regs_ BF_8(UINT PIN21_IN : 1 ,UINT PIN21_OUT : 1 ,UINT PIN21_OEN : 1 ,UINT PIN21_IRQ_DIR : 2 ,UINT PIN21_IRQ_EN : 1 ,UINT PIN21_IRQ_CLR : 1 ,UINT PIN21_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_21;
_regs_ BF_8(UINT PIN22_IN : 1 ,UINT PIN22_OUT : 1 ,UINT PIN22_OEN : 1 ,UINT PIN22_IRQ_DIR : 2 ,UINT PIN22_IRQ_EN : 1 ,UINT PIN22_IRQ_CLR : 1 ,UINT PIN22_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_22;
_regs_ BF_8(UINT PIN23_IN : 1 ,UINT PIN23_OUT : 1 ,UINT PIN23_OEN : 1 ,UINT PIN23_IRQ_DIR : 2 ,UINT PIN23_IRQ_EN : 1 ,UINT PIN23_IRQ_CLR : 1 ,UINT PIN23_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_23;
_regs_ BF_8(UINT PIN24_IN : 1 ,UINT PIN24_OUT : 1 ,UINT PIN24_OEN : 1 ,UINT PIN24_IRQ_DIR : 2 ,UINT PIN24_IRQ_EN : 1 ,UINT PIN24_IRQ_CLR : 1 ,UINT PIN24_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_24;
_regs_ BF_8(UINT PIN25_IN : 1 ,UINT PIN25_OUT : 1 ,UINT PIN25_OEN : 1 ,UINT PIN25_IRQ_DIR : 2 ,UINT PIN25_IRQ_EN : 1 ,UINT PIN25_IRQ_CLR : 1 ,UINT PIN25_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_25;
_regs_ BF_8(UINT PIN26_IN : 1 ,UINT PIN26_OUT : 1 ,UINT PIN26_OEN : 1 ,UINT PIN26_IRQ_DIR : 2 ,UINT PIN26_IRQ_EN : 1 ,UINT PIN26_IRQ_CLR : 1 ,UINT PIN26_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_26;
_regs_ BF_8(UINT PIN27_IN : 1 ,UINT PIN27_OUT : 1 ,UINT PIN27_OEN : 1 ,UINT PIN27_IRQ_DIR : 2 ,UINT PIN27_IRQ_EN : 1 ,UINT PIN27_IRQ_CLR : 1 ,UINT PIN27_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_27;
_regs_ BF_8(UINT PIN28_IN : 1 ,UINT PIN28_OUT : 1 ,UINT PIN28_OEN : 1 ,UINT PIN28_IRQ_DIR : 2 ,UINT PIN28_IRQ_EN : 1 ,UINT PIN28_IRQ_CLR : 1 ,UINT PIN28_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_28;
_regs_ BF_8(UINT PIN29_IN : 1 ,UINT PIN29_OUT : 1 ,UINT PIN29_OEN : 1 ,UINT PIN29_IRQ_DIR : 2 ,UINT PIN29_IRQ_EN : 1 ,UINT PIN29_IRQ_CLR : 1 ,UINT PIN29_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_29;
_regs_ BF_8(UINT PIN30_IN : 1 ,UINT PIN30_OUT : 1 ,UINT PIN30_OEN : 1 ,UINT PIN30_IRQ_DIR : 2 ,UINT PIN30_IRQ_EN : 1 ,UINT PIN30_IRQ_CLR : 1 ,UINT PIN30_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_30;
_regs_ BF_8(UINT PIN31_IN : 1 ,UINT PIN31_OUT : 1 ,UINT PIN31_OEN : 1 ,UINT PIN31_IRQ_DIR : 2 ,UINT PIN31_IRQ_EN : 1 ,UINT PIN31_IRQ_CLR : 1 ,UINT PIN31_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_31;
_regs_ BF_8(UINT PIN32_IN : 1 ,UINT PIN32_OUT : 1 ,UINT PIN32_OEN : 1 ,UINT PIN32_IRQ_DIR : 2 ,UINT PIN32_IRQ_EN : 1 ,UINT PIN32_IRQ_CLR : 1 ,UINT PIN32_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_32;
_regs_ BF_8(UINT PIN33_IN : 1 ,UINT PIN33_OUT : 1 ,UINT PIN33_OEN : 1 ,UINT PIN33_IRQ_DIR : 2 ,UINT PIN33_IRQ_EN : 1 ,UINT PIN33_IRQ_CLR : 1 ,UINT PIN33_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_33;
_regs_ BF_8(UINT PIN34_IN : 1 ,UINT PIN34_OUT : 1 ,UINT PIN34_OEN : 1 ,UINT PIN34_IRQ_DIR : 2 ,UINT PIN34_IRQ_EN : 1 ,UINT PIN34_IRQ_CLR : 1 ,UINT PIN34_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_34;
_regs_ BF_8(UINT PIN35_IN : 1 ,UINT PIN35_OUT : 1 ,UINT PIN35_OEN : 1 ,UINT PIN35_IRQ_DIR : 2 ,UINT PIN35_IRQ_EN : 1 ,UINT PIN35_IRQ_CLR : 1 ,UINT PIN35_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_35;
_regs_ BF_8(UINT PIN36_IN : 1 ,UINT PIN36_OUT : 1 ,UINT PIN36_OEN : 1 ,UINT PIN36_IRQ_DIR : 2 ,UINT PIN36_IRQ_EN : 1 ,UINT PIN36_IRQ_CLR : 1 ,UINT PIN36_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_36;
_regs_ BF_8(UINT PIN37_IN : 1 ,UINT PIN37_OUT : 1 ,UINT PIN37_OEN : 1 ,UINT PIN37_IRQ_DIR : 2 ,UINT PIN37_IRQ_EN : 1 ,UINT PIN37_IRQ_CLR : 1 ,UINT PIN37_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_37;
_regs_ BF_8(UINT PIN38_IN : 1 ,UINT PIN38_OUT : 1 ,UINT PIN38_OEN : 1 ,UINT PIN38_IRQ_DIR : 2 ,UINT PIN38_IRQ_EN : 1 ,UINT PIN38_IRQ_CLR : 1 ,UINT PIN38_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_38;
_regs_ BF_8(UINT PIN39_IN : 1 ,UINT PIN39_OUT : 1 ,UINT PIN39_OEN : 1 ,UINT PIN39_IRQ_DIR : 2 ,UINT PIN39_IRQ_EN : 1 ,UINT PIN39_IRQ_CLR : 1 ,UINT PIN39_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_39;
_regs_ BF_8(UINT PIN40_IN : 1 ,UINT PIN40_OUT : 1 ,UINT PIN40_OEN : 1 ,UINT PIN40_IRQ_DIR : 2 ,UINT PIN40_IRQ_EN : 1 ,UINT PIN40_IRQ_CLR : 1 ,UINT PIN40_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_40;
_regs_ BF_8(UINT PIN41_IN : 1 ,UINT PIN41_OUT : 1 ,UINT PIN41_OEN : 1 ,UINT PIN41_IRQ_DIR : 2 ,UINT PIN41_IRQ_EN : 1 ,UINT PIN41_IRQ_CLR : 1 ,UINT PIN41_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_41;
_regs_ BF_8(UINT PIN42_IN : 1 ,UINT PIN42_OUT : 1 ,UINT PIN42_OEN : 1 ,UINT PIN42_IRQ_DIR : 2 ,UINT PIN42_IRQ_EN : 1 ,UINT PIN42_IRQ_CLR : 1 ,UINT PIN42_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_42;
_regs_ BF_8(UINT PIN43_IN : 1 ,UINT PIN43_OUT : 1 ,UINT PIN43_OEN : 1 ,UINT PIN43_IRQ_DIR : 2 ,UINT PIN43_IRQ_EN : 1 ,UINT PIN43_IRQ_CLR : 1 ,UINT PIN43_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_43;
_regs_ BF_8(UINT PIN44_IN : 1 ,UINT PIN44_OUT : 1 ,UINT PIN44_OEN : 1 ,UINT PIN44_IRQ_DIR : 2 ,UINT PIN44_IRQ_EN : 1 ,UINT PIN44_IRQ_CLR : 1 ,UINT PIN44_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_44;
_regs_ BF_8(UINT PIN45_IN : 1 ,UINT PIN45_OUT : 1 ,UINT PIN45_OEN : 1 ,UINT PIN45_IRQ_DIR : 2 ,UINT PIN45_IRQ_EN : 1 ,UINT PIN45_IRQ_CLR : 1 ,UINT PIN45_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_45;
_regs_ BF_8(UINT PIN46_IN : 1 ,UINT PIN46_OUT : 1 ,UINT PIN46_OEN : 1 ,UINT PIN46_IRQ_DIR : 2 ,UINT PIN46_IRQ_EN : 1 ,UINT PIN46_IRQ_CLR : 1 ,UINT PIN46_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_46;
_regs_ BF_8(UINT PIN47_IN : 1 ,UINT PIN47_OUT : 1 ,UINT PIN47_OEN : 1 ,UINT PIN47_IRQ_DIR : 2 ,UINT PIN47_IRQ_EN : 1 ,UINT PIN47_IRQ_CLR : 1 ,UINT PIN47_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_47;
_regs_ BF_8(UINT PIN48_IN : 1 ,UINT PIN48_OUT : 1 ,UINT PIN48_OEN : 1 ,UINT PIN48_IRQ_DIR : 2 ,UINT PIN48_IRQ_EN : 1 ,UINT PIN48_IRQ_CLR : 1 ,UINT PIN48_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_48;
_regs_ BF_8(UINT PIN49_IN : 1 ,UINT PIN49_OUT : 1 ,UINT PIN49_OEN : 1 ,UINT PIN49_IRQ_DIR : 2 ,UINT PIN49_IRQ_EN : 1 ,UINT PIN49_IRQ_CLR : 1 ,UINT PIN49_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_49;
_regs_ BF_8(UINT PIN50_IN : 1 ,UINT PIN50_OUT : 1 ,UINT PIN50_OEN : 1 ,UINT PIN50_IRQ_DIR : 2 ,UINT PIN50_IRQ_EN : 1 ,UINT PIN50_IRQ_CLR : 1 ,UINT PIN50_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_50;
_regs_ BF_8(UINT PIN51_IN : 1 ,UINT PIN51_OUT : 1 ,UINT PIN51_OEN : 1 ,UINT PIN51_IRQ_DIR : 2 ,UINT PIN51_IRQ_EN : 1 ,UINT PIN51_IRQ_CLR : 1 ,UINT PIN51_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_51;
_regs_ BF_8(UINT PIN52_IN : 1 ,UINT PIN52_OUT : 1 ,UINT PIN52_OEN : 1 ,UINT PIN52_IRQ_DIR : 2 ,UINT PIN52_IRQ_EN : 1 ,UINT PIN52_IRQ_CLR : 1 ,UINT PIN52_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_52;
_regs_ BF_8(UINT PIN53_IN : 1 ,UINT PIN53_OUT : 1 ,UINT PIN53_OEN : 1 ,UINT PIN53_IRQ_DIR : 2 ,UINT PIN53_IRQ_EN : 1 ,UINT PIN53_IRQ_CLR : 1 ,UINT PIN53_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_53;
_regs_ BF_8(UINT PIN54_IN : 1 ,UINT PIN54_OUT : 1 ,UINT PIN54_OEN : 1 ,UINT PIN54_IRQ_DIR : 2 ,UINT PIN54_IRQ_EN : 1 ,UINT PIN54_IRQ_CLR : 1 ,UINT PIN54_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_54;
_regs_ BF_8(UINT PIN55_IN : 1 ,UINT PIN55_OUT : 1 ,UINT PIN55_OEN : 1 ,UINT PIN55_IRQ_DIR : 2 ,UINT PIN55_IRQ_EN : 1 ,UINT PIN55_IRQ_CLR : 1 ,UINT PIN55_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_55;
_regs_ BF_8(UINT PIN56_IN : 1 ,UINT PIN56_OUT : 1 ,UINT PIN56_OEN : 1 ,UINT PIN56_IRQ_DIR : 2 ,UINT PIN56_IRQ_EN : 1 ,UINT PIN56_IRQ_CLR : 1 ,UINT PIN56_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_56;
_regs_ BF_8(UINT PIN57_IN : 1 ,UINT PIN57_OUT : 1 ,UINT PIN57_OEN : 1 ,UINT PIN57_IRQ_DIR : 2 ,UINT PIN57_IRQ_EN : 1 ,UINT PIN57_IRQ_CLR : 1 ,UINT PIN57_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_57;
_regs_ BF_8(UINT PIN58_IN : 1 ,UINT PIN58_OUT : 1 ,UINT PIN58_OEN : 1 ,UINT PIN58_IRQ_DIR : 2 ,UINT PIN58_IRQ_EN : 1 ,UINT PIN58_IRQ_CLR : 1 ,UINT PIN58_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_58;
_regs_ BF_8(UINT PIN59_IN : 1 ,UINT PIN59_OUT : 1 ,UINT PIN59_OEN : 1 ,UINT PIN59_IRQ_DIR : 2 ,UINT PIN59_IRQ_EN : 1 ,UINT PIN59_IRQ_CLR : 1 ,UINT PIN59_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_59;
_regs_ BF_8(UINT PIN60_IN : 1 ,UINT PIN60_OUT : 1 ,UINT PIN60_OEN : 1 ,UINT PIN60_IRQ_DIR : 2 ,UINT PIN60_IRQ_EN : 1 ,UINT PIN60_IRQ_CLR : 1 ,UINT PIN60_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_60;
_regs_ BF_8(UINT PIN61_IN : 1 ,UINT PIN61_OUT : 1 ,UINT PIN61_OEN : 1 ,UINT PIN61_IRQ_DIR : 2 ,UINT PIN61_IRQ_EN : 1 ,UINT PIN61_IRQ_CLR : 1 ,UINT PIN61_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_61;
_regs_ BF_8(UINT PIN62_IN : 1 ,UINT PIN62_OUT : 1 ,UINT PIN62_OEN : 1 ,UINT PIN62_IRQ_DIR : 2 ,UINT PIN62_IRQ_EN : 1 ,UINT PIN62_IRQ_CLR : 1 ,UINT PIN62_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_62;
_regs_ BF_8(UINT PIN63_IN : 1 ,UINT PIN63_OUT : 1 ,UINT PIN63_OEN : 1 ,UINT PIN63_IRQ_DIR : 2 ,UINT PIN63_IRQ_EN : 1 ,UINT PIN63_IRQ_CLR : 1 ,UINT PIN63_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_63;
_regs_ BF_8(UINT PIN64_IN : 1 ,UINT PIN64_OUT : 1 ,UINT PIN64_OEN : 1 ,UINT PIN64_IRQ_DIR : 2 ,UINT PIN64_IRQ_EN : 1 ,UINT PIN64_IRQ_CLR : 1 ,UINT PIN64_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_64;
_regs_ BF_8(UINT PIN65_IN : 1 ,UINT PIN65_OUT : 1 ,UINT PIN65_OEN : 1 ,UINT PIN65_IRQ_DIR : 2 ,UINT PIN65_IRQ_EN : 1 ,UINT PIN65_IRQ_CLR : 1 ,UINT PIN65_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_65;
_regs_ BF_8(UINT PIN66_IN : 1 ,UINT PIN66_OUT : 1 ,UINT PIN66_OEN : 1 ,UINT PIN66_IRQ_DIR : 2 ,UINT PIN66_IRQ_EN : 1 ,UINT PIN66_IRQ_CLR : 1 ,UINT PIN66_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_66;
_regs_ BF_8(UINT PIN67_IN : 1 ,UINT PIN67_OUT : 1 ,UINT PIN67_OEN : 1 ,UINT PIN67_IRQ_DIR : 2 ,UINT PIN67_IRQ_EN : 1 ,UINT PIN67_IRQ_CLR : 1 ,UINT PIN67_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_67;
_regs_ BF_8(UINT PIN68_IN : 1 ,UINT PIN68_OUT : 1 ,UINT PIN68_OEN : 1 ,UINT PIN68_IRQ_DIR : 2 ,UINT PIN68_IRQ_EN : 1 ,UINT PIN68_IRQ_CLR : 1 ,UINT PIN68_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_68;
_regs_ BF_8(UINT PIN69_IN : 1 ,UINT PIN69_OUT : 1 ,UINT PIN69_OEN : 1 ,UINT PIN69_IRQ_DIR : 2 ,UINT PIN69_IRQ_EN : 1 ,UINT PIN69_IRQ_CLR : 1 ,UINT PIN69_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_69;
_regs_ BF_8(UINT PIN70_IN : 1 ,UINT PIN70_OUT : 1 ,UINT PIN70_OEN : 1 ,UINT PIN70_IRQ_DIR : 2 ,UINT PIN70_IRQ_EN : 1 ,UINT PIN70_IRQ_CLR : 1 ,UINT PIN70_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_70;
_regs_ BF_8(UINT PIN71_IN : 1 ,UINT PIN71_OUT : 1 ,UINT PIN71_OEN : 1 ,UINT PIN71_IRQ_DIR : 2 ,UINT PIN71_IRQ_EN : 1 ,UINT PIN71_IRQ_CLR : 1 ,UINT PIN71_IRQ : 1 , UINT _rev0 : 24 ) _rege_ _GPIO_71;
_regs_ BF_2(UINT _rev0 : 24, UINT PIN_72_64_IN : 8 ) _rege_ _GPIO_72;
_regs_ BF_1(UINT PIN_63_32_IN : 32 ) _rege_ _GPIO_73;
_regs_ BF_1(UINT PIN_31_0_IN : 32 ) _rege_ _GPIO_74;
_regs_ BF_2(UINT _rev0 : 24, UINT PIN_72_64_OUT : 8 ) _rege_ _GPIO_75;
_regs_ BF_1(UINT PIN_63_32_OUT : 32 ) _rege_ _GPIO_76;
_regs_ BF_1(UINT PIN_31_0_OUT : 32 ) _rege_ _GPIO_77;
_regs_ BF_2(UINT _rev0 : 24, UINT PIN_72_64_OEN : 8 ) _rege_ _GPIO_78;
_regs_ BF_1(UINT PIN_63_32_OEN : 32 ) _rege_ _GPIO_79;
_regs_ BF_1(UINT PIN_31_0_OEN : 32 ) _rege_ _GPIO_80;
_regs_ BF_2(UINT _rev0 : 24, UINT PIN_72_64_IRQ_DIR1 : 8 ) _rege_ _GPIO_81;
_regs_ BF_1(UINT PIN_63_32_IRQ_DIR1 : 32 ) _rege_ _GPIO_82;
_regs_ BF_1(UINT PIN_31_0_IRQ_DIR1 : 32 ) _rege_ _GPIO_83;
_regs_ BF_2(UINT _rev0 : 24, UINT PIN_72_64_IRQ_DIR0 : 8 ) _rege_ _GPIO_84;
_regs_ BF_1(UINT PIN_63_32_IRQ_DIR0 : 32 ) _rege_ _GPIO_85;
_regs_ BF_1(UINT PIN_31_0_IRQ_DIR0 : 32 ) _rege_ _GPIO_86;
_regs_ BF_2(UINT _rev0 : 24, UINT PIN_72_64_IRQ_EN : 8 ) _rege_ _GPIO_87;
_regs_ BF_1(UINT PIN_63_32_IRQ_EN : 32 ) _rege_ _GPIO_88;
_regs_ BF_1(UINT PIN_31_0_IRQ_EN : 32 ) _rege_ _GPIO_89;
_regs_ BF_2(UINT _rev0 : 24, UINT PIN_72_64_IRQ_CLR : 8 ) _rege_ _GPIO_90;
_regs_ BF_1(UINT PIN_63_32_IRQ_CLR : 32 ) _rege_ _GPIO_91;
_regs_ BF_1(UINT PIN_31_0_IRQ_CLR : 32 ) _rege_ _GPIO_92;
_regs_ BF_2(UINT _rev0 : 24, UINT PIN_72_64_IRQ : 8 ) _rege_ _GPIO_93;
_regs_ BF_1(UINT PIN_63_32_IRQ : 32 ) _rege_ _GPIO_94;
_regs_ BF_1(UINT PIN_31_0_IRQ : 32 ) _rege_ _GPIO_95;
_regs_ BF_1(UINT RX_DAT : 32 ) _rege_ _SPI0_0;
_regs_ BF_1(UINT TX_DAT : 32 ) _rege_ _SPI0_1;
_regs_ BF_14(UINT EN : 1 ,UINT _rev0 : 7, UINT CLK_DIV : 8 ,UINT _rev1 : 2, UINT BIT_MODE : 1 ,UINT CS_MODE : 2 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT ONE_BITMODE : 1 ,UINT CLK_MODE : 2 ,UINT WS : 2 ,UINT RW : 2 ,UINT GO : 1 ) _rege_ _SPI0_2;
_regs_ BF_1(UINT RX_DAT : 32 ) _rege_ _SPI1_0;
_regs_ BF_1(UINT TX_DAT : 32 ) _rege_ _SPI1_1;
_regs_ BF_14(UINT EN : 1 ,UINT _rev0 : 7, UINT CLK_DIV : 8 ,UINT _rev1 : 2, UINT BIT_MODE : 1 ,UINT CS_MODE : 2 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT ONE_BITMODE : 1 ,UINT CLK_MODE : 2 ,UINT WS : 2 ,UINT RW : 2 ,UINT GO : 1 ) _rege_ _SPI1_2;
_regs_ BF_1(UINT RX_DAT : 32 ) _rege_ _SPI2_0;
_regs_ BF_1(UINT TX_DAT : 32 ) _rege_ _SPI2_1;
_regs_ BF_14(UINT EN : 1 ,UINT _rev0 : 7, UINT CLK_DIV : 8 ,UINT _rev1 : 2, UINT BIT_MODE : 1 ,UINT CS_MODE : 2 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT ONE_BITMODE : 1 ,UINT CLK_MODE : 2 ,UINT WS : 2 ,UINT RW : 2 ,UINT GO : 1 ) _rege_ _SPI2_2;
_regs_ BF_1(UINT RX_DAT : 32 ) _rege_ _SPI3_0;
_regs_ BF_1(UINT TX_DAT : 32 ) _rege_ _SPI3_1;
_regs_ BF_14(UINT EN : 1 ,UINT _rev0 : 7, UINT CLK_DIV : 8 ,UINT _rev1 : 2, UINT BIT_MODE : 1 ,UINT CS_MODE : 2 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT ONE_BITMODE : 1 ,UINT CLK_MODE : 2 ,UINT WS : 2 ,UINT RW : 2 ,UINT GO : 1 ) _rege_ _SPI3_2;
_regs_ BF_1(UINT RX_DAT : 32 ) _rege_ _SPI4_0;
_regs_ BF_1(UINT TX_DAT : 32 ) _rege_ _SPI4_1;
_regs_ BF_14(UINT EN : 1 ,UINT _rev0 : 7, UINT CLK_DIV : 8 ,UINT _rev1 : 2, UINT BIT_MODE : 1 ,UINT CS_MODE : 2 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT ONE_BITMODE : 1 ,UINT CLK_MODE : 2 ,UINT WS : 2 ,UINT RW : 2 ,UINT GO : 1 ) _rege_ _SPI4_2;
_regs_ BF_1(UINT RX_DAT : 32 ) _rege_ _SPI5_0;
_regs_ BF_1(UINT TX_DAT : 32 ) _rege_ _SPI5_1;
_regs_ BF_14(UINT EN : 1 ,UINT _rev0 : 7, UINT CLK_DIV : 8 ,UINT _rev1 : 2, UINT BIT_MODE : 1 ,UINT CS_MODE : 2 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT ONE_BITMODE : 1 ,UINT CLK_MODE : 2 ,UINT WS : 2 ,UINT RW : 2 ,UINT GO : 1 ) _rege_ _SPI5_2;
_regs_ BF_1(UINT RX_DAT : 32 ) _rege_ _SPI6_0;
_regs_ BF_1(UINT TX_DAT : 32 ) _rege_ _SPI6_1;
_regs_ BF_14(UINT EN : 1 ,UINT _rev0 : 7, UINT CLK_DIV : 8 ,UINT _rev1 : 2, UINT BIT_MODE : 1 ,UINT CS_MODE : 2 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT ONE_BITMODE : 1 ,UINT CLK_MODE : 2 ,UINT WS : 2 ,UINT RW : 2 ,UINT GO : 1 ) _rege_ _SPI6_2;
_regs_ BF_1(UINT RX_DAT : 32 ) _rege_ _SPI7_0;
_regs_ BF_1(UINT TX_DAT : 32 ) _rege_ _SPI7_1;
_regs_ BF_14(UINT EN : 1 ,UINT _rev0 : 7, UINT CLK_DIV : 8 ,UINT _rev1 : 2, UINT BIT_MODE : 1 ,UINT CS_MODE : 2 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT ONE_BITMODE : 1 ,UINT CLK_MODE : 2 ,UINT WS : 2 ,UINT RW : 2 ,UINT GO : 1 ) _rege_ _SPI7_2;
_regs_ BF_1(UINT RX_DAT : 32 ) _rege_ _SPI8_0;
_regs_ BF_1(UINT TX_DAT : 32 ) _rege_ _SPI8_1;
_regs_ BF_14(UINT EN : 1 ,UINT _rev0 : 7, UINT CLK_DIV : 8 ,UINT _rev1 : 2, UINT BIT_MODE : 1 ,UINT CS_MODE : 2 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT ONE_BITMODE : 1 ,UINT CLK_MODE : 2 ,UINT WS : 2 ,UINT RW : 2 ,UINT GO : 1 ) _rege_ _SPI8_2;
_regs_ BF_9(UINT RX_DAT : 8 ,UINT TX_DAT : 8 ,UINT _rev0 : 10, UINT ACT : 1 ,UINT MODE : 1 ,UINT BIT_MODE : 1 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ) _rege_ _I2C0_0;
_regs_ BF_2(UINT CLK_DIV : 16 , UINT _rev0 : 16 ) _rege_ _I2C0_1;
_regs_ BF_7(UINT _rev0 : 26, UINT MST_COL : 1 ,UINT MST_ACK : 1 ,UINT MST_REPEAT : 1 ,UINT MST_LAST : 1 ,UINT MST_RW : 1 ,UINT MST_GO : 1 ) _rege_ _I2C0_2;
_regs_ BF_8(UINT _rev0 : 19, UINT I2C_SDA : 1 ,UINT I2C_SCL : 1 ,UINT SLV_ACK_IN : 1 ,UINT SLV_GO : 1 ,UINT SLV_RW : 1 ,UINT SLV_ACK_OUT : 1 ,UINT SLV_ADR : 7 ) _rege_ _I2C0_3;
_regs_ BF_9(UINT RX_DAT : 8 ,UINT TX_DAT : 8 ,UINT _rev0 : 10, UINT ACT : 1 ,UINT MODE : 1 ,UINT BIT_MODE : 1 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ) _rege_ _I2C1_0;
_regs_ BF_2(UINT CLK_DIV : 16 , UINT _rev0 : 16 ) _rege_ _I2C1_1;
_regs_ BF_7(UINT _rev0 : 26, UINT MST_COL : 1 ,UINT MST_ACK : 1 ,UINT MST_REPEAT : 1 ,UINT MST_LAST : 1 ,UINT MST_RW : 1 ,UINT MST_GO : 1 ) _rege_ _I2C1_2;
_regs_ BF_8(UINT _rev0 : 19, UINT I2C_SDA : 1 ,UINT I2C_SCL : 1 ,UINT SLV_ACK_IN : 1 ,UINT SLV_GO : 1 ,UINT SLV_RW : 1 ,UINT SLV_ACK_OUT : 1 ,UINT SLV_ADR : 7 ) _rege_ _I2C1_3;
_regs_ BF_9(UINT RX_DAT : 8 ,UINT TX_DAT : 8 ,UINT _rev0 : 10, UINT ACT : 1 ,UINT MODE : 1 ,UINT BIT_MODE : 1 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ) _rege_ _I2C2_0;
_regs_ BF_2(UINT CLK_DIV : 16 , UINT _rev0 : 16 ) _rege_ _I2C2_1;
_regs_ BF_7(UINT _rev0 : 26, UINT MST_COL : 1 ,UINT MST_ACK : 1 ,UINT MST_REPEAT : 1 ,UINT MST_LAST : 1 ,UINT MST_RW : 1 ,UINT MST_GO : 1 ) _rege_ _I2C2_2;
_regs_ BF_8(UINT _rev0 : 19, UINT I2C_SDA : 1 ,UINT I2C_SCL : 1 ,UINT SLV_ACK_IN : 1 ,UINT SLV_GO : 1 ,UINT SLV_RW : 1 ,UINT SLV_ACK_OUT : 1 ,UINT SLV_ADR : 7 ) _rege_ _I2C2_3;
_regs_ BF_9(UINT RX_DAT : 8 ,UINT TX_DAT : 8 ,UINT _rev0 : 10, UINT ACT : 1 ,UINT MODE : 1 ,UINT BIT_MODE : 1 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ) _rege_ _I2C3_0;
_regs_ BF_2(UINT CLK_DIV : 16 , UINT _rev0 : 16 ) _rege_ _I2C3_1;
_regs_ BF_7(UINT _rev0 : 26, UINT MST_COL : 1 ,UINT MST_ACK : 1 ,UINT MST_REPEAT : 1 ,UINT MST_LAST : 1 ,UINT MST_RW : 1 ,UINT MST_GO : 1 ) _rege_ _I2C3_2;
_regs_ BF_8(UINT _rev0 : 19, UINT I2C_SDA : 1 ,UINT I2C_SCL : 1 ,UINT SLV_ACK_IN : 1 ,UINT SLV_GO : 1 ,UINT SLV_RW : 1 ,UINT SLV_ACK_OUT : 1 ,UINT SLV_ADR : 7 ) _rege_ _I2C3_3;
_regs_ BF_9(UINT RX_DAT : 8 ,UINT TX_DAT : 8 ,UINT _rev0 : 10, UINT ACT : 1 ,UINT MODE : 1 ,UINT BIT_MODE : 1 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ) _rege_ _I2C4_0;
_regs_ BF_2(UINT CLK_DIV : 16 , UINT _rev0 : 16 ) _rege_ _I2C4_1;
_regs_ BF_7(UINT _rev0 : 26, UINT MST_COL : 1 ,UINT MST_ACK : 1 ,UINT MST_REPEAT : 1 ,UINT MST_LAST : 1 ,UINT MST_RW : 1 ,UINT MST_GO : 1 ) _rege_ _I2C4_2;
_regs_ BF_8(UINT _rev0 : 19, UINT I2C_SDA : 1 ,UINT I2C_SCL : 1 ,UINT SLV_ACK_IN : 1 ,UINT SLV_GO : 1 ,UINT SLV_RW : 1 ,UINT SLV_ACK_OUT : 1 ,UINT SLV_ADR : 7 ) _rege_ _I2C4_3;
_regs_ BF_9(UINT RX_DAT : 8 ,UINT TX_DAT : 8 ,UINT _rev0 : 10, UINT ACT : 1 ,UINT MODE : 1 ,UINT BIT_MODE : 1 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ) _rege_ _I2C5_0;
_regs_ BF_2(UINT CLK_DIV : 16 , UINT _rev0 : 16 ) _rege_ _I2C5_1;
_regs_ BF_7(UINT _rev0 : 26, UINT MST_COL : 1 ,UINT MST_ACK : 1 ,UINT MST_REPEAT : 1 ,UINT MST_LAST : 1 ,UINT MST_RW : 1 ,UINT MST_GO : 1 ) _rege_ _I2C5_2;
_regs_ BF_8(UINT _rev0 : 19, UINT I2C_SDA : 1 ,UINT I2C_SCL : 1 ,UINT SLV_ACK_IN : 1 ,UINT SLV_GO : 1 ,UINT SLV_RW : 1 ,UINT SLV_ACK_OUT : 1 ,UINT SLV_ADR : 7 ) _rege_ _I2C5_3;
_regs_ BF_9(UINT RX_DAT : 8 ,UINT TX_DAT : 8 ,UINT _rev0 : 10, UINT ACT : 1 ,UINT MODE : 1 ,UINT BIT_MODE : 1 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ) _rege_ _I2C6_0;
_regs_ BF_2(UINT CLK_DIV : 16 , UINT _rev0 : 16 ) _rege_ _I2C6_1;
_regs_ BF_7(UINT _rev0 : 26, UINT MST_COL : 1 ,UINT MST_ACK : 1 ,UINT MST_REPEAT : 1 ,UINT MST_LAST : 1 ,UINT MST_RW : 1 ,UINT MST_GO : 1 ) _rege_ _I2C6_2;
_regs_ BF_8(UINT _rev0 : 19, UINT I2C_SDA : 1 ,UINT I2C_SCL : 1 ,UINT SLV_ACK_IN : 1 ,UINT SLV_GO : 1 ,UINT SLV_RW : 1 ,UINT SLV_ACK_OUT : 1 ,UINT SLV_ADR : 7 ) _rege_ _I2C6_3;
_regs_ BF_9(UINT RX_DAT : 8 ,UINT TX_DAT : 8 ,UINT _rev0 : 10, UINT ACT : 1 ,UINT MODE : 1 ,UINT BIT_MODE : 1 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ) _rege_ _I2C7_0;
_regs_ BF_2(UINT CLK_DIV : 16 , UINT _rev0 : 16 ) _rege_ _I2C7_1;
_regs_ BF_7(UINT _rev0 : 26, UINT MST_COL : 1 ,UINT MST_ACK : 1 ,UINT MST_REPEAT : 1 ,UINT MST_LAST : 1 ,UINT MST_RW : 1 ,UINT MST_GO : 1 ) _rege_ _I2C7_2;
_regs_ BF_8(UINT _rev0 : 19, UINT I2C_SDA : 1 ,UINT I2C_SCL : 1 ,UINT SLV_ACK_IN : 1 ,UINT SLV_GO : 1 ,UINT SLV_RW : 1 ,UINT SLV_ACK_OUT : 1 ,UINT SLV_ADR : 7 ) _rege_ _I2C7_3;
_regs_ BF_9(UINT RX_DAT : 8 ,UINT TX_DAT : 8 ,UINT _rev0 : 10, UINT ACT : 1 ,UINT MODE : 1 ,UINT BIT_MODE : 1 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ) _rege_ _I2C8_0;
_regs_ BF_2(UINT CLK_DIV : 16 , UINT _rev0 : 16 ) _rege_ _I2C8_1;
_regs_ BF_7(UINT _rev0 : 26, UINT MST_COL : 1 ,UINT MST_ACK : 1 ,UINT MST_REPEAT : 1 ,UINT MST_LAST : 1 ,UINT MST_RW : 1 ,UINT MST_GO : 1 ) _rege_ _I2C8_2;
_regs_ BF_8(UINT _rev0 : 19, UINT I2C_SDA : 1 ,UINT I2C_SCL : 1 ,UINT SLV_ACK_IN : 1 ,UINT SLV_GO : 1 ,UINT SLV_RW : 1 ,UINT SLV_ACK_OUT : 1 ,UINT SLV_ADR : 7 ) _rege_ _I2C8_3;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER0_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER0_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER1_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER1_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER2_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER2_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER3_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER3_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER4_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER4_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER5_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER5_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER6_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER6_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER7_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER7_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER8_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER8_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER9_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER9_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER10_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER10_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER11_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER11_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER12_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER12_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER13_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER13_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER14_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER14_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER15_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER15_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER16_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER16_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER17_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER17_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER18_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER18_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER19_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER19_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER20_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER20_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER21_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER21_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER22_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER22_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER23_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER23_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER24_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER24_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER25_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER25_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER26_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER26_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER27_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER27_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER28_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER28_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER29_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER29_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER30_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER30_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER31_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER31_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER32_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER32_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER33_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER33_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER34_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER34_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER35_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER35_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER36_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER36_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER37_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER37_1;
_regs_ BF_10(UINT EN : 1 ,UINT PWM_EN : 1 ,UINT CK_EN : 1 ,UINT IRQ_EN : 1 ,UINT CNT_CLR : 1 ,UINT IRQ_CLR : 1 ,UINT IRQ : 1 ,UINT _rev0 : 1, UINT DIV : 8 ,UINT LMT : 16 ) _rege_ _TIMER38_0;
_regs_ BF_2(UINT TRIG : 16 ,UINT CNT : 16 ) _rege_ _TIMER38_1;
_regs_ BF_15(UINT CLK_DIV : 12 ,UINT _rev0 : 6, UINT TX_TYPE : 1 ,UINT STOP_BIT : 1 ,UINT PARITY_MODE : 2 ,UINT TX_IRQ : 1 ,UINT TX_IRQ_EN : 1 ,UINT TX_IRQ_CLR : 1 ,UINT TX_EMPTY : 1 ,UINT TX_FULL : 1 ,UINT RX_IRQ : 1 ,UINT RX_IRQ_EN : 1 ,UINT RX_IRQ_CLR : 1 ,UINT RX_EMPTY : 1 ,UINT RX_FULL : 1 ) _rege_ _UART0_0;
_regs_ BF_2(UINT _rev0 : 24, UINT RX_DAT : 8 ) _rege_ _UART0_1;
_regs_ BF_2(UINT _rev0 : 24, UINT TX_DAT : 8 ) _rege_ _UART0_2;
_regs_ BF_2(UINT _rev0 : 12, UINT RX_LMT : 20 ) _rege_ _UART0_3;
_regs_ BF_15(UINT CLK_DIV : 12 ,UINT _rev0 : 6, UINT TX_TYPE : 1 ,UINT STOP_BIT : 1 ,UINT PARITY_MODE : 2 ,UINT TX_IRQ : 1 ,UINT TX_IRQ_EN : 1 ,UINT TX_IRQ_CLR : 1 ,UINT TX_EMPTY : 1 ,UINT TX_FULL : 1 ,UINT RX_IRQ : 1 ,UINT RX_IRQ_EN : 1 ,UINT RX_IRQ_CLR : 1 ,UINT RX_EMPTY : 1 ,UINT RX_FULL : 1 ) _rege_ _UART1_0;
_regs_ BF_2(UINT _rev0 : 24, UINT RX_DAT : 8 ) _rege_ _UART1_1;
_regs_ BF_2(UINT _rev0 : 24, UINT TX_DAT : 8 ) _rege_ _UART1_2;
_regs_ BF_2(UINT _rev0 : 12, UINT RX_LMT : 20 ) _rege_ _UART1_3;
_regs_ BF_15(UINT CLK_DIV : 12 ,UINT _rev0 : 6, UINT TX_TYPE : 1 ,UINT STOP_BIT : 1 ,UINT PARITY_MODE : 2 ,UINT TX_IRQ : 1 ,UINT TX_IRQ_EN : 1 ,UINT TX_IRQ_CLR : 1 ,UINT TX_EMPTY : 1 ,UINT TX_FULL : 1 ,UINT RX_IRQ : 1 ,UINT RX_IRQ_EN : 1 ,UINT RX_IRQ_CLR : 1 ,UINT RX_EMPTY : 1 ,UINT RX_FULL : 1 ) _rege_ _UART2_0;
_regs_ BF_2(UINT _rev0 : 24, UINT RX_DAT : 8 ) _rege_ _UART2_1;
_regs_ BF_2(UINT _rev0 : 24, UINT TX_DAT : 8 ) _rege_ _UART2_2;
_regs_ BF_2(UINT _rev0 : 12, UINT RX_LMT : 20 ) _rege_ _UART2_3;
_regs_ BF_15(UINT CLK_DIV : 12 ,UINT _rev0 : 6, UINT TX_TYPE : 1 ,UINT STOP_BIT : 1 ,UINT PARITY_MODE : 2 ,UINT TX_IRQ : 1 ,UINT TX_IRQ_EN : 1 ,UINT TX_IRQ_CLR : 1 ,UINT TX_EMPTY : 1 ,UINT TX_FULL : 1 ,UINT RX_IRQ : 1 ,UINT RX_IRQ_EN : 1 ,UINT RX_IRQ_CLR : 1 ,UINT RX_EMPTY : 1 ,UINT RX_FULL : 1 ) _rege_ _UART3_0;
_regs_ BF_2(UINT _rev0 : 24, UINT RX_DAT : 8 ) _rege_ _UART3_1;
_regs_ BF_2(UINT _rev0 : 24, UINT TX_DAT : 8 ) _rege_ _UART3_2;
_regs_ BF_2(UINT _rev0 : 12, UINT RX_LMT : 20 ) _rege_ _UART3_3;
_regs_ BF_15(UINT CLK_DIV : 12 ,UINT _rev0 : 6, UINT TX_TYPE : 1 ,UINT STOP_BIT : 1 ,UINT PARITY_MODE : 2 ,UINT TX_IRQ : 1 ,UINT TX_IRQ_EN : 1 ,UINT TX_IRQ_CLR : 1 ,UINT TX_EMPTY : 1 ,UINT TX_FULL : 1 ,UINT RX_IRQ : 1 ,UINT RX_IRQ_EN : 1 ,UINT RX_IRQ_CLR : 1 ,UINT RX_EMPTY : 1 ,UINT RX_FULL : 1 ) _rege_ _UART4_0;
_regs_ BF_2(UINT _rev0 : 24, UINT RX_DAT : 8 ) _rege_ _UART4_1;
_regs_ BF_2(UINT _rev0 : 24, UINT TX_DAT : 8 ) _rege_ _UART4_2;
_regs_ BF_2(UINT _rev0 : 12, UINT RX_LMT : 20 ) _rege_ _UART4_3;
_regs_ BF_15(UINT CLK_DIV : 12 ,UINT _rev0 : 6, UINT TX_TYPE : 1 ,UINT STOP_BIT : 1 ,UINT PARITY_MODE : 2 ,UINT TX_IRQ : 1 ,UINT TX_IRQ_EN : 1 ,UINT TX_IRQ_CLR : 1 ,UINT TX_EMPTY : 1 ,UINT TX_FULL : 1 ,UINT RX_IRQ : 1 ,UINT RX_IRQ_EN : 1 ,UINT RX_IRQ_CLR : 1 ,UINT RX_EMPTY : 1 ,UINT RX_FULL : 1 ) _rege_ _UART5_0;
_regs_ BF_2(UINT _rev0 : 24, UINT RX_DAT : 8 ) _rege_ _UART5_1;
_regs_ BF_2(UINT _rev0 : 24, UINT TX_DAT : 8 ) _rege_ _UART5_2;
_regs_ BF_2(UINT _rev0 : 12, UINT RX_LMT : 20 ) _rege_ _UART5_3;
_regs_ BF_15(UINT CLK_DIV : 12 ,UINT _rev0 : 6, UINT TX_TYPE : 1 ,UINT STOP_BIT : 1 ,UINT PARITY_MODE : 2 ,UINT TX_IRQ : 1 ,UINT TX_IRQ_EN : 1 ,UINT TX_IRQ_CLR : 1 ,UINT TX_EMPTY : 1 ,UINT TX_FULL : 1 ,UINT RX_IRQ : 1 ,UINT RX_IRQ_EN : 1 ,UINT RX_IRQ_CLR : 1 ,UINT RX_EMPTY : 1 ,UINT RX_FULL : 1 ) _rege_ _UART6_0;
_regs_ BF_2(UINT _rev0 : 24, UINT RX_DAT : 8 ) _rege_ _UART6_1;
_regs_ BF_2(UINT _rev0 : 24, UINT TX_DAT : 8 ) _rege_ _UART6_2;
_regs_ BF_2(UINT _rev0 : 12, UINT RX_LMT : 20 ) _rege_ _UART6_3;
_regs_ BF_15(UINT CLK_DIV : 12 ,UINT _rev0 : 6, UINT TX_TYPE : 1 ,UINT STOP_BIT : 1 ,UINT PARITY_MODE : 2 ,UINT TX_IRQ : 1 ,UINT TX_IRQ_EN : 1 ,UINT TX_IRQ_CLR : 1 ,UINT TX_EMPTY : 1 ,UINT TX_FULL : 1 ,UINT RX_IRQ : 1 ,UINT RX_IRQ_EN : 1 ,UINT RX_IRQ_CLR : 1 ,UINT RX_EMPTY : 1 ,UINT RX_FULL : 1 ) _rege_ _UART7_0;
_regs_ BF_2(UINT _rev0 : 24, UINT RX_DAT : 8 ) _rege_ _UART7_1;
_regs_ BF_2(UINT _rev0 : 24, UINT TX_DAT : 8 ) _rege_ _UART7_2;
_regs_ BF_2(UINT _rev0 : 12, UINT RX_LMT : 20 ) _rege_ _UART7_3;
_regs_ BF_15(UINT CLK_DIV : 12 ,UINT _rev0 : 6, UINT TX_TYPE : 1 ,UINT STOP_BIT : 1 ,UINT PARITY_MODE : 2 ,UINT TX_IRQ : 1 ,UINT TX_IRQ_EN : 1 ,UINT TX_IRQ_CLR : 1 ,UINT TX_EMPTY : 1 ,UINT TX_FULL : 1 ,UINT RX_IRQ : 1 ,UINT RX_IRQ_EN : 1 ,UINT RX_IRQ_CLR : 1 ,UINT RX_EMPTY : 1 ,UINT RX_FULL : 1 ) _rege_ _UART8_0;
_regs_ BF_2(UINT _rev0 : 24, UINT RX_DAT : 8 ) _rege_ _UART8_1;
_regs_ BF_2(UINT _rev0 : 24, UINT TX_DAT : 8 ) _rege_ _UART8_2;
_regs_ BF_2(UINT _rev0 : 12, UINT RX_LMT : 20 ) _rege_ _UART8_3;
_regs_ BF_1(UINT SRC : 32 ) _rege_ _AES_0;
_regs_ BF_1(UINT DST : 32 ) _rege_ _AES_1;
_regs_ BF_1(UINT LEN : 32 ) _rege_ _AES_2;
_regs_ BF_8(UINT _rev0 : 25, UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT KEY_LEN : 1 ,UINT CBC_EN : 1 ,UINT MODE : 1 ,UINT REQ : 1 ) _rege_ _AES_3;
_regs_ BF_1(UINT KEY_255_224 : 32 ) _rege_ _AES_4;
_regs_ BF_1(UINT KEY_223_192 : 32 ) _rege_ _AES_5;
_regs_ BF_1(UINT KEY_191_160 : 32 ) _rege_ _AES_6;
_regs_ BF_1(UINT KEY_159_128 : 32 ) _rege_ _AES_7;
_regs_ BF_1(UINT KEY_127_96 : 32 ) _rege_ _AES_8;
_regs_ BF_1(UINT KEY_95_64 : 32 ) _rege_ _AES_9;
_regs_ BF_1(UINT KEY_63_32 : 32 ) _rege_ _AES_10;
_regs_ BF_1(UINT KEY_31_0 : 32 ) _rege_ _AES_11;
_regs_ BF_1(UINT IV_127_96 : 32 ) _rege_ _AES_12;
_regs_ BF_1(UINT IV_95_64 : 32 ) _rege_ _AES_13;
_regs_ BF_1(UINT IV_63_32 : 32 ) _rege_ _AES_14;
_regs_ BF_1(UINT IV_31_0 : 32 ) _rege_ _AES_15;
_regs_ BF_1(UINT SRC : 32 ) _rege_ _SHA_0;
_regs_ BF_1(UINT LEN : 32 ) _rege_ _SHA_2;
_regs_ BF_7(UINT _rev0 : 26, UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT _rev1 : 1, UINT MODE : 1 ,UINT REQ : 1 ) _rege_ _SHA_3;
_regs_ BF_1(UINT DIGEST_255_224 : 32 ) _rege_ _SHA_4;
_regs_ BF_1(UINT DIGEST_223_192 : 32 ) _rege_ _SHA_5;
_regs_ BF_1(UINT DIGEST_191_160 : 32 ) _rege_ _SHA_6;
_regs_ BF_1(UINT DIGEST_159_128 : 32 ) _rege_ _SHA_7;
_regs_ BF_1(UINT DIGEST_127_96 : 32 ) _rege_ _SHA_8;
_regs_ BF_1(UINT DIGEST_95_64 : 32 ) _rege_ _SHA_9;
_regs_ BF_1(UINT DIGEST_63_32 : 32 ) _rege_ _SHA_10;
_regs_ BF_1(UINT DIGEST_31_0 : 32 ) _rege_ _SHA_11;
_regs_ BF_5(UINT _rev0 : 28, UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT GO : 1 ) _rege_ _CHKSUM_0;
_regs_ BF_1(UINT ADR : 32 ) _rege_ _CHKSUM_1;
_regs_ BF_1(UINT LEN : 32 ) _rege_ _CHKSUM_2;
_regs_ BF_2(UINT _rev0 : 16, UINT DAT : 16 ) _rege_ _CHKSUM_3;
_regs_ BF_13(UINT RST_RID : 4 ,UINT _rev0 : 13, UINT RST_MIPI : 1 ,UINT RST_PERI_REG : 1 ,UINT RST_H265_REG : 1 ,UINT MCU_PHY_RST : 1 ,UINT RST_NPU_REG : 1 ,UINT RST_CPU3 : 1 ,UINT RST_CPU2 : 1 ,UINT RST_CPU1 : 1 ,UINT RST_CPU0 : 1 ,UINT RST_ISP : 1 , UINT _rev1 : 5 ) _rege_ _SYS_0;
_regs_ BF_12(UINT _rev0 : 11, UINT NPU_PD : 1 ,UINT CPU3_PD : 1 ,UINT CPU2_PD : 1 ,UINT CPU1_PD : 1 ,UINT CPU0_PD : 1 ,UINT _rev1 : 6, UINT NPU_CKSEL : 2 ,UINT CPU3_CKSEL : 2 ,UINT CPU2_CKSEL : 2 ,UINT CPU1_CKSEL : 2 ,UINT CPU0_CKSEL : 2 ) _rege_ _SYS_1;
_regs_ BF_6(UINT _rev0 : 10, UINT PLL0_P : 6 ,UINT _rev1 : 2, UINT PLL0_M : 10 ,UINT _rev2 : 1, UINT PLL0_S : 3 ) _rege_ _SYS_2;
_regs_ BF_19(UINT _rev0 : 2, UINT PLL0_VCO_BOOST : 1 ,UINT PLL0_LRD_EN : 1 ,UINT PLL0_RSEL : 4 ,UINT PLL0_PBIAS_CTRL_EN : 1 ,UINT PLL0_FOUT_MASK : 1 ,UINT PLL0_PBIAS_CTRL : 1 ,UINT PLL0_ICP : 2 ,UINT PLL0_BYPS : 1 ,UINT PLL0_CON_IN : 2 ,UINT PLL0_CON_OUT : 2 ,UINT PLL0_CON_DLY : 2 ,UINT PLL0_CON_REV : 2 ,UINT PLL0_TST_EN : 1 ,UINT PLL0_TST_AFC : 5 ,UINT PLL0_FSEL : 1 ,UINT PLL0_FEED_EN : 1 ,UINT PLL0_LOCK_EN : 1 ,UINT PLL0_AFCINI_SEL : 1 ) _rege_ _SYS_3;
_regs_ BF_6(UINT _rev0 : 10, UINT PLL1_P : 6 ,UINT _rev1 : 2, UINT PLL1_M : 10 ,UINT _rev2 : 1, UINT PLL1_S : 3 ) _rege_ _SYS_4;
_regs_ BF_20(UINT PLL1_PWDN : 1 ,UINT _rev0 : 1, UINT PLL1_VCO_BOOST : 1 ,UINT PLL1_LRD_EN : 1 ,UINT PLL1_RSEL : 4 ,UINT PLL1_PBIAS_CTRL_EN : 1 ,UINT PLL1_FOUT_MASK : 1 ,UINT PLL1_PBIAS_CTRL : 1 ,UINT PLL1_ICP : 2 ,UINT PLL1_BYPS : 1 ,UINT PLL1_CON_IN : 2 ,UINT PLL1_CON_OUT : 2 ,UINT PLL1_CON_DLY : 2 ,UINT PLL1_CON_REV : 2 ,UINT PLL1_TST_EN : 1 ,UINT PLL1_TST_AFC : 5 ,UINT PLL1_FSEL : 1 ,UINT PLL1_FEED_EN : 1 ,UINT PLL1_LOCK_EN : 1 ,UINT PLL1_AFCINI_SEL : 1 ) _rege_ _SYS_5;
_regs_ BF_6(UINT _rev0 : 10, UINT PLL2_P : 6 ,UINT _rev1 : 2, UINT PLL2_M : 10 ,UINT _rev2 : 1, UINT PLL2_S : 3 ) _rege_ _SYS_6;
_regs_ BF_20(UINT PLL2_PWDN : 1 ,UINT _rev0 : 1, UINT PLL2_VCO_BOOST : 1 ,UINT PLL2_LRD_EN : 1 ,UINT PLL2_RSEL : 4 ,UINT PLL2_PBIAS_CTRL_EN : 1 ,UINT PLL2_FOUT_MASK : 1 ,UINT PLL2_PBIAS_CTRL : 1 ,UINT PLL2_ICP : 2 ,UINT PLL2_BYPS : 1 ,UINT PLL2_CON_IN : 2 ,UINT PLL2_CON_OUT : 2 ,UINT PLL2_CON_DLY : 2 ,UINT PLL2_CON_REV : 2 ,UINT PLL2_TST_EN : 1 ,UINT PLL2_TST_AFC : 5 ,UINT PLL2_FSEL : 1 ,UINT PLL2_FEED_EN : 1 ,UINT PLL2_LOCK_EN : 1 ,UINT PLL2_AFCINI_SEL : 1 ) _rege_ _SYS_7;
_regs_ BF_1(UINT WDT_CNT : 32 ) _rege_ _SYS_16;
_regs_ BF_1(UINT WDT_LMT : 32 ) _rege_ _SYS_17;
_regs_ BF_3(UINT _rev0 : 30, UINT WDT_EN : 1 ,UINT WDT_CLR : 1 ) _rege_ _SYS_18;
_regs_ BF_1(UINT MARK0 : 32 ) _rege_ _SYS_19;
_regs_ BF_1(UINT MARK1 : 32 ) _rege_ _SYS_20;
_regs_ BF_1(UINT MARK2 : 32 ) _rege_ _SYS_21;
_regs_ BF_1(UINT MARK3 : 32 ) _rege_ _SYS_22;
_regs_ BF_1(UINT MARK4 : 32 ) _rege_ _SYS_23;
_regs_ BF_3(UINT RTL_DAY : 8 ,UINT RTL_MONTH : 8 ,UINT RTL_YEAR : 16 ) _rege_ _SYS_24;
_regs_ BF_4(UINT _rev0 : 8, UINT RTL_SECOND : 8 ,UINT RTL_MINUTE : 8 ,UINT RTL_HOUR : 8 ) _rege_ _SYS_25;
_regs_ BF_6(UINT _rev0 : 27, UINT ATOB_IRQ : 1 ,UINT ATOB_IRQ_EN : 1 ,UINT ATOB_IRQ_CLR : 1 ,UINT BTOA_BUSY : 1 ,UINT BTOA_CALL : 1 ) _rege_ _SYS_32;
_regs_ BF_6(UINT _rev0 : 27, UINT BTOA_IRQ : 1 ,UINT BTOA_IRQ_EN : 1 ,UINT BTOA_IRQ_CLR : 1 ,UINT ATOB_BUSY : 1 ,UINT ATOB_CALL : 1 ) _rege_ _SYS_33;
_regs_ BF_1(UINT REG0 : 32 ) _rege_ _SYS_34;
_regs_ BF_1(UINT REG1 : 32 ) _rege_ _SYS_35;
_regs_ BF_1(UINT REG2 : 32 ) _rege_ _SYS_36;
_regs_ BF_1(UINT REG3 : 32 ) _rege_ _SYS_37;
_regs_ BF_1(UINT REG4 : 32 ) _rege_ _SYS_38;
_regs_ BF_1(UINT REG5 : 32 ) _rege_ _SYS_39;
_regs_ BF_1(UINT REG6 : 32 ) _rege_ _SYS_40;
_regs_ BF_1(UINT REG7 : 32 ) _rege_ _SYS_41;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX0 : 1 ) _rege_ _SYS_42;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX1 : 1 ) _rege_ _SYS_43;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX2 : 1 ) _rege_ _SYS_44;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX3 : 1 ) _rege_ _SYS_45;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX4 : 1 ) _rege_ _SYS_46;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX5 : 1 ) _rege_ _SYS_47;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX6 : 1 ) _rege_ _SYS_48;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX7 : 1 ) _rege_ _SYS_49;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX8 : 1 ) _rege_ _SYS_50;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX9 : 1 ) _rege_ _SYS_51;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX10 : 1 ) _rege_ _SYS_52;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX11 : 1 ) _rege_ _SYS_53;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX12 : 1 ) _rege_ _SYS_54;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX13 : 1 ) _rege_ _SYS_55;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX14 : 1 ) _rege_ _SYS_56;
_regs_ BF_2(UINT _rev0 : 31, UINT MUTEX15 : 1 ) _rege_ _SYS_57;
_regs_ BF_2(UINT _rev0 : 31, UINT INTGEN_SEL : 1 ) _rege_ _SYS_64;
_regs_ BF_5(UINT _rev0 : 28, UINT OIC_CS_DISABLE_RDI : 1 ,UINT OIC_CS_INORDER_RESP2 : 1 ,UINT OIC_CS_INORDER_RESP1 : 1 ,UINT OIC_CS_INORDER_RESP0 : 1 ) _rege_ _SYS_65;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO0_MUX : 2 ) _rege_ _SYS_256;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO1_MUX : 2 ) _rege_ _SYS_257;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO2_MUX : 2 ) _rege_ _SYS_258;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO3_MUX : 2 ) _rege_ _SYS_259;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO4_MUX : 2 ) _rege_ _SYS_260;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO5_MUX : 2 ) _rege_ _SYS_261;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO6_MUX : 2 ) _rege_ _SYS_262;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO7_MUX : 2 ) _rege_ _SYS_263;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO8_MUX : 2 ) _rege_ _SYS_264;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO9_MUX : 2 ) _rege_ _SYS_265;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO10_MUX : 2 ) _rege_ _SYS_266;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO11_MUX : 2 ) _rege_ _SYS_267;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO12_MUX : 2 ) _rege_ _SYS_268;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO13_MUX : 2 ) _rege_ _SYS_269;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO14_MUX : 2 ) _rege_ _SYS_270;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO15_MUX : 2 ) _rege_ _SYS_271;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO16_MUX : 2 ) _rege_ _SYS_272;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO17_MUX : 2 ) _rege_ _SYS_273;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO18_MUX : 2 ) _rege_ _SYS_274;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO19_MUX : 2 ) _rege_ _SYS_275;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO20_MUX : 2 ) _rege_ _SYS_276;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO21_MUX : 2 ) _rege_ _SYS_277;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO22_MUX : 2 ) _rege_ _SYS_278;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO23_MUX : 2 ) _rege_ _SYS_279;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO24_MUX : 2 ) _rege_ _SYS_280;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO25_MUX : 2 ) _rege_ _SYS_281;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO26_MUX : 2 ) _rege_ _SYS_282;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO27_MUX : 2 ) _rege_ _SYS_283;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO28_MUX : 2 ) _rege_ _SYS_284;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO29_MUX : 2 ) _rege_ _SYS_285;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO30_MUX : 2 ) _rege_ _SYS_286;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO31_MUX : 2 ) _rege_ _SYS_287;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO32_MUX : 2 ) _rege_ _SYS_288;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO33_MUX : 2 ) _rege_ _SYS_289;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO34_MUX : 2 ) _rege_ _SYS_290;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO35_MUX : 2 ) _rege_ _SYS_291;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO36_MUX : 2 ) _rege_ _SYS_292;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO37_MUX : 2 ) _rege_ _SYS_293;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO38_MUX : 2 ) _rege_ _SYS_294;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO39_MUX : 2 ) _rege_ _SYS_295;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO40_MUX : 2 ) _rege_ _SYS_296;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO41_MUX : 2 ) _rege_ _SYS_297;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO42_MUX : 2 ) _rege_ _SYS_298;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO43_MUX : 2 ) _rege_ _SYS_299;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO44_MUX : 2 ) _rege_ _SYS_300;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO45_MUX : 2 ) _rege_ _SYS_301;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO46_MUX : 2 ) _rege_ _SYS_302;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO47_MUX : 2 ) _rege_ _SYS_303;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO48_MUX : 2 ) _rege_ _SYS_304;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO49_MUX : 2 ) _rege_ _SYS_305;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO50_MUX : 2 ) _rege_ _SYS_306;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO51_MUX : 2 ) _rege_ _SYS_307;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO52_MUX : 2 ) _rege_ _SYS_308;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO53_MUX : 2 ) _rege_ _SYS_309;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO54_MUX : 2 ) _rege_ _SYS_310;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO55_MUX : 2 ) _rege_ _SYS_311;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO56_MUX : 2 ) _rege_ _SYS_312;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO57_MUX : 2 ) _rege_ _SYS_313;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO58_MUX : 2 ) _rege_ _SYS_314;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO59_MUX : 2 ) _rege_ _SYS_315;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO60_MUX : 2 ) _rege_ _SYS_316;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO61_MUX : 2 ) _rege_ _SYS_317;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO62_MUX : 2 ) _rege_ _SYS_318;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO63_MUX : 2 ) _rege_ _SYS_319;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO64_MUX : 2 ) _rege_ _SYS_320;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO65_MUX : 2 ) _rege_ _SYS_321;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO66_MUX : 2 ) _rege_ _SYS_322;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO67_MUX : 2 ) _rege_ _SYS_323;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO68_MUX : 2 ) _rege_ _SYS_324;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO69_MUX : 2 ) _rege_ _SYS_325;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO70_MUX : 2 ) _rege_ _SYS_326;
_regs_ BF_2(UINT _rev0 : 30, UINT GPIO71_MUX : 2 ) _rege_ _SYS_327;
_regs_ BF_15(UINT _rev0 : 2, UINT JTAG_TDO_DS : 2 ,UINT JTAG_TDO_SR : 1 ,UINT _rev1 : 8, UINT JTAG_TDI_IS : 1 ,UINT JTAG_TDI_PS : 1 ,UINT JTAG_TDI_PE : 1 ,UINT _rev2 : 5, UINT JTAG_TMS_IS : 1 ,UINT JTAG_TMS_PS : 1 ,UINT JTAG_TMS_PE : 1 ,UINT _rev3 : 5, UINT JTAG_TCK_IS : 1 ,UINT JTAG_TCK_PS : 1 ,UINT JTAG_TCK_PE : 1 ) _rege_ _SYS_512;
_regs_ BF_24(UINT _rev0 : 2, UINT SFLS_DQ3_DS : 2 ,UINT SFLS_DQ3_SR : 1 ,UINT SFLS_DQ3_IS : 1 ,UINT SFLS_DQ3_PS : 1 ,UINT SFLS_DQ3_PE : 1 ,UINT _rev1 : 2, UINT SFLS_DQ2_DS : 2 ,UINT SFLS_DQ2_SR : 1 ,UINT SFLS_DQ2_IS : 1 ,UINT SFLS_DQ2_PS : 1 ,UINT SFLS_DQ2_PE : 1 ,UINT _rev2 : 2, UINT SFLS_DQ1_DS : 2 ,UINT SFLS_DQ1_SR : 1 ,UINT SFLS_DQ1_IS : 1 ,UINT SFLS_DQ1_PS : 1 ,UINT SFLS_DQ1_PE : 1 ,UINT _rev3 : 2, UINT SFLS_DQ0_DS : 2 ,UINT SFLS_DQ0_SR : 1 ,UINT SFLS_DQ0_IS : 1 ,UINT SFLS_DQ0_PS : 1 ,UINT SFLS_DQ0_PE : 1 ) _rege_ _SYS_513;
_regs_ BF_7(UINT _rev0 : 18, UINT SFLS_CS_DS : 2 ,UINT SFLS_CS_SR : 1 ,UINT _rev1 : 5, UINT SFLS_CK_DS : 2 ,UINT SFLS_CK_SR : 1 , UINT _rev2 : 3 ) _rege_ _SYS_514;
_regs_ BF_24(UINT _rev0 : 2, UINT SDIO0DAT3_DS : 2 ,UINT SDIO0DAT3_SR : 1 ,UINT SDIO0DAT3_IS : 1 ,UINT SDIO0DAT3_PS : 1 ,UINT SDIO0DAT3_PE : 1 ,UINT _rev1 : 2, UINT SDIO0DAT2_DS : 2 ,UINT SDIO0DAT2_SR : 1 ,UINT SDIO0DAT2_IS : 1 ,UINT SDIO0DAT2_PS : 1 ,UINT SDIO0DAT2_PE : 1 ,UINT _rev2 : 2, UINT SDIO0DAT1_DS : 2 ,UINT SDIO0DAT1_SR : 1 ,UINT SDIO0DAT1_IS : 1 ,UINT SDIO0DAT1_PS : 1 ,UINT SDIO0DAT1_PE : 1 ,UINT _rev3 : 2, UINT SDIO0DAT0_DS : 2 ,UINT SDIO0DAT0_SR : 1 ,UINT SDIO0DAT0_IS : 1 ,UINT SDIO0DAT0_PS : 1 ,UINT SDIO0DAT0_PE : 1 ) _rege_ _SYS_515;
_regs_ BF_12(UINT _rev0 : 18, UINT SDIO0CK_DS : 2 ,UINT SDIO0CK_SR : 1 ,UINT SDIO0CK_IS : 1 ,UINT SDIO0CK_PS : 1 ,UINT SDIO0CK_PE : 1 ,UINT _rev1 : 2, UINT SDIO0CMD_DS : 2 ,UINT SDIO0CMD_SR : 1 ,UINT SDIO0CMD_IS : 1 ,UINT SDIO0CMD_PS : 1 ,UINT SDIO0CMD_PE : 1 ) _rege_ _SYS_516;
_regs_ BF_24(UINT _rev0 : 2, UINT SDIO1DAT3_DS : 2 ,UINT SDIO1DAT3_SR : 1 ,UINT SDIO1DAT3_IS : 1 ,UINT SDIO1DAT3_PS : 1 ,UINT SDIO1DAT3_PE : 1 ,UINT _rev1 : 2, UINT SDIO1DAT2_DS : 2 ,UINT SDIO1DAT2_SR : 1 ,UINT SDIO1DAT2_IS : 1 ,UINT SDIO1DAT2_PS : 1 ,UINT SDIO1DAT2_PE : 1 ,UINT _rev2 : 2, UINT SDIO1DAT1_DS : 2 ,UINT SDIO1DAT1_SR : 1 ,UINT SDIO1DAT1_IS : 1 ,UINT SDIO1DAT1_PS : 1 ,UINT SDIO1DAT1_PE : 1 ,UINT _rev3 : 2, UINT SDIO1DAT0_DS : 2 ,UINT SDIO1DAT0_SR : 1 ,UINT SDIO1DAT0_IS : 1 ,UINT SDIO1DAT0_PS : 1 ,UINT SDIO1DAT0_PE : 1 ) _rege_ _SYS_517;
_regs_ BF_12(UINT _rev0 : 18, UINT SDIO1CK_DS : 2 ,UINT SDIO1CK_SR : 1 ,UINT SDIO1CK_IS : 1 ,UINT SDIO1CK_PS : 1 ,UINT SDIO1CK_PE : 1 ,UINT _rev1 : 2, UINT SDIO1CMD_DS : 2 ,UINT SDIO1CMD_SR : 1 ,UINT SDIO1CMD_IS : 1 ,UINT SDIO1CMD_PS : 1 ,UINT SDIO1CMD_PE : 1 ) _rege_ _SYS_518;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO03_DS : 2 ,UINT GPIO03_SR : 1 ,UINT GPIO03_IS : 1 ,UINT GPIO03_PS : 1 ,UINT GPIO03_PE : 1 ,UINT _rev1 : 2, UINT GPIO02_DS : 2 ,UINT GPIO02_SR : 1 ,UINT GPIO02_IS : 1 ,UINT GPIO02_PS : 1 ,UINT GPIO02_PE : 1 ,UINT _rev2 : 2, UINT GPIO01_DS : 2 ,UINT GPIO01_SR : 1 ,UINT GPIO01_IS : 1 ,UINT GPIO01_PS : 1 ,UINT GPIO01_PE : 1 ,UINT _rev3 : 2, UINT GPIO00_DS : 2 ,UINT GPIO00_SR : 1 ,UINT GPIO00_IS : 1 ,UINT GPIO00_PS : 1 ,UINT GPIO00_PE : 1 ) _rege_ _SYS_519;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO07_DS : 2 ,UINT GPIO07_SR : 1 ,UINT GPIO07_IS : 1 ,UINT GPIO07_PS : 1 ,UINT GPIO07_PE : 1 ,UINT _rev1 : 2, UINT GPIO06_DS : 2 ,UINT GPIO06_SR : 1 ,UINT GPIO06_IS : 1 ,UINT GPIO06_PS : 1 ,UINT GPIO06_PE : 1 ,UINT _rev2 : 2, UINT GPIO05_DS : 2 ,UINT GPIO05_SR : 1 ,UINT GPIO05_IS : 1 ,UINT GPIO05_PS : 1 ,UINT GPIO05_PE : 1 ,UINT _rev3 : 2, UINT GPIO04_DS : 2 ,UINT GPIO04_SR : 1 ,UINT GPIO04_IS : 1 ,UINT GPIO04_PS : 1 ,UINT GPIO04_PE : 1 ) _rege_ _SYS_520;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO11_DS : 2 ,UINT GPIO11_SR : 1 ,UINT GPIO11_IS : 1 ,UINT GPIO11_PS : 1 ,UINT GPIO11_PE : 1 ,UINT _rev1 : 2, UINT GPIO10_DS : 2 ,UINT GPIO10_SR : 1 ,UINT GPIO10_IS : 1 ,UINT GPIO10_PS : 1 ,UINT GPIO10_PE : 1 ,UINT _rev2 : 2, UINT GPIO09_DS : 2 ,UINT GPIO09_SR : 1 ,UINT GPIO09_IS : 1 ,UINT GPIO09_PS : 1 ,UINT GPIO09_PE : 1 ,UINT _rev3 : 2, UINT GPIO08_DS : 2 ,UINT GPIO08_SR : 1 ,UINT GPIO08_IS : 1 ,UINT GPIO08_PS : 1 ,UINT GPIO08_PE : 1 ) _rege_ _SYS_521;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO15_DS : 2 ,UINT GPIO15_SR : 1 ,UINT GPIO15_IS : 1 ,UINT GPIO15_PS : 1 ,UINT GPIO15_PE : 1 ,UINT _rev1 : 2, UINT GPIO14_DS : 2 ,UINT GPIO14_SR : 1 ,UINT GPIO14_IS : 1 ,UINT GPIO14_PS : 1 ,UINT GPIO14_PE : 1 ,UINT _rev2 : 2, UINT GPIO13_DS : 2 ,UINT GPIO13_SR : 1 ,UINT GPIO13_IS : 1 ,UINT GPIO13_PS : 1 ,UINT GPIO13_PE : 1 ,UINT _rev3 : 2, UINT GPIO12_DS : 2 ,UINT GPIO12_SR : 1 ,UINT GPIO12_IS : 1 ,UINT GPIO12_PS : 1 ,UINT GPIO12_PE : 1 ) _rege_ _SYS_522;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO19_DS : 2 ,UINT GPIO19_SR : 1 ,UINT GPIO19_IS : 1 ,UINT GPIO19_PS : 1 ,UINT GPIO19_PE : 1 ,UINT _rev1 : 2, UINT GPIO18_DS : 2 ,UINT GPIO18_SR : 1 ,UINT GPIO18_IS : 1 ,UINT GPIO18_PS : 1 ,UINT GPIO18_PE : 1 ,UINT _rev2 : 2, UINT GPIO17_DS : 2 ,UINT GPIO17_SR : 1 ,UINT GPIO17_IS : 1 ,UINT GPIO17_PS : 1 ,UINT GPIO17_PE : 1 ,UINT _rev3 : 2, UINT GPIO16_DS : 2 ,UINT GPIO16_SR : 1 ,UINT GPIO16_IS : 1 ,UINT GPIO16_PS : 1 ,UINT GPIO16_PE : 1 ) _rege_ _SYS_523;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO23_DS : 2 ,UINT GPIO23_SR : 1 ,UINT GPIO23_IS : 1 ,UINT GPIO23_PS : 1 ,UINT GPIO23_PE : 1 ,UINT _rev1 : 2, UINT GPIO22_DS : 2 ,UINT GPIO22_SR : 1 ,UINT GPIO22_IS : 1 ,UINT GPIO22_PS : 1 ,UINT GPIO22_PE : 1 ,UINT _rev2 : 2, UINT GPIO21_DS : 2 ,UINT GPIO21_SR : 1 ,UINT GPIO21_IS : 1 ,UINT GPIO21_PS : 1 ,UINT GPIO21_PE : 1 ,UINT _rev3 : 2, UINT GPIO20_DS : 2 ,UINT GPIO20_SR : 1 ,UINT GPIO20_IS : 1 ,UINT GPIO20_PS : 1 ,UINT GPIO20_PE : 1 ) _rege_ _SYS_524;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO27_DS : 2 ,UINT GPIO27_SR : 1 ,UINT GPIO27_IS : 1 ,UINT GPIO27_PS : 1 ,UINT GPIO27_PE : 1 ,UINT _rev1 : 2, UINT GPIO26_DS : 2 ,UINT GPIO26_SR : 1 ,UINT GPIO26_IS : 1 ,UINT GPIO26_PS : 1 ,UINT GPIO26_PE : 1 ,UINT _rev2 : 2, UINT GPIO25_DS : 2 ,UINT GPIO25_SR : 1 ,UINT GPIO25_IS : 1 ,UINT GPIO25_PS : 1 ,UINT GPIO25_PE : 1 ,UINT _rev3 : 2, UINT GPIO24_DS : 2 ,UINT GPIO24_SR : 1 ,UINT GPIO24_IS : 1 ,UINT GPIO24_PS : 1 ,UINT GPIO24_PE : 1 ) _rege_ _SYS_525;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO31_DS : 2 ,UINT GPIO31_SR : 1 ,UINT GPIO31_IS : 1 ,UINT GPIO31_PS : 1 ,UINT GPIO31_PE : 1 ,UINT _rev1 : 2, UINT GPIO30_DS : 2 ,UINT GPIO30_SR : 1 ,UINT GPIO30_IS : 1 ,UINT GPIO30_PS : 1 ,UINT GPIO30_PE : 1 ,UINT _rev2 : 2, UINT GPIO29_DS : 2 ,UINT GPIO29_SR : 1 ,UINT GPIO29_IS : 1 ,UINT GPIO29_PS : 1 ,UINT GPIO29_PE : 1 ,UINT _rev3 : 2, UINT GPIO28_DS : 2 ,UINT GPIO28_SR : 1 ,UINT GPIO28_IS : 1 ,UINT GPIO28_PS : 1 ,UINT GPIO28_PE : 1 ) _rege_ _SYS_526;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO35_DS : 2 ,UINT GPIO35_SR : 1 ,UINT GPIO35_IS : 1 ,UINT GPIO35_PS : 1 ,UINT GPIO35_PE : 1 ,UINT _rev1 : 2, UINT GPIO34_DS : 2 ,UINT GPIO34_SR : 1 ,UINT GPIO34_IS : 1 ,UINT GPIO34_PS : 1 ,UINT GPIO34_PE : 1 ,UINT _rev2 : 2, UINT GPIO33_DS : 2 ,UINT GPIO33_SR : 1 ,UINT GPIO33_IS : 1 ,UINT GPIO33_PS : 1 ,UINT GPIO33_PE : 1 ,UINT _rev3 : 2, UINT GPIO32_DS : 2 ,UINT GPIO32_SR : 1 ,UINT GPIO32_IS : 1 ,UINT GPIO32_PS : 1 ,UINT GPIO32_PE : 1 ) _rege_ _SYS_527;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO39_DS : 2 ,UINT GPIO39_SR : 1 ,UINT GPIO39_IS : 1 ,UINT GPIO39_PS : 1 ,UINT GPIO39_PE : 1 ,UINT _rev1 : 2, UINT GPIO38_DS : 2 ,UINT GPIO38_SR : 1 ,UINT GPIO38_IS : 1 ,UINT GPIO38_PS : 1 ,UINT GPIO38_PE : 1 ,UINT _rev2 : 2, UINT GPIO37_DS : 2 ,UINT GPIO37_SR : 1 ,UINT GPIO37_IS : 1 ,UINT GPIO37_PS : 1 ,UINT GPIO37_PE : 1 ,UINT _rev3 : 2, UINT GPIO36_DS : 2 ,UINT GPIO36_SR : 1 ,UINT GPIO36_IS : 1 ,UINT GPIO36_PS : 1 ,UINT GPIO36_PE : 1 ) _rege_ _SYS_528;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO43_DS : 2 ,UINT GPIO43_SR : 1 ,UINT GPIO43_IS : 1 ,UINT GPIO43_PS : 1 ,UINT GPIO43_PE : 1 ,UINT _rev1 : 2, UINT GPIO42_DS : 2 ,UINT GPIO42_SR : 1 ,UINT GPIO42_IS : 1 ,UINT GPIO42_PS : 1 ,UINT GPIO42_PE : 1 ,UINT _rev2 : 2, UINT GPIO41_DS : 2 ,UINT GPIO41_SR : 1 ,UINT GPIO41_IS : 1 ,UINT GPIO41_PS : 1 ,UINT GPIO41_PE : 1 ,UINT _rev3 : 2, UINT GPIO40_DS : 2 ,UINT GPIO40_SR : 1 ,UINT GPIO40_IS : 1 ,UINT GPIO40_PS : 1 ,UINT GPIO40_PE : 1 ) _rege_ _SYS_529;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO47_DS : 2 ,UINT GPIO47_SR : 1 ,UINT GPIO47_IS : 1 ,UINT GPIO47_PS : 1 ,UINT GPIO47_PE : 1 ,UINT _rev1 : 2, UINT GPIO46_DS : 2 ,UINT GPIO46_SR : 1 ,UINT GPIO46_IS : 1 ,UINT GPIO46_PS : 1 ,UINT GPIO46_PE : 1 ,UINT _rev2 : 2, UINT GPIO45_DS : 2 ,UINT GPIO45_SR : 1 ,UINT GPIO45_IS : 1 ,UINT GPIO45_PS : 1 ,UINT GPIO45_PE : 1 ,UINT _rev3 : 2, UINT GPIO44_DS : 2 ,UINT GPIO44_SR : 1 ,UINT GPIO44_IS : 1 ,UINT GPIO44_PS : 1 ,UINT GPIO44_PE : 1 ) _rege_ _SYS_530;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO51_DS : 2 ,UINT GPIO51_SR : 1 ,UINT GPIO51_IS : 1 ,UINT GPIO51_PS : 1 ,UINT GPIO51_PE : 1 ,UINT _rev1 : 2, UINT GPIO50_DS : 2 ,UINT GPIO50_SR : 1 ,UINT GPIO50_IS : 1 ,UINT GPIO50_PS : 1 ,UINT GPIO50_PE : 1 ,UINT _rev2 : 2, UINT GPIO49_DS : 2 ,UINT GPIO49_SR : 1 ,UINT GPIO49_IS : 1 ,UINT GPIO49_PS : 1 ,UINT GPIO49_PE : 1 ,UINT _rev3 : 2, UINT GPIO48_DS : 2 ,UINT GPIO48_SR : 1 ,UINT GPIO48_IS : 1 ,UINT GPIO48_PS : 1 ,UINT GPIO48_PE : 1 ) _rege_ _SYS_531;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO55_DS : 2 ,UINT GPIO55_SR : 1 ,UINT GPIO55_IS : 1 ,UINT GPIO55_PS : 1 ,UINT GPIO55_PE : 1 ,UINT _rev1 : 2, UINT GPIO54_DS : 2 ,UINT GPIO54_SR : 1 ,UINT GPIO54_IS : 1 ,UINT GPIO54_PS : 1 ,UINT GPIO54_PE : 1 ,UINT _rev2 : 2, UINT GPIO53_DS : 2 ,UINT GPIO53_SR : 1 ,UINT GPIO53_IS : 1 ,UINT GPIO53_PS : 1 ,UINT GPIO53_PE : 1 ,UINT _rev3 : 2, UINT GPIO52_DS : 2 ,UINT GPIO52_SR : 1 ,UINT GPIO52_IS : 1 ,UINT GPIO52_PS : 1 ,UINT GPIO52_PE : 1 ) _rege_ _SYS_532;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO59_DS : 2 ,UINT GPIO59_SR : 1 ,UINT GPIO59_IS : 1 ,UINT GPIO59_PS : 1 ,UINT GPIO59_PE : 1 ,UINT _rev1 : 2, UINT GPIO58_DS : 2 ,UINT GPIO58_SR : 1 ,UINT GPIO58_IS : 1 ,UINT GPIO58_PS : 1 ,UINT GPIO58_PE : 1 ,UINT _rev2 : 2, UINT GPIO57_DS : 2 ,UINT GPIO57_SR : 1 ,UINT GPIO57_IS : 1 ,UINT GPIO57_PS : 1 ,UINT GPIO57_PE : 1 ,UINT _rev3 : 2, UINT GPIO56_DS : 2 ,UINT GPIO56_SR : 1 ,UINT GPIO56_IS : 1 ,UINT GPIO56_PS : 1 ,UINT GPIO56_PE : 1 ) _rege_ _SYS_533;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO63_DS : 2 ,UINT GPIO63_SR : 1 ,UINT GPIO63_IS : 1 ,UINT GPIO63_PS : 1 ,UINT GPIO63_PE : 1 ,UINT _rev1 : 2, UINT GPIO62_DS : 2 ,UINT GPIO62_SR : 1 ,UINT GPIO62_IS : 1 ,UINT GPIO62_PS : 1 ,UINT GPIO62_PE : 1 ,UINT _rev2 : 2, UINT GPIO61_DS : 2 ,UINT GPIO61_SR : 1 ,UINT GPIO61_IS : 1 ,UINT GPIO61_PS : 1 ,UINT GPIO61_PE : 1 ,UINT _rev3 : 2, UINT GPIO60_DS : 2 ,UINT GPIO60_SR : 1 ,UINT GPIO60_IS : 1 ,UINT GPIO60_PS : 1 ,UINT GPIO60_PE : 1 ) _rege_ _SYS_534;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO67_DS : 2 ,UINT GPIO67_SR : 1 ,UINT GPIO67_IS : 1 ,UINT GPIO67_PS : 1 ,UINT GPIO67_PE : 1 ,UINT _rev1 : 2, UINT GPIO66_DS : 2 ,UINT GPIO66_SR : 1 ,UINT GPIO66_IS : 1 ,UINT GPIO66_PS : 1 ,UINT GPIO66_PE : 1 ,UINT _rev2 : 2, UINT GPIO65_DS : 2 ,UINT GPIO65_SR : 1 ,UINT GPIO65_IS : 1 ,UINT GPIO65_PS : 1 ,UINT GPIO65_PE : 1 ,UINT _rev3 : 2, UINT GPIO64_DS : 2 ,UINT GPIO64_SR : 1 ,UINT GPIO64_IS : 1 ,UINT GPIO64_PS : 1 ,UINT GPIO64_PE : 1 ) _rege_ _SYS_535;
_regs_ BF_24(UINT _rev0 : 2, UINT GPIO71_DS : 2 ,UINT GPIO71_SR : 1 ,UINT GPIO71_IS : 1 ,UINT GPIO71_PS : 1 ,UINT GPIO71_PE : 1 ,UINT _rev1 : 2, UINT GPIO70_DS : 2 ,UINT GPIO70_SR : 1 ,UINT GPIO70_IS : 1 ,UINT GPIO70_PS : 1 ,UINT GPIO70_PE : 1 ,UINT _rev2 : 2, UINT GPIO69_DS : 2 ,UINT GPIO69_SR : 1 ,UINT GPIO69_IS : 1 ,UINT GPIO69_PS : 1 ,UINT GPIO69_PE : 1 ,UINT _rev3 : 2, UINT GPIO68_DS : 2 ,UINT GPIO68_SR : 1 ,UINT GPIO68_IS : 1 ,UINT GPIO68_PS : 1 ,UINT GPIO68_PE : 1 ) _rege_ _SYS_536;
_regs_ BF_15(UINT _rev0 : 10, UINT SS_CKO_DS : 2 ,UINT SS_CKO_SR : 1 ,UINT _rev1 : 5, UINT SS_VS_DS : 2 ,UINT SS_VS_SR : 1 ,UINT SS_VS_IS : 1 ,UINT SS_VS_PS : 1 ,UINT SS_VS_PE : 1 ,UINT _rev2 : 2, UINT SS_HS_DS : 2 ,UINT SS_HS_SR : 1 ,UINT SS_HS_IS : 1 ,UINT SS_HS_PS : 1 ,UINT SS_HS_PE : 1 ) _rege_ _SYS_537;
_regs_ BF_1(UINT DIN_IS : 32 ) _rege_ _SYS_538;
_regs_ BF_15(UINT _rev0 : 10, UINT DENO_DS : 2 ,UINT DENO_SR : 1 ,UINT _rev1 : 5, UINT VSO_DS : 2 ,UINT VSO_SR : 1 ,UINT VSO_IS : 1 ,UINT VSO_PS : 1 ,UINT VSO_PE : 1 ,UINT _rev2 : 2, UINT HSO_DS : 2 ,UINT HSO_SR : 1 ,UINT HSO_IS : 1 ,UINT HSO_PS : 1 ,UINT HSO_PE : 1 ) _rege_ _SYS_539;
_regs_ BF_10(UINT _rev0 : 10, UINT DCKO2_DS : 2 ,UINT DCKO2_SR : 1 ,UINT _rev1 : 5, UINT DCKO1_DS : 2 ,UINT DCKO1_SR : 1 ,UINT _rev2 : 5, UINT DCKO0_DS : 2 ,UINT DCKO0_SR : 1 , UINT _rev3 : 3 ) _rege_ _SYS_540;
_regs_ BF_13(UINT _rev0 : 2, UINT DO03_DS : 2 ,UINT DO03_SR : 1 ,UINT _rev1 : 5, UINT DO02_DS : 2 ,UINT DO02_SR : 1 ,UINT _rev2 : 5, UINT DO01_DS : 2 ,UINT DO01_SR : 1 ,UINT _rev3 : 5, UINT DO00_DS : 2 ,UINT DO00_SR : 1 , UINT _rev4 : 3 ) _rege_ _SYS_541;
_regs_ BF_13(UINT _rev0 : 2, UINT DO07_DS : 2 ,UINT DO07_SR : 1 ,UINT _rev1 : 5, UINT DO06_DS : 2 ,UINT DO06_SR : 1 ,UINT _rev2 : 5, UINT DO05_DS : 2 ,UINT DO05_SR : 1 ,UINT _rev3 : 5, UINT DO04_DS : 2 ,UINT DO04_SR : 1 , UINT _rev4 : 3 ) _rege_ _SYS_542;
_regs_ BF_13(UINT _rev0 : 2, UINT DO11_DS : 2 ,UINT DO11_SR : 1 ,UINT _rev1 : 5, UINT DO10_DS : 2 ,UINT DO10_SR : 1 ,UINT _rev2 : 5, UINT DO09_DS : 2 ,UINT DO09_SR : 1 ,UINT _rev3 : 5, UINT DO08_DS : 2 ,UINT DO08_SR : 1 , UINT _rev4 : 3 ) _rege_ _SYS_543;
_regs_ BF_13(UINT _rev0 : 2, UINT DO15_DS : 2 ,UINT DO15_SR : 1 ,UINT _rev1 : 5, UINT DO14_DS : 2 ,UINT DO14_SR : 1 ,UINT _rev2 : 5, UINT DO13_DS : 2 ,UINT DO13_SR : 1 ,UINT _rev3 : 5, UINT DO12_DS : 2 ,UINT DO12_SR : 1 , UINT _rev4 : 3 ) _rege_ _SYS_544;
_regs_ BF_13(UINT _rev0 : 2, UINT DO19_DS : 2 ,UINT DO19_SR : 1 ,UINT _rev1 : 5, UINT DO18_DS : 2 ,UINT DO18_SR : 1 ,UINT _rev2 : 5, UINT DO17_DS : 2 ,UINT DO17_SR : 1 ,UINT _rev3 : 5, UINT DO16_DS : 2 ,UINT DO16_SR : 1 , UINT _rev4 : 3 ) _rege_ _SYS_545;
_regs_ BF_13(UINT _rev0 : 2, UINT DO23_DS : 2 ,UINT DO23_SR : 1 ,UINT _rev1 : 5, UINT DO22_DS : 2 ,UINT DO22_SR : 1 ,UINT _rev2 : 5, UINT DO21_DS : 2 ,UINT DO21_SR : 1 ,UINT _rev3 : 5, UINT DO20_DS : 2 ,UINT DO20_SR : 1 , UINT _rev4 : 3 ) _rege_ _SYS_546;
_regs_ BF_12(UINT _rev0 : 1, UINT DONE_VAL : 1 ,UINT _rev1 : 2, UINT DONE_PTR : 6 ,UINT _rev2 : 2, UINT JOB_PTR : 6 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT VALUE : 8 ,UINT MODE : 2 ,UINT GO : 1 ) _rege_ _BDMA0_0;
_regs_ BF_1(UINT SRC : 32 ) _rege_ _BDMA0_1;
_regs_ BF_1(UINT DST : 32 ) _rege_ _BDMA0_2;
_regs_ BF_1(UINT LEN : 32 ) _rege_ _BDMA0_3;
_regs_ BF_12(UINT _rev0 : 1, UINT DONE_VAL : 1 ,UINT _rev1 : 2, UINT DONE_PTR : 6 ,UINT _rev2 : 2, UINT JOB_PTR : 6 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT VALUE : 8 ,UINT MODE : 2 ,UINT GO : 1 ) _rege_ _BDMA1_0;
_regs_ BF_1(UINT SRC : 32 ) _rege_ _BDMA1_1;
_regs_ BF_1(UINT DST : 32 ) _rege_ _BDMA1_2;
_regs_ BF_1(UINT LEN : 32 ) _rege_ _BDMA1_3;
_regs_ BF_12(UINT _rev0 : 1, UINT DONE_VAL : 1 ,UINT _rev1 : 2, UINT DONE_PTR : 6 ,UINT _rev2 : 2, UINT JOB_PTR : 6 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT VALUE : 8 ,UINT MODE : 2 ,UINT GO : 1 ) _rege_ _BDMA2_0;
_regs_ BF_1(UINT SRC : 32 ) _rege_ _BDMA2_1;
_regs_ BF_1(UINT DST : 32 ) _rege_ _BDMA2_2;
_regs_ BF_1(UINT LEN : 32 ) _rege_ _BDMA2_3;
_regs_ BF_12(UINT _rev0 : 1, UINT DONE_VAL : 1 ,UINT _rev1 : 2, UINT DONE_PTR : 6 ,UINT _rev2 : 2, UINT JOB_PTR : 6 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT VALUE : 8 ,UINT MODE : 2 ,UINT GO : 1 ) _rege_ _BDMA3_0;
_regs_ BF_1(UINT SRC : 32 ) _rege_ _BDMA3_1;
_regs_ BF_1(UINT DST : 32 ) _rege_ _BDMA3_2;
_regs_ BF_1(UINT LEN : 32 ) _rege_ _BDMA3_3;
_regs_ BF_3(UINT _rev0 : 30, UINT W_ENDIAN : 1 ,UINT R_ENDIAN : 1 ) _rege_ _BDMA_16;
_regs_ BF_12(UINT _rev0 : 1, UINT DONE_VAL : 1 ,UINT _rev1 : 2, UINT DONE_PTR : 6 ,UINT _rev2 : 2, UINT JOB_PTR : 6 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT VALUE : 8 ,UINT MODE : 2 ,UINT GO : 1 ) _rege_ _CDMA0_0;
_regs_ BF_1(UINT SRC : 32 ) _rege_ _CDMA0_1;
_regs_ BF_1(UINT DST : 32 ) _rege_ _CDMA0_2;
_regs_ BF_1(UINT LEN : 32 ) _rege_ _CDMA0_3;
_regs_ BF_12(UINT _rev0 : 1, UINT DONE_VAL : 1 ,UINT _rev1 : 2, UINT DONE_PTR : 6 ,UINT _rev2 : 2, UINT JOB_PTR : 6 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT VALUE : 8 ,UINT MODE : 2 ,UINT GO : 1 ) _rege_ _CDMA1_0;
_regs_ BF_1(UINT SRC : 32 ) _rege_ _CDMA1_1;
_regs_ BF_1(UINT DST : 32 ) _rege_ _CDMA1_2;
_regs_ BF_1(UINT LEN : 32 ) _rege_ _CDMA1_3;
_regs_ BF_12(UINT _rev0 : 1, UINT DONE_VAL : 1 ,UINT _rev1 : 2, UINT DONE_PTR : 6 ,UINT _rev2 : 2, UINT JOB_PTR : 6 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT VALUE : 8 ,UINT MODE : 2 ,UINT GO : 1 ) _rege_ _CDMA2_0;
_regs_ BF_1(UINT SRC : 32 ) _rege_ _CDMA2_1;
_regs_ BF_1(UINT DST : 32 ) _rege_ _CDMA2_2;
_regs_ BF_1(UINT LEN : 32 ) _rege_ _CDMA2_3;
_regs_ BF_12(UINT _rev0 : 1, UINT DONE_VAL : 1 ,UINT _rev1 : 2, UINT DONE_PTR : 6 ,UINT _rev2 : 2, UINT JOB_PTR : 6 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT VALUE : 8 ,UINT MODE : 2 ,UINT GO : 1 ) _rege_ _CDMA3_0;
_regs_ BF_1(UINT SRC : 32 ) _rege_ _CDMA3_1;
_regs_ BF_1(UINT DST : 32 ) _rege_ _CDMA3_2;
_regs_ BF_1(UINT LEN : 32 ) _rege_ _CDMA3_3;
_regs_ BF_22(UINT _rev0 : 1, UINT TXLR : 2 ,UINT TXEDN : 1 ,UINT RXEDN : 1 ,UINT TX_IRQ : 1 ,UINT RX_IRQ : 1 ,UINT TX_IRQ_CLR : 1 ,UINT RX_IRQ_CLR : 1 ,UINT TX_IRQ_EN : 1 ,UINT RX_IRQ_EN : 1 ,UINT BYTE : 2 ,UINT RDBYTE : 2 ,UINT WRBYTE : 2 ,UINT TXDW : 2 ,UINT RXDW : 2 ,UINT TXCODEC : 2 ,UINT RXCODEC : 2 ,UINT TXMODE : 2 ,UINT RXMODE : 2 ,UINT TXEN : 1 ,UINT RXEN : 1 ,UINT MODE : 1 ) _rege_ _I2S_0;
_regs_ BF_1(UINT ADRW : 32 ) _rege_ _I2S_1;
_regs_ BF_1(UINT ADRR : 32 ) _rege_ _I2S_2;
_regs_ BF_6(UINT _rev0 : 8, UINT RDLEN : 2 ,UINT WRLEN : 2 ,UINT RDDW : 2 ,UINT WRDW : 2 ,UINT SCKCNT : 16 ) _rege_ _I2S_3;
_regs_ BF_1(UINT RX_ADDR : 32 ) _rege_ _I2S_4;
_regs_ BF_1(UINT TX_ADDR : 32 ) _rege_ _I2S_5;
_regs_ BF_32(UINT G_ISP : 1 ,UINT ISP30 : 1 ,UINT ISP29 : 1 ,UINT ISP28 : 1 ,UINT ISP27 : 1 ,UINT ISP26 : 1 ,UINT ISP25 : 1 ,UINT ISP24 : 1 ,UINT ISP23 : 1 ,UINT ISP22 : 1 ,UINT ISP21 : 1 ,UINT ISP20 : 1 ,UINT ISP19 : 1 ,UINT ISP18 : 1 ,UINT ISP17 : 1 ,UINT ISP16 : 1 ,UINT ISP15 : 1 ,UINT ISP14 : 1 ,UINT ISP13 : 1 ,UINT ISP12 : 1 ,UINT ISP11 : 1 ,UINT ISP10 : 1 ,UINT ISP9 : 1 ,UINT ISP8 : 1 ,UINT ISP7 : 1 ,UINT ISP6 : 1 ,UINT ISP5 : 1 ,UINT ISP4 : 1 ,UINT ISP3 : 1 ,UINT ISP2 : 1 ,UINT ISP1 : 1 ,UINT ISP0 : 1 ) _rege_ _IRQ_0;
_regs_ BF_3(UINT G_VCODEC : 1 ,UINT _rev0 : 30, UINT VCODEC : 1 ) _rege_ _IRQ_1;
_regs_ BF_4(UINT G_DMA0 : 1 ,UINT _rev0 : 29, UINT BDMA0 : 1 ,UINT CDMA0 : 1 ) _rege_ _IRQ_2;
_regs_ BF_4(UINT G_DMA1 : 1 ,UINT _rev0 : 29, UINT BDMA1 : 1 ,UINT CDMA1 : 1 ) _rege_ _IRQ_3;
_regs_ BF_4(UINT G_DMA2 : 1 ,UINT _rev0 : 29, UINT BDMA2 : 1 ,UINT CDMA2 : 1 ) _rege_ _IRQ_4;
_regs_ BF_4(UINT G_DMA3 : 1 ,UINT _rev0 : 29, UINT BDMA3 : 1 ,UINT CDMA3 : 1 ) _rege_ _IRQ_5;
_regs_ BF_3(UINT G_CORE0 : 1 ,UINT _rev0 : 30, UINT ATOB : 1 ) _rege_ _IRQ_6;
_regs_ BF_3(UINT G_CORE1 : 1 ,UINT _rev0 : 30, UINT BTOA : 1 ) _rege_ _IRQ_7;
_regs_ BF_4(UINT G_ETH : 1 ,UINT _rev0 : 29, UINT ETH_RX : 1 ,UINT ETH_TX : 1 ) _rege_ _IRQ_8;
_regs_ BF_3(UINT G_SDIO0 : 1 ,UINT _rev0 : 30, UINT SDIO0 : 1 ) _rege_ _IRQ_9;
_regs_ BF_3(UINT G_SDIO1 : 1 ,UINT _rev0 : 30, UINT SDIO1 : 1 ) _rege_ _IRQ_10;
_regs_ BF_3(UINT G_NPU : 1 ,UINT _rev0 : 30, UINT NPU : 1 ) _rege_ _IRQ_11;
_regs_ BF_4(UINT G_I2S : 1 ,UINT _rev0 : 29, UINT I2S_TX : 1 ,UINT I2S_RX : 1 ) _rege_ _IRQ_12;
_regs_ BF_4(UINT G_USB : 1 ,UINT _rev0 : 29, UINT USB_DMA : 1 ,UINT USB_MC : 1 ) _rege_ _IRQ_13;
_regs_ BF_3(UINT G_CAL : 1 ,UINT _rev0 : 30, UINT CHKSUM : 1 ) _rege_ _IRQ_14;
_regs_ BF_3(UINT G_HASH : 1 ,UINT _rev0 : 30, UINT SHA : 1 ) _rege_ _IRQ_15;
_regs_ BF_3(UINT G_ENCRYPT : 1 ,UINT _rev0 : 30, UINT AES : 1 ) _rege_ _IRQ_16;
_regs_ BF_3(UINT G_OIC : 1 ,UINT _rev0 : 30, UINT OIC : 1 ) _rege_ _IRQ_17;
_regs_ BF_11(UINT G_SOURCE19 : 1 ,UINT _rev0 : 22, UINT SPI0 : 1 ,UINT TIMER3 : 1 ,UINT TIMER2 : 1 ,UINT TIMER1 : 1 ,UINT TIMER0 : 1 ,UINT GPIO3 : 1 ,UINT GPIO2 : 1 ,UINT GPIO1 : 1 ,UINT GPIO0 : 1 ) _rege_ _IRQ_18;
_regs_ BF_12(UINT G_SOURCE20 : 1 ,UINT _rev0 : 21, UINT I2C0 : 1 ,UINT UART0 : 1 ,UINT TIMER7 : 1 ,UINT TIMER6 : 1 ,UINT TIMER5 : 1 ,UINT TIMER4 : 1 ,UINT GPIO7 : 1 ,UINT GPIO6 : 1 ,UINT GPIO5 : 1 ,UINT GPIO4 : 1 ) _rege_ _IRQ_19;
_regs_ BF_11(UINT G_SOURCE21 : 1 ,UINT _rev0 : 22, UINT SPI1 : 1 ,UINT TIMER11 : 1 ,UINT TIMER10 : 1 ,UINT TIMER9 : 1 ,UINT TIMER8 : 1 ,UINT GPIO11 : 1 ,UINT GPIO10 : 1 ,UINT GPIO9 : 1 ,UINT GPIO8 : 1 ) _rege_ _IRQ_20;
_regs_ BF_12(UINT G_SOURCE22 : 1 ,UINT _rev0 : 21, UINT I2C1 : 1 ,UINT UART1 : 1 ,UINT TIMER15 : 1 ,UINT TIMER14 : 1 ,UINT TIMER13 : 1 ,UINT TIMER12 : 1 ,UINT GPIO15 : 1 ,UINT GPIO14 : 1 ,UINT GPIO13 : 1 ,UINT GPIO12 : 1 ) _rege_ _IRQ_21;
_regs_ BF_7(UINT G_SOURCE23 : 1 ,UINT _rev0 : 26, UINT SPI2 : 1 ,UINT GPIO19 : 1 ,UINT GPIO18 : 1 ,UINT GPIO17 : 1 ,UINT GPIO16 : 1 ) _rege_ _IRQ_22;
_regs_ BF_12(UINT G_SOURCE24 : 1 ,UINT _rev0 : 21, UINT I2C2 : 1 ,UINT UART2 : 1 ,UINT TIMER19 : 1 ,UINT TIMER18 : 1 ,UINT TIMER17 : 1 ,UINT TIMER16 : 1 ,UINT GPIO23 : 1 ,UINT GPIO22 : 1 ,UINT GPIO21 : 1 ,UINT GPIO20 : 1 ) _rege_ _IRQ_23;
_regs_ BF_11(UINT G_SOURCE25 : 1 ,UINT _rev0 : 22, UINT SPI3 : 1 ,UINT TIMER23 : 1 ,UINT TIMER22 : 1 ,UINT TIMER21 : 1 ,UINT TIMER20 : 1 ,UINT GPIO27 : 1 ,UINT GPIO26 : 1 ,UINT GPIO25 : 1 ,UINT GPIO24 : 1 ) _rege_ _IRQ_24;
_regs_ BF_12(UINT G_SOURCE26 : 1 ,UINT _rev0 : 21, UINT I2C3 : 1 ,UINT UART3 : 1 ,UINT TIMER27 : 1 ,UINT TIMER26 : 1 ,UINT TIMER25 : 1 ,UINT TIMER24 : 1 ,UINT GPIO31 : 1 ,UINT GPIO30 : 1 ,UINT GPIO29 : 1 ,UINT GPIO28 : 1 ) _rege_ _IRQ_25;
_regs_ BF_11(UINT G_SOURCE27 : 1 ,UINT _rev0 : 22, UINT SPI4 : 1 ,UINT TIMER31 : 1 ,UINT TIMER30 : 1 ,UINT TIMER29 : 1 ,UINT TIMER28 : 1 ,UINT GPIO35 : 1 ,UINT GPIO34 : 1 ,UINT GPIO33 : 1 ,UINT GPIO32 : 1 ) _rege_ _IRQ_26;
_regs_ BF_8(UINT G_SOURCE28 : 1 ,UINT _rev0 : 25, UINT I2C4 : 1 ,UINT UART4 : 1 ,UINT GPIO39 : 1 ,UINT GPIO38 : 1 ,UINT GPIO37 : 1 ,UINT GPIO36 : 1 ) _rege_ _IRQ_27;
_regs_ BF_7(UINT G_SOURCE29 : 1 ,UINT _rev0 : 26, UINT SPI5 : 1 ,UINT GPIO43 : 1 ,UINT GPIO42 : 1 ,UINT GPIO41 : 1 ,UINT GPIO40 : 1 ) _rege_ _IRQ_28;
_regs_ BF_8(UINT G_SOURCE30 : 1 ,UINT _rev0 : 25, UINT I2C5 : 1 ,UINT UART5 : 1 ,UINT GPIO47 : 1 ,UINT GPIO46 : 1 ,UINT GPIO45 : 1 ,UINT GPIO44 : 1 ) _rege_ _IRQ_29;
_regs_ BF_7(UINT G_SOURCE31 : 1 ,UINT _rev0 : 26, UINT SPI6 : 1 ,UINT GPIO51 : 1 ,UINT GPIO50 : 1 ,UINT GPIO49 : 1 ,UINT GPIO48 : 1 ) _rege_ _IRQ_30;
_regs_ BF_11(UINT G_SOURCE32 : 1 ,UINT _rev0 : 22, UINT I2C6 : 1 ,UINT UART6 : 1 ,UINT TIMER34 : 1 ,UINT TIMER33 : 1 ,UINT TIMER32 : 1 ,UINT GPIO55 : 1 ,UINT GPIO54 : 1 ,UINT GPIO53 : 1 ,UINT GPIO52 : 1 ) _rege_ _IRQ_31;
_regs_ BF_11(UINT G_SOURCE33 : 1 ,UINT _rev0 : 22, UINT SPI7 : 1 ,UINT TIMER38 : 1 ,UINT TIMER37 : 1 ,UINT TIMER36 : 1 ,UINT TIMER35 : 1 ,UINT GPIO59 : 1 ,UINT GPIO58 : 1 ,UINT GPIO57 : 1 ,UINT GPIO56 : 1 ) _rege_ _IRQ_32;
_regs_ BF_8(UINT G_SOURCE34 : 1 ,UINT _rev0 : 25, UINT I2C7 : 1 ,UINT UART7 : 1 ,UINT GPIO63 : 1 ,UINT GPIO62 : 1 ,UINT GPIO61 : 1 ,UINT GPIO60 : 1 ) _rege_ _IRQ_33;
_regs_ BF_7(UINT G_SOURCE35 : 1 ,UINT _rev0 : 26, UINT SPI8 : 1 ,UINT GPIO67 : 1 ,UINT GPIO66 : 1 ,UINT GPIO65 : 1 ,UINT GPIO64 : 1 ) _rege_ _IRQ_34;
_regs_ BF_8(UINT G_SOURCE36 : 1 ,UINT _rev0 : 25, UINT I2C8 : 1 ,UINT UART8 : 1 ,UINT GPIO71 : 1 ,UINT GPIO70 : 1 ,UINT GPIO69 : 1 ,UINT GPIO68 : 1 ) _rege_ _IRQ_35;
_regs_ BF_3(UINT G_SOURCE37 : 1 ,UINT _rev0 : 30, UINT IR : 1 ) _rege_ _IRQ_36;
_regs_ BF_6(UINT G_SOURCE38 : 1 ,UINT _rev0 : 27, UINT OMC_COOLDONWN : 1 ,UINT OMC_HIGHTEMP : 1 ,UINT OMC_OVERTEMP : 1 ,UINT OMC_ASP : 1 ) _rege_ _IRQ_37;
_regs_ BF_2(UINT G_SOURCE39 : 1 , UINT _rev0 : 31 ) _rege_ _IRQ_38;
_regs_ BF_2(UINT G_SOURCE40 : 1 , UINT _rev0 : 31 ) _rege_ _IRQ_39;
_regs_ BF_7(UINT LOCK_CNT : 16 ,UINT CAP_POS : 2 ,UINT CTRL_POS : 2 ,UINT CLK_DIV : 8 ,UINT _rev0 : 2, UINT CLK_PD : 1 ,UINT MODE : 1 ) _rege_ _ADC_0;
_regs_ BF_12(UINT IIR_COEF3 : 6 ,UINT IIR_COEF2 : 6 ,UINT IIR_COEF1 : 6 ,UINT IIR_COEF0 : 6 ,UINT OSEL3 : 1 ,UINT OSEL2 : 1 ,UINT OSEL1 : 1 ,UINT OSEL0 : 1 ,UINT ESEL : 1 ,UINT HIGHF : 1 ,UINT OSEL_IIR_INV : 1 ,UINT PD : 1 ) _rege_ _ADC_1;
_regs_ BF_4(UINT _rev0 : 6, UINT DATA1 : 10 ,UINT _rev1 : 6, UINT DATA0 : 10 ) _rege_ _ADC_2;
_regs_ BF_4(UINT _rev0 : 6, UINT DATA3 : 10 ,UINT _rev1 : 6, UINT DATA2 : 10 ) _rege_ _ADC_3;
_regs_ BF_6(UINT CLK : 20 ,UINT IRQ : 1 ,UINT IRQ_EN : 1 ,UINT IRQ_CLR : 1 ,UINT EN : 1 ,UINT IRQ_ADDR : 8 ) _rege_ _IR_0;
_regs_ BF_1(UINT MARGIN : 32 ) _rege_ _IR_1;
_regs_ BF_1(UINT RPT_MG : 32 ) _rege_ _IR_2;
_regs_ BF_4(UINT _rev0 : 15, UINT RPT : 1 ,UINT ADDR : 8 ,UINT DAT : 8 ) _rege_ _IR_3;
#define SFLS_ID _bm(_SFLS_0,REG_BASE_SFLS, (0<<3),ID) // 24 Bit, 24'h0, R
#define SFLS_IF_RST _bm(_SFLS_0,REG_BASE_SFLS, (0<<3),IF_RST) // 1 Bit, 1'h0, RW
#define SFLS_ID_VAL _bm(_SFLS_0,REG_BASE_SFLS, (0<<3),ID_VAL) // 1 Bit, 1'h0, R
#define SFLS_BUS_CMD_RD _bm(_SFLS_1,REG_BASE_SFLS, (1<<3),BUS_CMD_RD) // 8 Bit, 8'h03, RW
#define SFLS_BUS_CMD_WR _bm(_SFLS_1,REG_BASE_SFLS, (1<<3),BUS_CMD_WR) // 8 Bit, 8'h02, RW
#define SFLS_BUS_CMD_WREN _bm(_SFLS_1,REG_BASE_SFLS, (1<<3),BUS_CMD_WREN) // 8 Bit, 8'h06, RW
#define SFLS_BUS_CMD_RDREG _bm(_SFLS_1,REG_BASE_SFLS, (1<<3),BUS_CMD_RDREG) // 8 Bit, 8'h05, RW
#define SFLS_BUS_RD_CMD_MODE _bm(_SFLS_2,REG_BASE_SFLS, (2<<3),BUS_RD_CMD_MODE) // 2 Bit, 2'h0, RW
#define SFLS_BUS_RD_ADR_MODE _bm(_SFLS_2,REG_BASE_SFLS, (2<<3),BUS_RD_ADR_MODE) // 2 Bit, 2'h0, RW
#define SFLS_BUS_RD_DAT_MODE _bm(_SFLS_2,REG_BASE_SFLS, (2<<3),BUS_RD_DAT_MODE) // 2 Bit, 2'h0, RW
#define SFLS_BUS_WR_CMD_MODE _bm(_SFLS_2,REG_BASE_SFLS, (2<<3),BUS_WR_CMD_MODE) // 2 Bit, 2'h0, RW
#define SFLS_BUS_WR_ADR_MODE _bm(_SFLS_2,REG_BASE_SFLS, (2<<3),BUS_WR_ADR_MODE) // 2 Bit, 2'h0, RW
#define SFLS_BUS_WR_DAT_MODE _bm(_SFLS_2,REG_BASE_SFLS, (2<<3),BUS_WR_DAT_MODE) // 2 Bit, 2'h0, RW
#define SFLS_BUS_WREN_CMD_MODE _bm(_SFLS_2,REG_BASE_SFLS, (2<<3),BUS_WREN_CMD_MODE) // 2 Bit, 2'h0, RW
#define SFLS_BUS_RDREG_CMD_MODE _bm(_SFLS_2,REG_BASE_SFLS, (2<<3),BUS_RDREG_CMD_MODE) // 2 Bit, 2'h0, RW
#define SFLS_BUS_RDREG_DAT_MODE _bm(_SFLS_2,REG_BASE_SFLS, (2<<3),BUS_RDREG_DAT_MODE) // 2 Bit, 2'h0, RW
#define SFLS_BUS_ADR_EXT _bm(_SFLS_2,REG_BASE_SFLS, (2<<3),BUS_ADR_EXT) // 1 Bit, 1'h0, RW
#define SFLS_BUS_GAP_EN      _bm(_SFLS_2,REG_BASE_SFLS, (2<<3),BUS_GAP_EN     ) // 1 Bit, 1'h0, RW
#define SFLS_BUS_GAP         _bm(_SFLS_2,REG_BASE_SFLS, (2<<3),BUS_GAP        ) // 4 Bit, 4'h0, RW
#define SFLS_USR_CMD_RDREG _bm(_SFLS_3,REG_BASE_SFLS, (3<<3),USR_CMD_RDREG) // 8 Bit, 8'h05, RW
#define SFLS_USR_RDREG_CMD_MODE _bm(_SFLS_3,REG_BASE_SFLS, (3<<3),USR_RDREG_CMD_MODE) // 2 Bit, 2'h0, RW
#define SFLS_USR_RDREG_DAT_MODE _bm(_SFLS_3,REG_BASE_SFLS, (3<<3),USR_RDREG_DAT_MODE) // 2 Bit, 2'h0, RW
#define SFLS_USR_CMD_MODE _bm(_SFLS_4,REG_BASE_SFLS, (4<<3),USR_CMD_MODE) // 2 Bit, 2'h0, RW
#define SFLS_USR_ADR_MODE    _bm(_SFLS_4,REG_BASE_SFLS, (4<<3),USR_ADR_MODE   ) // 2 Bit, 2'h0, RW
#define SFLS_USR_DAT_MODE    _bm(_SFLS_4,REG_BASE_SFLS, (4<<3),USR_DAT_MODE   ) // 2 Bit, 2'h0, RW
#define SFLS_USR_ADR_EN      _bm(_SFLS_4,REG_BASE_SFLS, (4<<3),USR_ADR_EN     ) // 1 Bit, 1'h0, RW
#define SFLS_USR_GAP_EN      _bm(_SFLS_4,REG_BASE_SFLS, (4<<3),USR_GAP_EN     ) // 1 Bit, 1'h0, RW
#define SFLS_USR_RD_EN _bm(_SFLS_4,REG_BASE_SFLS, (4<<3),USR_RD_EN) // 1 Bit, 1'h0, RW
#define SFLS_USR_WR_EN _bm(_SFLS_4,REG_BASE_SFLS, (4<<3),USR_WR_EN) // 1 Bit, 1'h0, RW
#define SFLS_USR_GAP _bm(_SFLS_4,REG_BASE_SFLS, (4<<3),USR_GAP) // 4 Bit, 4'h0, RW
#define SFLS_USR_LEN _bm(_SFLS_4,REG_BASE_SFLS, (4<<3),USR_LEN) // 2 Bit, 2'h0, RW
#define SFLS_USR_ADR_EXT _bm(_SFLS_4,REG_BASE_SFLS, (4<<3),USR_ADR_EXT) // 1 Bit, 1'h0, RW
#define SFLS_USR_BUSY_EN _bm(_SFLS_4,REG_BASE_SFLS, (4<<3),USR_BUSY_EN) // 1 Bit, 1'h0, RW
#define SFLS_USR_RDLTC _bm(_SFLS_4,REG_BASE_SFLS, (4<<3),USR_RDLTC) // 2 Bit, 2'h1, RW
#define SFLS_USR_CMD _bm(_SFLS_4,REG_BASE_SFLS, (4<<3),USR_CMD) // 8 Bit, 8'h0, RW
#define SFLS_USR_ADR _bm(_SFLS_5,REG_BASE_SFLS, (5<<3),USR_ADR) // 32 Bit, 32'h0, RW
#define SFLS_USR_RDDAT _bm(_SFLS_6,REG_BASE_SFLS, (6<<3),USR_RDDAT) // 32 Bit, 32'h0, RW
#define SFLS_USR_WRDAT _bm(_SFLS_7,REG_BASE_SFLS, (7<<3),USR_WRDAT) // 32 Bit, 32'h0, RW
#define SFLS_IO_RXEDGE _bm(_SFLS_8,REG_BASE_SFLS, (8<<3),IO_RXEDGE) // 1 Bit, 1'h0, RW
#define SFLS_IO_TXEDGE _bm(_SFLS_8,REG_BASE_SFLS, (8<<3),IO_TXEDGE) // 1 Bit, 1'h0, RW
#define SFLS_IO_RDLTC _bm(_SFLS_8,REG_BASE_SFLS, (8<<3),IO_RDLTC) // 2 Bit, 2'h1, RW
#define SFLS_IO_CLKDIV _bm(_SFLS_8,REG_BASE_SFLS, (8<<3),IO_CLKDIV) // 8 Bit, 8'h21, RW
#define SFLS_IO_CS_GAP _bm(_SFLS_8,REG_BASE_SFLS, (8<<3),IO_CS_GAP) // 3 Bit, 3'h7, RW
#define SFLS_USRBUS_REQ _bm(_SFLS_8,REG_BASE_SFLS, (8<<3),USRBUS_REQ) // 1 Bit, 1'h0, RW
#define SFLS_BUS_REQ _bm(_SFLS_8,REG_BASE_SFLS, (8<<3),BUS_REQ) // 1 Bit, 1'h0, RW
#define SFLS_USR_REQ _bm(_SFLS_8,REG_BASE_SFLS, (8<<3),USR_REQ) // 1 Bit, 1'h0, RW
#define SDIO0_CMD_RXEDGE _bm(_SDIO0_0,REG_BASE_SDIO0, (0<<3),CMD_RXEDGE) // 1 Bit, 1'h0, RW
#define SDIO0_CMD_TXEDGE _bm(_SDIO0_0,REG_BASE_SDIO0, (0<<3),CMD_TXEDGE) // 1 Bit, 1'h0, RW
#define SDIO0_DAT_RXEDGE _bm(_SDIO0_0,REG_BASE_SDIO0, (0<<3),DAT_RXEDGE) // 1 Bit, 1'h0, RW
#define SDIO0_DAT_TXEDGE _bm(_SDIO0_0,REG_BASE_SDIO0, (0<<3),DAT_TXEDGE) // 1 Bit, 1'h0, RW
#define SDIO0_BITMODE _bm(_SDIO0_0,REG_BASE_SDIO0, (0<<3),BITMODE) // 1 Bit, 1'h0, RW
#define SDIO0_IOMODE _bm(_SDIO0_0,REG_BASE_SDIO0, (0<<3),IOMODE) // 1 Bit, 1'h0, RW
#define SDIO0_MODE _bm(_SDIO0_0,REG_BASE_SDIO0, (0<<3),MODE) // 1 Bit, 1'h0, RW
#define SDIO0_EN _bm(_SDIO0_0,REG_BASE_SDIO0, (0<<3),EN) // 1 Bit, 1'h0, RW
#define SDIO0_CLK_EN _bm(_SDIO0_1,REG_BASE_SDIO0, (1<<3),CLK_EN) // 1 Bit, 1'h0, RW
#define SDIO0_CLK_SELECT _bm(_SDIO0_1,REG_BASE_SDIO0, (1<<3),CLK_SELECT) // 2 Bit, 2'h0, RW
#define SDIO0_CLK_DIV _bm(_SDIO0_1,REG_BASE_SDIO0, (1<<3),CLK_DIV) // 12 Bit, 12'h0, RW
#define SDIO0_CMD_ARG _bm(_SDIO0_2,REG_BASE_SDIO0, (2<<3),CMD_ARG) // 32 Bit, 1'h0, RW
#define SDIO0_CMD_IDX _bm(_SDIO0_3,REG_BASE_SDIO0, (3<<3),CMD_IDX) // 6 Bit, 6'h0, RW
#define SDIO0_CMD_RESP_TOUT _bm(_SDIO0_3,REG_BASE_SDIO0, (3<<3),CMD_RESP_TOUT) // 1 Bit, 1'h0, R
#define SDIO0_CMD_RESP_CRCERR _bm(_SDIO0_3,REG_BASE_SDIO0, (3<<3),CMD_RESP_CRCERR) // 1 Bit, 1'h0, R
#define SDIO0_CMD_RESP_BUSY_EN _bm(_SDIO0_3,REG_BASE_SDIO0, (3<<3),CMD_RESP_BUSY_EN) // 1 Bit, 1'h0, RW
#define SDIO0_CMD_RESP_TYPE _bm(_SDIO0_3,REG_BASE_SDIO0, (3<<3),CMD_RESP_TYPE) // 1 Bit, 1'h0, RW
#define SDIO0_CMD_RESP_EN _bm(_SDIO0_3,REG_BASE_SDIO0, (3<<3),CMD_RESP_EN) // 1 Bit, 1'h0, RW
#define SDIO0_CMD_EN _bm(_SDIO0_3,REG_BASE_SDIO0, (3<<3),CMD_EN) // 1 Bit, 1'h0, RW
#define SDIO0_CMD_RESP_IDX _bm(_SDIO0_4,REG_BASE_SDIO0, (4<<3),CMD_RESP_IDX) // 6 Bit, 6'h0, R
#define SDIO0_CMD_RESP_CRC _bm(_SDIO0_4,REG_BASE_SDIO0, (4<<3),CMD_RESP_CRC) // 7 Bit, 7'h0, R
#define SDIO0_CMD_RESP_DAT127_96 _bm(_SDIO0_5,REG_BASE_SDIO0, (5<<3),CMD_RESP_DAT127_96) // 32 Bit, 32'h0, R
#define SDIO0_CMD_RESP_DAT95_64 _bm(_SDIO0_6,REG_BASE_SDIO0, (6<<3),CMD_RESP_DAT95_64) // 32 Bit, 32'h0, R
#define SDIO0_CMD_RESP_DAT63_32 _bm(_SDIO0_7,REG_BASE_SDIO0, (7<<3),CMD_RESP_DAT63_32) // 32 Bit, 32'h0, R
#define SDIO0_CMD_RESP_DAT31_0 _bm(_SDIO0_8,REG_BASE_SDIO0, (8<<3),CMD_RESP_DAT31_0) // 32 Bit, 32'h0, R
#define SDIO0_CMD_RESP_TLMT _bm(_SDIO0_9,REG_BASE_SDIO0, (9<<3),CMD_RESP_TLMT) // 32 Bit, 32'h0, RW
#define SDIO0_DAT_ADR _bm(_SDIO0_10,REG_BASE_SDIO0, (10<<3),DAT_ADR) // 32 Bit, 1'h0, RW
#define SDIO0_TRG _bm(_SDIO0_11,REG_BASE_SDIO0, (11<<3),TRG) // 1 Bit, 1'h0, RW
#define SDIO0_DAT_BLKBYTE _bm(_SDIO0_11,REG_BASE_SDIO0, (11<<3),DAT_BLKBYTE) // 12 Bit, 1'h0, RW
#define SDIO0_DAT_BLKNUM _bm(_SDIO0_11,REG_BASE_SDIO0, (11<<3),DAT_BLKNUM) // 16 Bit, 1'h0, RW
#define SDIO0_DAT_BLKADR _bm(_SDIO0_12,REG_BASE_SDIO0, (12<<3),DAT_BLKADR) // 32 Bit, 1'h0, RW
#define SDIO0_DAT_CRCERR _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),DAT_CRCERR) // 1 Bit, 1'h0, R
#define SDIO0_DAT_BUSY _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),DAT_BUSY) // 1 Bit, 1'h0, R
#define SDIO0_IO_IRQ _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),IO_IRQ) // 1 Bit, 1'h0, R
#define SDIO0_IO_IRQ_CLR _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),IO_IRQ_CLR) // 1 Bit, 1'h0, W
#define SDIO0_IO_IRQ_EN _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),IO_IRQ_EN) // 1 Bit, 1'h0, RW
#define SDIO0_CMD_IRQ _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),CMD_IRQ) // 1 Bit, 1'h0, R
#define SDIO0_CMD_IRQ_CLR _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),CMD_IRQ_CLR) // 1 Bit, 1'h0, W
#define SDIO0_CMD_IRQ_EN _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),CMD_IRQ_EN) // 1 Bit, 1'h0, RW
#define SDIO0_DAT_IRQ _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),DAT_IRQ) // 1 Bit, 1'h0, R
#define SDIO0_DAT_IRQ_CLR _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),DAT_IRQ_CLR) // 1 Bit, 1'h0, W
#define SDIO0_DAT_IRQ_EN _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),DAT_IRQ_EN) // 1 Bit, 1'h0, RW
#define SDIO0_CMD53_FN _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),CMD53_FN) // 3 Bit, 3'h0, RW
#define SDIO0_CMD53_BM _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),CMD53_BM) // 1 Bit, 1'h1, RW
#define SDIO0_CMD53_OP _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),CMD53_OP) // 1 Bit, 1'h0, RW
#define SDIO0_DAT_WE _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),DAT_WE) // 1 Bit, 1'h0, RW
#define SDIO0_DAT_EN _bm(_SDIO0_13,REG_BASE_SDIO0, (13<<3),DAT_EN) // 1 Bit, 1'h0, RW
#define SDIO0_DAT_TOUT _bm(_SDIO0_14,REG_BASE_SDIO0, (14<<3),DAT_TOUT) // 8 Bit, 8'h0, RW
#define SDIO0_DAT_BLKCNT _bm(_SDIO0_14,REG_BASE_SDIO0, (14<<3),DAT_BLKCNT) // 16 Bit, 16'h0, R
#define SDIO0_DAT_STOP_CMD _bm(_SDIO0_15,REG_BASE_SDIO0, (15<<3),DAT_STOP_CMD) // 6 Bit, 7'd12, RW
#define SDIO0_DAT_IORW_CMD _bm(_SDIO0_15,REG_BASE_SDIO0, (15<<3),DAT_IORW_CMD) // 6 Bit, 7'd53, RW
#define SDIO0_DAT_WRCMD_S _bm(_SDIO0_16,REG_BASE_SDIO0, (16<<3),DAT_WRCMD_S) // 6 Bit, 7'd17, RW
#define SDIO0_DAT_WRCMD_M _bm(_SDIO0_16,REG_BASE_SDIO0, (16<<3),DAT_WRCMD_M) // 6 Bit, 7'd18, RW
#define SDIO0_DAT_RDCMD_S _bm(_SDIO0_16,REG_BASE_SDIO0, (16<<3),DAT_RDCMD_S) // 6 Bit, 7'd24, RW
#define SDIO0_DAT_RDCMD_M _bm(_SDIO0_16,REG_BASE_SDIO0, (16<<3),DAT_RDCMD_M) // 6 Bit, 7'd25, RW
#define SDIO1_CMD_RXEDGE _bm(_SDIO1_0,REG_BASE_SDIO1, (0<<3),CMD_RXEDGE) // 1 Bit, 1'h0, RW
#define SDIO1_CMD_TXEDGE _bm(_SDIO1_0,REG_BASE_SDIO1, (0<<3),CMD_TXEDGE) // 1 Bit, 1'h0, RW
#define SDIO1_DAT_RXEDGE _bm(_SDIO1_0,REG_BASE_SDIO1, (0<<3),DAT_RXEDGE) // 1 Bit, 1'h0, RW
#define SDIO1_DAT_TXEDGE _bm(_SDIO1_0,REG_BASE_SDIO1, (0<<3),DAT_TXEDGE) // 1 Bit, 1'h0, RW
#define SDIO1_BITMODE _bm(_SDIO1_0,REG_BASE_SDIO1, (0<<3),BITMODE) // 1 Bit, 1'h0, RW
#define SDIO1_IOMODE _bm(_SDIO1_0,REG_BASE_SDIO1, (0<<3),IOMODE) // 1 Bit, 1'h0, RW
#define SDIO1_MODE _bm(_SDIO1_0,REG_BASE_SDIO1, (0<<3),MODE) // 1 Bit, 1'h0, RW
#define SDIO1_EN _bm(_SDIO1_0,REG_BASE_SDIO1, (0<<3),EN) // 1 Bit, 1'h0, RW
#define SDIO1_CLK_EN _bm(_SDIO1_1,REG_BASE_SDIO1, (1<<3),CLK_EN) // 1 Bit, 1'h0, RW
#define SDIO1_CLK_SELECT _bm(_SDIO1_1,REG_BASE_SDIO1, (1<<3),CLK_SELECT) // 2 Bit, 2'h0, RW
#define SDIO1_CLK_DIV _bm(_SDIO1_1,REG_BASE_SDIO1, (1<<3),CLK_DIV) // 12 Bit, 12'h0, RW
#define SDIO1_CMD_ARG _bm(_SDIO1_2,REG_BASE_SDIO1, (2<<3),CMD_ARG) // 32 Bit, 1'h0, RW
#define SDIO1_CMD_IDX _bm(_SDIO1_3,REG_BASE_SDIO1, (3<<3),CMD_IDX) // 6 Bit, 6'h0, RW
#define SDIO1_CMD_RESP_TOUT _bm(_SDIO1_3,REG_BASE_SDIO1, (3<<3),CMD_RESP_TOUT) // 1 Bit, 1'h0, R
#define SDIO1_CMD_RESP_CRCERR _bm(_SDIO1_3,REG_BASE_SDIO1, (3<<3),CMD_RESP_CRCERR) // 1 Bit, 1'h0, R
#define SDIO1_CMD_RESP_BUSY_EN _bm(_SDIO1_3,REG_BASE_SDIO1, (3<<3),CMD_RESP_BUSY_EN) // 1 Bit, 1'h0, RW
#define SDIO1_CMD_RESP_TYPE _bm(_SDIO1_3,REG_BASE_SDIO1, (3<<3),CMD_RESP_TYPE) // 1 Bit, 1'h0, RW
#define SDIO1_CMD_RESP_EN _bm(_SDIO1_3,REG_BASE_SDIO1, (3<<3),CMD_RESP_EN) // 1 Bit, 1'h0, RW
#define SDIO1_CMD_EN _bm(_SDIO1_3,REG_BASE_SDIO1, (3<<3),CMD_EN) // 1 Bit, 1'h0, RW
#define SDIO1_CMD_RESP_IDX _bm(_SDIO1_4,REG_BASE_SDIO1, (4<<3),CMD_RESP_IDX) // 6 Bit, 6'h0, R
#define SDIO1_CMD_RESP_CRC _bm(_SDIO1_4,REG_BASE_SDIO1, (4<<3),CMD_RESP_CRC) // 7 Bit, 7'h0, R
#define SDIO1_CMD_RESP_DAT127_96 _bm(_SDIO1_5,REG_BASE_SDIO1, (5<<3),CMD_RESP_DAT127_96) // 32 Bit, 32'h0, R
#define SDIO1_CMD_RESP_DAT95_64 _bm(_SDIO1_6,REG_BASE_SDIO1, (6<<3),CMD_RESP_DAT95_64) // 32 Bit, 32'h0, R
#define SDIO1_CMD_RESP_DAT63_32 _bm(_SDIO1_7,REG_BASE_SDIO1, (7<<3),CMD_RESP_DAT63_32) // 32 Bit, 32'h0, R
#define SDIO1_CMD_RESP_DAT31_0 _bm(_SDIO1_8,REG_BASE_SDIO1, (8<<3),CMD_RESP_DAT31_0) // 32 Bit, 32'h0, R
#define SDIO1_CMD_RESP_TLMT _bm(_SDIO1_9,REG_BASE_SDIO1, (9<<3),CMD_RESP_TLMT) // 32 Bit, 32'h0, RW
#define SDIO1_DAT_ADR _bm(_SDIO1_10,REG_BASE_SDIO1, (10<<3),DAT_ADR) // 32 Bit, 1'h0, RW
#define SDIO1_TRG _bm(_SDIO1_11,REG_BASE_SDIO1, (11<<3),TRG) // 1 Bit, 1'h0, RW
#define SDIO1_DAT_BLKBYTE _bm(_SDIO1_11,REG_BASE_SDIO1, (11<<3),DAT_BLKBYTE) // 12 Bit, 1'h0, RW
#define SDIO1_DAT_BLKNUM _bm(_SDIO1_11,REG_BASE_SDIO1, (11<<3),DAT_BLKNUM) // 16 Bit, 1'h0, RW
#define SDIO1_DAT_BLKADR _bm(_SDIO1_12,REG_BASE_SDIO1, (12<<3),DAT_BLKADR) // 32 Bit, 1'h0, RW
#define SDIO1_DAT_CRCERR _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),DAT_CRCERR) // 1 Bit, 1'h0, R
#define SDIO1_DAT_BUSY _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),DAT_BUSY) // 1 Bit, 1'h0, R
#define SDIO1_IO_IRQ _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),IO_IRQ) // 1 Bit, 1'h0, R
#define SDIO1_IO_IRQ_CLR _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),IO_IRQ_CLR) // 1 Bit, 1'h0, W
#define SDIO1_IO_IRQ_EN _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),IO_IRQ_EN) // 1 Bit, 1'h0, RW
#define SDIO1_CMD_IRQ _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),CMD_IRQ) // 1 Bit, 1'h0, R
#define SDIO1_CMD_IRQ_CLR _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),CMD_IRQ_CLR) // 1 Bit, 1'h0, W
#define SDIO1_CMD_IRQ_EN _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),CMD_IRQ_EN) // 1 Bit, 1'h0, RW
#define SDIO1_DAT_IRQ _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),DAT_IRQ) // 1 Bit, 1'h0, R
#define SDIO1_DAT_IRQ_CLR _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),DAT_IRQ_CLR) // 1 Bit, 1'h0, W
#define SDIO1_DAT_IRQ_EN _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),DAT_IRQ_EN) // 1 Bit, 1'h0, RW
#define SDIO1_CMD53_FN _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),CMD53_FN) // 3 Bit, 3'h0, RW
#define SDIO1_CMD53_BM _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),CMD53_BM) // 1 Bit, 1'h1, RW
#define SDIO1_CMD53_OP _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),CMD53_OP) // 1 Bit, 1'h0, RW
#define SDIO1_DAT_WE _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),DAT_WE) // 1 Bit, 1'h0, RW
#define SDIO1_DAT_EN _bm(_SDIO1_13,REG_BASE_SDIO1, (13<<3),DAT_EN) // 1 Bit, 1'h0, RW
#define SDIO1_DAT_TOUT _bm(_SDIO1_14,REG_BASE_SDIO1, (14<<3),DAT_TOUT) // 8 Bit, 8'h0, RW
#define SDIO1_DAT_BLKCNT _bm(_SDIO1_14,REG_BASE_SDIO1, (14<<3),DAT_BLKCNT) // 16 Bit, 16'h0, R
#define SDIO1_DAT_STOP_CMD _bm(_SDIO1_15,REG_BASE_SDIO1, (15<<3),DAT_STOP_CMD) // 6 Bit, 7'd12, RW
#define SDIO1_DAT_IORW_CMD _bm(_SDIO1_15,REG_BASE_SDIO1, (15<<3),DAT_IORW_CMD) // 6 Bit, 7'd53, RW
#define SDIO1_DAT_WRCMD_S _bm(_SDIO1_16,REG_BASE_SDIO1, (16<<3),DAT_WRCMD_S) // 6 Bit, 7'd17, RW
#define SDIO1_DAT_WRCMD_M _bm(_SDIO1_16,REG_BASE_SDIO1, (16<<3),DAT_WRCMD_M) // 6 Bit, 7'd18, RW
#define SDIO1_DAT_RDCMD_S _bm(_SDIO1_16,REG_BASE_SDIO1, (16<<3),DAT_RDCMD_S) // 6 Bit, 7'd24, RW
#define SDIO1_DAT_RDCMD_M _bm(_SDIO1_16,REG_BASE_SDIO1, (16<<3),DAT_RDCMD_M) // 6 Bit, 7'd25, RW
#define ETH_MDIO_RXEDGE _bm(_ETH_0,REG_BASE_ETH, (0<<3),MDIO_RXEDGE) // 1 Bit, 1'h1, RW
#define ETH_MDIO_TXEDGE _bm(_ETH_0,REG_BASE_ETH, (0<<3),MDIO_TXEDGE) // 1 Bit, 1'h1, RW
#define ETH_MDIO_RDLTC _bm(_ETH_0,REG_BASE_ETH, (0<<3),MDIO_RDLTC) // 2 Bit, 2'h0, RW
#define ETH_MDIO_OPCODE _bm(_ETH_0,REG_BASE_ETH, (0<<3),MDIO_OPCODE) // 2 Bit, 2'h0, RW
#define ETH_MDIO_PHYADR _bm(_ETH_0,REG_BASE_ETH, (0<<3),MDIO_PHYADR) // 5 Bit, 5'h0, RW
#define ETH_MDIO_REGADR _bm(_ETH_0,REG_BASE_ETH, (0<<3),MDIO_REGADR) // 5 Bit, 5'h0, RW
#define ETH_MDIO_GAPLMT _bm(_ETH_1,REG_BASE_ETH, (1<<3),MDIO_GAPLMT) // 8 Bit, 8'hff, RW
#define ETH_MDIO_CLKLMT _bm(_ETH_1,REG_BASE_ETH, (1<<3),MDIO_CLKLMT) // 8 Bit, 8'hff, RW
#define ETH_MDIO_REQ _bm(_ETH_1,REG_BASE_ETH, (1<<3),MDIO_REQ) // 1 Bit, 1'h0, RW
#define ETH_MDIO_TXDAT _bm(_ETH_2,REG_BASE_ETH, (2<<3),MDIO_TXDAT) // 16 Bit, 16'h0, RW
#define ETH_MDIO_RXDAT _bm(_ETH_2,REG_BASE_ETH, (2<<3),MDIO_RXDAT) // 16 Bit, 16'h0, R
#define ETH_RX_EN _bm(_ETH_12,REG_BASE_ETH, (12<<3),RX_EN) // 1 Bit, 1'h0, RW
#define ETH_RX_RCKEDGE _bm(_ETH_12,REG_BASE_ETH, (12<<3),RX_RCKEDGE) // 1 Bit, 1'h0, RW
#define ETH_RX_DATTYPE _bm(_ETH_12,REG_BASE_ETH, (12<<3),RX_DATTYPE) // 2 Bit, 1'h0, RW
#define ETH_RX_RCKDLY _bm(_ETH_12,REG_BASE_ETH, (12<<3),RX_RCKDLY) // 4 Bit, 1'h0, RW
#define ETH_RX_ERTYPE _bm(_ETH_12,REG_BASE_ETH, (12<<3),RX_ERTYPE) // 2 Bit, 1'h0, RW
#define ETH_RX_RMII10 _bm(_ETH_12,REG_BASE_ETH, (12<<3),RX_RMII10) // 1 Bit, 1'h0, RW
#define ETH_RX_INT_SEL _bm(_ETH_12,REG_BASE_ETH, (12<<3),RX_INT_SEL) // 2 Bit, 2'h0, RW
#define ETH_TX_DATBIT _bm(_ETH_13,REG_BASE_ETH, (13<<3),TX_DATBIT) // 1 Bit, 1'h0, RW
#define ETH_TX_DATTYPE _bm(_ETH_13,REG_BASE_ETH, (13<<3),TX_DATTYPE) // 1 Bit, 1'h0, RW
#define ETH_TX_CLKOE _bm(_ETH_13,REG_BASE_ETH, (13<<3),TX_CLKOE) // 1 Bit, 1'h0, RW
#define ETH_TX_CLKEDGE _bm(_ETH_13,REG_BASE_ETH, (13<<3),TX_CLKEDGE) // 1 Bit, 1'h0, RW
#define ETH_TX_CLKSEL _bm(_ETH_13,REG_BASE_ETH, (13<<3),TX_CLKSEL) // 1 Bit, 1'h0, RW
#define ETH_TX_CRSCHK _bm(_ETH_13,REG_BASE_ETH, (13<<3),TX_CRSCHK) // 1 Bit, 1'h0, RW
#define ETH_TX_COLCHK _bm(_ETH_13,REG_BASE_ETH, (13<<3),TX_COLCHK) // 1 Bit, 1'h0, RW
#define ETH_TX_COLSEL _bm(_ETH_13,REG_BASE_ETH, (13<<3),TX_COLSEL) // 1 Bit, 1'h0, RW
#define ETH_TX_PAUSE_EN _bm(_ETH_13,REG_BASE_ETH, (13<<3),TX_PAUSE_EN) // 1 Bit, 1'h1, RW
#define ETH_TX_PAUSE _bm(_ETH_13,REG_BASE_ETH, (13<<3),TX_PAUSE) // 1 Bit, 1'h0, R
#define ETH_TX_COLEN _bm(_ETH_13,REG_BASE_ETH, (13<<3),TX_COLEN) // 1 Bit, 1'h0, RW
#define ETH_TX_RMII10 _bm(_ETH_13,REG_BASE_ETH, (13<<3),TX_RMII10) // 1 Bit, 1'h0, RW
#define ETH_TX_TXENDLY _bm(_ETH_14,REG_BASE_ETH, (14<<3),TX_TXENDLY) // 4 Bit, 1'h0, RW
#define ETH_TX_TXD0DLY _bm(_ETH_14,REG_BASE_ETH, (14<<3),TX_TXD0DLY) // 4 Bit, 1'h0, RW
#define ETH_TX_TXD1DLY _bm(_ETH_14,REG_BASE_ETH, (14<<3),TX_TXD1DLY) // 4 Bit, 1'h0, RW
#define ETH_TX_TXD2DLY _bm(_ETH_14,REG_BASE_ETH, (14<<3),TX_TXD2DLY) // 4 Bit, 1'h0, RW
#define ETH_TX_TXD3DLY _bm(_ETH_14,REG_BASE_ETH, (14<<3),TX_TXD3DLY) // 4 Bit, 1'h0, RW
#define ETH_TX_TCKDLY _bm(_ETH_14,REG_BASE_ETH, (14<<3),TX_TCKDLY) // 4 Bit, 1'h0, RW
#define ETH_TX_IFGGAP _bm(_ETH_15,REG_BASE_ETH, (15<<3),TX_IFGGAP) // 16 Bit, 1'h0, RW
#define ETH_IRQ_RX _bm(_ETH_15,REG_BASE_ETH, (15<<3),IRQ_RX) // 1 Bit, 1'h0, RW
#define ETH_IRQ_TX _bm(_ETH_15,REG_BASE_ETH, (15<<3),IRQ_TX) // 1 Bit, 1'h0, RW
#define ETH_IRQ_RX_EN _bm(_ETH_15,REG_BASE_ETH, (15<<3),IRQ_RX_EN) // 1 Bit, 1'h0, RW
#define ETH_IRQ_TX_EN _bm(_ETH_15,REG_BASE_ETH, (15<<3),IRQ_TX_EN) // 1 Bit, 1'h0, RW
#define ETH_IRQ_RX_CLR _bm(_ETH_15,REG_BASE_ETH, (15<<3),IRQ_RX_CLR) // 1 Bit, 1'h0, RW
#define ETH_IRQ_TX_CLR _bm(_ETH_15,REG_BASE_ETH, (15<<3),IRQ_TX_CLR) // 1 Bit, 1'h0, RW
#define ETH_RX_ADR _bm(_ETH_16,REG_BASE_ETH, (16<<3),RX_ADR) // 32 Bit, 1'h0, RW
#define ETH_RX_QOS _bm(_ETH_17,REG_BASE_ETH, (17<<3),RX_QOS) // 4 Bit, 1'h0, RW
#define ETH_RX_ADROFS _bm(_ETH_17,REG_BASE_ETH, (17<<3),RX_ADROFS) // 12 Bit, 12'h600, RW
#define ETH_RX_LMT _bm(_ETH_17,REG_BASE_ETH, (17<<3),RX_LMT) // 8 Bit, 1'h0, RW
#define ETH_TX_ADR _bm(_ETH_18,REG_BASE_ETH, (18<<3),TX_ADR) // 32 Bit, 1'h0, RW
#define ETH_TX_LEN _bm(_ETH_19,REG_BASE_ETH, (19<<3),TX_LEN) // 12 Bit, 1'h0, RW
#define ETH_TX_QOS _bm(_ETH_19,REG_BASE_ETH, (19<<3),TX_QOS) // 4 Bit, 1'h0, RW
#define ETH_TX_EMPTY _bm(_ETH_19,REG_BASE_ETH, (19<<3),TX_EMPTY) // 1 Bit, 1'h1, R
#define ETH_TX_FULL _bm(_ETH_19,REG_BASE_ETH, (19<<3),TX_FULL) // 1 Bit, 1'h0, R
#define ETH_TX_VAL _bm(_ETH_19,REG_BASE_ETH, (19<<3),TX_VAL) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_EN _bm(_ETH_32,REG_BASE_ETH, (32<<3),DSTMAC_EN) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN0 _bm(_ETH_33,REG_BASE_ETH, (33<<3),DSTMAC_EN0) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR0_47_32 _bm(_ETH_33,REG_BASE_ETH, (33<<3),DSTMAC_ADR0_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR0_31_0 _bm(_ETH_34,REG_BASE_ETH, (34<<3),DSTMAC_ADR0_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN1 _bm(_ETH_35,REG_BASE_ETH, (35<<3),DSTMAC_EN1) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR1_47_32 _bm(_ETH_35,REG_BASE_ETH, (35<<3),DSTMAC_ADR1_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR1_31_0 _bm(_ETH_36,REG_BASE_ETH, (36<<3),DSTMAC_ADR1_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN2 _bm(_ETH_37,REG_BASE_ETH, (37<<3),DSTMAC_EN2) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR2_47_32 _bm(_ETH_37,REG_BASE_ETH, (37<<3),DSTMAC_ADR2_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR2_31_0 _bm(_ETH_38,REG_BASE_ETH, (38<<3),DSTMAC_ADR2_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN3 _bm(_ETH_39,REG_BASE_ETH, (39<<3),DSTMAC_EN3) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR3_47_32 _bm(_ETH_39,REG_BASE_ETH, (39<<3),DSTMAC_ADR3_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR3_31_0 _bm(_ETH_40,REG_BASE_ETH, (40<<3),DSTMAC_ADR3_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN4 _bm(_ETH_41,REG_BASE_ETH, (41<<3),DSTMAC_EN4) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR4_47_32 _bm(_ETH_41,REG_BASE_ETH, (41<<3),DSTMAC_ADR4_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR4_31_0 _bm(_ETH_42,REG_BASE_ETH, (42<<3),DSTMAC_ADR4_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN5 _bm(_ETH_43,REG_BASE_ETH, (43<<3),DSTMAC_EN5) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR5_47_32 _bm(_ETH_43,REG_BASE_ETH, (43<<3),DSTMAC_ADR5_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR5_31_0 _bm(_ETH_44,REG_BASE_ETH, (44<<3),DSTMAC_ADR5_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN6 _bm(_ETH_45,REG_BASE_ETH, (45<<3),DSTMAC_EN6) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR6_47_32 _bm(_ETH_45,REG_BASE_ETH, (45<<3),DSTMAC_ADR6_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR6_31_0 _bm(_ETH_46,REG_BASE_ETH, (46<<3),DSTMAC_ADR6_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN7 _bm(_ETH_47,REG_BASE_ETH, (47<<3),DSTMAC_EN7) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR7_47_32 _bm(_ETH_47,REG_BASE_ETH, (47<<3),DSTMAC_ADR7_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR7_31_0 _bm(_ETH_48,REG_BASE_ETH, (48<<3),DSTMAC_ADR7_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN8 _bm(_ETH_49,REG_BASE_ETH, (49<<3),DSTMAC_EN8) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR8_47_32 _bm(_ETH_49,REG_BASE_ETH, (49<<3),DSTMAC_ADR8_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR8_31_0 _bm(_ETH_50,REG_BASE_ETH, (50<<3),DSTMAC_ADR8_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN9 _bm(_ETH_51,REG_BASE_ETH, (51<<3),DSTMAC_EN9) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR9_47_32 _bm(_ETH_51,REG_BASE_ETH, (51<<3),DSTMAC_ADR9_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR9_31_0 _bm(_ETH_52,REG_BASE_ETH, (52<<3),DSTMAC_ADR9_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN10 _bm(_ETH_53,REG_BASE_ETH, (53<<3),DSTMAC_EN10) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR10_47_32 _bm(_ETH_53,REG_BASE_ETH, (53<<3),DSTMAC_ADR10_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR10_31_0 _bm(_ETH_54,REG_BASE_ETH, (54<<3),DSTMAC_ADR10_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN11 _bm(_ETH_55,REG_BASE_ETH, (55<<3),DSTMAC_EN11) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR11_47_32 _bm(_ETH_55,REG_BASE_ETH, (55<<3),DSTMAC_ADR11_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR11_31_0 _bm(_ETH_56,REG_BASE_ETH, (56<<3),DSTMAC_ADR11_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN12 _bm(_ETH_57,REG_BASE_ETH, (57<<3),DSTMAC_EN12) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR12_47_32 _bm(_ETH_57,REG_BASE_ETH, (57<<3),DSTMAC_ADR12_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR12_31_0 _bm(_ETH_58,REG_BASE_ETH, (58<<3),DSTMAC_ADR12_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN13 _bm(_ETH_59,REG_BASE_ETH, (59<<3),DSTMAC_EN13) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR13_47_32 _bm(_ETH_59,REG_BASE_ETH, (59<<3),DSTMAC_ADR13_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR13_31_0 _bm(_ETH_60,REG_BASE_ETH, (60<<3),DSTMAC_ADR13_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN14 _bm(_ETH_61,REG_BASE_ETH, (61<<3),DSTMAC_EN14) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR14_47_32 _bm(_ETH_61,REG_BASE_ETH, (61<<3),DSTMAC_ADR14_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR14_31_0 _bm(_ETH_62,REG_BASE_ETH, (62<<3),DSTMAC_ADR14_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN15 _bm(_ETH_63,REG_BASE_ETH, (63<<3),DSTMAC_EN15) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR15_47_32 _bm(_ETH_63,REG_BASE_ETH, (63<<3),DSTMAC_ADR15_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR15_31_0 _bm(_ETH_64,REG_BASE_ETH, (64<<3),DSTMAC_ADR15_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN16 _bm(_ETH_65,REG_BASE_ETH, (65<<3),DSTMAC_EN16) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR16_47_32 _bm(_ETH_65,REG_BASE_ETH, (65<<3),DSTMAC_ADR16_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR16_31_0 _bm(_ETH_66,REG_BASE_ETH, (66<<3),DSTMAC_ADR16_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN17 _bm(_ETH_67,REG_BASE_ETH, (67<<3),DSTMAC_EN17) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR17_47_32 _bm(_ETH_67,REG_BASE_ETH, (67<<3),DSTMAC_ADR17_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR17_31_0 _bm(_ETH_68,REG_BASE_ETH, (68<<3),DSTMAC_ADR17_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN18 _bm(_ETH_69,REG_BASE_ETH, (69<<3),DSTMAC_EN18) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR18_47_32 _bm(_ETH_69,REG_BASE_ETH, (69<<3),DSTMAC_ADR18_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR18_31_0 _bm(_ETH_70,REG_BASE_ETH, (70<<3),DSTMAC_ADR18_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN19 _bm(_ETH_71,REG_BASE_ETH, (71<<3),DSTMAC_EN19) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR19_47_32 _bm(_ETH_71,REG_BASE_ETH, (71<<3),DSTMAC_ADR19_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR19_31_0 _bm(_ETH_72,REG_BASE_ETH, (72<<3),DSTMAC_ADR19_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN20 _bm(_ETH_73,REG_BASE_ETH, (73<<3),DSTMAC_EN20) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR20_47_32 _bm(_ETH_73,REG_BASE_ETH, (73<<3),DSTMAC_ADR20_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR20_31_0 _bm(_ETH_74,REG_BASE_ETH, (74<<3),DSTMAC_ADR20_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN21 _bm(_ETH_75,REG_BASE_ETH, (75<<3),DSTMAC_EN21) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR21_47_32 _bm(_ETH_75,REG_BASE_ETH, (75<<3),DSTMAC_ADR21_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR21_31_0 _bm(_ETH_76,REG_BASE_ETH, (76<<3),DSTMAC_ADR21_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN22 _bm(_ETH_77,REG_BASE_ETH, (77<<3),DSTMAC_EN22) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR22_47_32 _bm(_ETH_77,REG_BASE_ETH, (77<<3),DSTMAC_ADR22_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR22_31_0 _bm(_ETH_78,REG_BASE_ETH, (78<<3),DSTMAC_ADR22_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN23 _bm(_ETH_79,REG_BASE_ETH, (79<<3),DSTMAC_EN23) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR23_47_32 _bm(_ETH_79,REG_BASE_ETH, (79<<3),DSTMAC_ADR23_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR23_31_0 _bm(_ETH_80,REG_BASE_ETH, (80<<3),DSTMAC_ADR23_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN24 _bm(_ETH_81,REG_BASE_ETH, (81<<3),DSTMAC_EN24) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR24_47_32 _bm(_ETH_81,REG_BASE_ETH, (81<<3),DSTMAC_ADR24_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR24_31_0 _bm(_ETH_82,REG_BASE_ETH, (82<<3),DSTMAC_ADR24_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN25 _bm(_ETH_83,REG_BASE_ETH, (83<<3),DSTMAC_EN25) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR25_47_32 _bm(_ETH_83,REG_BASE_ETH, (83<<3),DSTMAC_ADR25_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR25_31_0 _bm(_ETH_84,REG_BASE_ETH, (84<<3),DSTMAC_ADR25_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN26 _bm(_ETH_85,REG_BASE_ETH, (85<<3),DSTMAC_EN26) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR26_47_32 _bm(_ETH_85,REG_BASE_ETH, (85<<3),DSTMAC_ADR26_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR26_31_0 _bm(_ETH_86,REG_BASE_ETH, (86<<3),DSTMAC_ADR26_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN27 _bm(_ETH_87,REG_BASE_ETH, (87<<3),DSTMAC_EN27) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR27_47_32 _bm(_ETH_87,REG_BASE_ETH, (87<<3),DSTMAC_ADR27_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR27_31_0 _bm(_ETH_88,REG_BASE_ETH, (88<<3),DSTMAC_ADR27_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN28 _bm(_ETH_89,REG_BASE_ETH, (89<<3),DSTMAC_EN28) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR28_47_32 _bm(_ETH_89,REG_BASE_ETH, (89<<3),DSTMAC_ADR28_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR28_31_0 _bm(_ETH_90,REG_BASE_ETH, (90<<3),DSTMAC_ADR28_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN29 _bm(_ETH_91,REG_BASE_ETH, (91<<3),DSTMAC_EN29) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR29_47_32 _bm(_ETH_91,REG_BASE_ETH, (91<<3),DSTMAC_ADR29_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR29_31_0 _bm(_ETH_92,REG_BASE_ETH, (92<<3),DSTMAC_ADR29_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN30 _bm(_ETH_93,REG_BASE_ETH, (93<<3),DSTMAC_EN30) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR30_47_32 _bm(_ETH_93,REG_BASE_ETH, (93<<3),DSTMAC_ADR30_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR30_31_0 _bm(_ETH_94,REG_BASE_ETH, (94<<3),DSTMAC_ADR30_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_EN31 _bm(_ETH_95,REG_BASE_ETH, (95<<3),DSTMAC_EN31) // 1 Bit, 1'h0, RW
#define ETH_DSTMAC_ADR31_47_32 _bm(_ETH_95,REG_BASE_ETH, (95<<3),DSTMAC_ADR31_47_32) // 16 Bit, 16'h0, RW
#define ETH_DSTMAC_ADR31_31_0 _bm(_ETH_96,REG_BASE_ETH, (96<<3),DSTMAC_ADR31_31_0) // 32 Bit, 32'h0, RW
#define ETH_DSTMAC_BYP _bm(_ETH_97,REG_BASE_ETH, (97<<3),DSTMAC_BYP) // 1 Bit, 1'h0, RW
#define ETH_RX_CRC_EN _bm(_ETH_97,REG_BASE_ETH, (97<<3),RX_CRC_EN) // 1 Bit, 1'h0, RW
#define ETH_RX_ERR_EN _bm(_ETH_97,REG_BASE_ETH, (97<<3),RX_ERR_EN) // 1 Bit, 1'h0, RW
#define ETH_RX_LTC _bm(_ETH_98,REG_BASE_ETH, (98<<3),RX_LTC) // 12 Bit, 12'h0, RW
#define ETH_TX_GO_LTC _bm(_ETH_99,REG_BASE_ETH, (99<<3),TX_GO_LTC) // 12 Bit, 12'h0, RW
#define ETH_TX_LTC _bm(_ETH_100,REG_BASE_ETH, (100<<3),TX_LTC) // 12 Bit, 12'h0, RW
#define ETH_LEN_CUR _bm(_ETH_131072,REG_BASE_ETH, (131072<<3),LEN_CUR) // 8 Bit, 8'h0, RW
#define ETH_LEN_DAT _bm(_ETH_131072,REG_BASE_ETH, (131072<<3),LEN_DAT) // 10 Bit, 10'h0, RW
#define GPIO_PIN0_IN _bm(_GPIO_0,REG_BASE_GPIO, (0<<3),PIN0_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN0_OUT _bm(_GPIO_0,REG_BASE_GPIO, (0<<3),PIN0_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN0_OEN _bm(_GPIO_0,REG_BASE_GPIO, (0<<3),PIN0_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN0_IRQ_DIR _bm(_GPIO_0,REG_BASE_GPIO, (0<<3),PIN0_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN0_IRQ_EN _bm(_GPIO_0,REG_BASE_GPIO, (0<<3),PIN0_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN0_IRQ_CLR _bm(_GPIO_0,REG_BASE_GPIO, (0<<3),PIN0_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN0_IRQ _bm(_GPIO_0,REG_BASE_GPIO, (0<<3),PIN0_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN1_IN _bm(_GPIO_1,REG_BASE_GPIO, (1<<3),PIN1_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN1_OUT _bm(_GPIO_1,REG_BASE_GPIO, (1<<3),PIN1_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN1_OEN _bm(_GPIO_1,REG_BASE_GPIO, (1<<3),PIN1_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN1_IRQ_DIR _bm(_GPIO_1,REG_BASE_GPIO, (1<<3),PIN1_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN1_IRQ_EN _bm(_GPIO_1,REG_BASE_GPIO, (1<<3),PIN1_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN1_IRQ_CLR _bm(_GPIO_1,REG_BASE_GPIO, (1<<3),PIN1_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN1_IRQ _bm(_GPIO_1,REG_BASE_GPIO, (1<<3),PIN1_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN2_IN _bm(_GPIO_2,REG_BASE_GPIO, (2<<3),PIN2_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN2_OUT _bm(_GPIO_2,REG_BASE_GPIO, (2<<3),PIN2_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN2_OEN _bm(_GPIO_2,REG_BASE_GPIO, (2<<3),PIN2_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN2_IRQ_DIR _bm(_GPIO_2,REG_BASE_GPIO, (2<<3),PIN2_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN2_IRQ_EN _bm(_GPIO_2,REG_BASE_GPIO, (2<<3),PIN2_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN2_IRQ_CLR _bm(_GPIO_2,REG_BASE_GPIO, (2<<3),PIN2_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN2_IRQ _bm(_GPIO_2,REG_BASE_GPIO, (2<<3),PIN2_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN3_IN _bm(_GPIO_3,REG_BASE_GPIO, (3<<3),PIN3_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN3_OUT _bm(_GPIO_3,REG_BASE_GPIO, (3<<3),PIN3_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN3_OEN _bm(_GPIO_3,REG_BASE_GPIO, (3<<3),PIN3_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN3_IRQ_DIR _bm(_GPIO_3,REG_BASE_GPIO, (3<<3),PIN3_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN3_IRQ_EN _bm(_GPIO_3,REG_BASE_GPIO, (3<<3),PIN3_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN3_IRQ_CLR _bm(_GPIO_3,REG_BASE_GPIO, (3<<3),PIN3_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN3_IRQ _bm(_GPIO_3,REG_BASE_GPIO, (3<<3),PIN3_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN4_IN _bm(_GPIO_4,REG_BASE_GPIO, (4<<3),PIN4_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN4_OUT _bm(_GPIO_4,REG_BASE_GPIO, (4<<3),PIN4_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN4_OEN _bm(_GPIO_4,REG_BASE_GPIO, (4<<3),PIN4_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN4_IRQ_DIR _bm(_GPIO_4,REG_BASE_GPIO, (4<<3),PIN4_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN4_IRQ_EN _bm(_GPIO_4,REG_BASE_GPIO, (4<<3),PIN4_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN4_IRQ_CLR _bm(_GPIO_4,REG_BASE_GPIO, (4<<3),PIN4_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN4_IRQ _bm(_GPIO_4,REG_BASE_GPIO, (4<<3),PIN4_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN5_IN _bm(_GPIO_5,REG_BASE_GPIO, (5<<3),PIN5_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN5_OUT _bm(_GPIO_5,REG_BASE_GPIO, (5<<3),PIN5_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN5_OEN _bm(_GPIO_5,REG_BASE_GPIO, (5<<3),PIN5_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN5_IRQ_DIR _bm(_GPIO_5,REG_BASE_GPIO, (5<<3),PIN5_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN5_IRQ_EN _bm(_GPIO_5,REG_BASE_GPIO, (5<<3),PIN5_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN5_IRQ_CLR _bm(_GPIO_5,REG_BASE_GPIO, (5<<3),PIN5_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN5_IRQ _bm(_GPIO_5,REG_BASE_GPIO, (5<<3),PIN5_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN6_IN _bm(_GPIO_6,REG_BASE_GPIO, (6<<3),PIN6_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN6_OUT _bm(_GPIO_6,REG_BASE_GPIO, (6<<3),PIN6_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN6_OEN _bm(_GPIO_6,REG_BASE_GPIO, (6<<3),PIN6_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN6_IRQ_DIR _bm(_GPIO_6,REG_BASE_GPIO, (6<<3),PIN6_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN6_IRQ_EN _bm(_GPIO_6,REG_BASE_GPIO, (6<<3),PIN6_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN6_IRQ_CLR _bm(_GPIO_6,REG_BASE_GPIO, (6<<3),PIN6_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN6_IRQ _bm(_GPIO_6,REG_BASE_GPIO, (6<<3),PIN6_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN7_IN _bm(_GPIO_7,REG_BASE_GPIO, (7<<3),PIN7_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN7_OUT _bm(_GPIO_7,REG_BASE_GPIO, (7<<3),PIN7_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN7_OEN _bm(_GPIO_7,REG_BASE_GPIO, (7<<3),PIN7_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN7_IRQ_DIR _bm(_GPIO_7,REG_BASE_GPIO, (7<<3),PIN7_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN7_IRQ_EN _bm(_GPIO_7,REG_BASE_GPIO, (7<<3),PIN7_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN7_IRQ_CLR _bm(_GPIO_7,REG_BASE_GPIO, (7<<3),PIN7_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN7_IRQ _bm(_GPIO_7,REG_BASE_GPIO, (7<<3),PIN7_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN8_IN _bm(_GPIO_8,REG_BASE_GPIO, (8<<3),PIN8_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN8_OUT _bm(_GPIO_8,REG_BASE_GPIO, (8<<3),PIN8_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN8_OEN _bm(_GPIO_8,REG_BASE_GPIO, (8<<3),PIN8_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN8_IRQ_DIR _bm(_GPIO_8,REG_BASE_GPIO, (8<<3),PIN8_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN8_IRQ_EN _bm(_GPIO_8,REG_BASE_GPIO, (8<<3),PIN8_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN8_IRQ_CLR _bm(_GPIO_8,REG_BASE_GPIO, (8<<3),PIN8_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN8_IRQ _bm(_GPIO_8,REG_BASE_GPIO, (8<<3),PIN8_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN9_IN _bm(_GPIO_9,REG_BASE_GPIO, (9<<3),PIN9_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN9_OUT _bm(_GPIO_9,REG_BASE_GPIO, (9<<3),PIN9_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN9_OEN _bm(_GPIO_9,REG_BASE_GPIO, (9<<3),PIN9_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN9_IRQ_DIR _bm(_GPIO_9,REG_BASE_GPIO, (9<<3),PIN9_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN9_IRQ_EN _bm(_GPIO_9,REG_BASE_GPIO, (9<<3),PIN9_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN9_IRQ_CLR _bm(_GPIO_9,REG_BASE_GPIO, (9<<3),PIN9_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN9_IRQ _bm(_GPIO_9,REG_BASE_GPIO, (9<<3),PIN9_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN10_IN _bm(_GPIO_10,REG_BASE_GPIO, (10<<3),PIN10_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN10_OUT _bm(_GPIO_10,REG_BASE_GPIO, (10<<3),PIN10_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN10_OEN _bm(_GPIO_10,REG_BASE_GPIO, (10<<3),PIN10_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN10_IRQ_DIR _bm(_GPIO_10,REG_BASE_GPIO, (10<<3),PIN10_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN10_IRQ_EN _bm(_GPIO_10,REG_BASE_GPIO, (10<<3),PIN10_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN10_IRQ_CLR _bm(_GPIO_10,REG_BASE_GPIO, (10<<3),PIN10_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN10_IRQ _bm(_GPIO_10,REG_BASE_GPIO, (10<<3),PIN10_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN11_IN _bm(_GPIO_11,REG_BASE_GPIO, (11<<3),PIN11_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN11_OUT _bm(_GPIO_11,REG_BASE_GPIO, (11<<3),PIN11_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN11_OEN _bm(_GPIO_11,REG_BASE_GPIO, (11<<3),PIN11_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN11_IRQ_DIR _bm(_GPIO_11,REG_BASE_GPIO, (11<<3),PIN11_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN11_IRQ_EN _bm(_GPIO_11,REG_BASE_GPIO, (11<<3),PIN11_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN11_IRQ_CLR _bm(_GPIO_11,REG_BASE_GPIO, (11<<3),PIN11_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN11_IRQ _bm(_GPIO_11,REG_BASE_GPIO, (11<<3),PIN11_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN12_IN _bm(_GPIO_12,REG_BASE_GPIO, (12<<3),PIN12_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN12_OUT _bm(_GPIO_12,REG_BASE_GPIO, (12<<3),PIN12_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN12_OEN _bm(_GPIO_12,REG_BASE_GPIO, (12<<3),PIN12_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN12_IRQ_DIR _bm(_GPIO_12,REG_BASE_GPIO, (12<<3),PIN12_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN12_IRQ_EN _bm(_GPIO_12,REG_BASE_GPIO, (12<<3),PIN12_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN12_IRQ_CLR _bm(_GPIO_12,REG_BASE_GPIO, (12<<3),PIN12_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN12_IRQ _bm(_GPIO_12,REG_BASE_GPIO, (12<<3),PIN12_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN13_IN _bm(_GPIO_13,REG_BASE_GPIO, (13<<3),PIN13_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN13_OUT _bm(_GPIO_13,REG_BASE_GPIO, (13<<3),PIN13_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN13_OEN _bm(_GPIO_13,REG_BASE_GPIO, (13<<3),PIN13_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN13_IRQ_DIR _bm(_GPIO_13,REG_BASE_GPIO, (13<<3),PIN13_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN13_IRQ_EN _bm(_GPIO_13,REG_BASE_GPIO, (13<<3),PIN13_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN13_IRQ_CLR _bm(_GPIO_13,REG_BASE_GPIO, (13<<3),PIN13_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN13_IRQ _bm(_GPIO_13,REG_BASE_GPIO, (13<<3),PIN13_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN14_IN _bm(_GPIO_14,REG_BASE_GPIO, (14<<3),PIN14_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN14_OUT _bm(_GPIO_14,REG_BASE_GPIO, (14<<3),PIN14_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN14_OEN _bm(_GPIO_14,REG_BASE_GPIO, (14<<3),PIN14_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN14_IRQ_DIR _bm(_GPIO_14,REG_BASE_GPIO, (14<<3),PIN14_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN14_IRQ_EN _bm(_GPIO_14,REG_BASE_GPIO, (14<<3),PIN14_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN14_IRQ_CLR _bm(_GPIO_14,REG_BASE_GPIO, (14<<3),PIN14_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN14_IRQ _bm(_GPIO_14,REG_BASE_GPIO, (14<<3),PIN14_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN15_IN _bm(_GPIO_15,REG_BASE_GPIO, (15<<3),PIN15_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN15_OUT _bm(_GPIO_15,REG_BASE_GPIO, (15<<3),PIN15_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN15_OEN _bm(_GPIO_15,REG_BASE_GPIO, (15<<3),PIN15_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN15_IRQ_DIR _bm(_GPIO_15,REG_BASE_GPIO, (15<<3),PIN15_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN15_IRQ_EN _bm(_GPIO_15,REG_BASE_GPIO, (15<<3),PIN15_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN15_IRQ_CLR _bm(_GPIO_15,REG_BASE_GPIO, (15<<3),PIN15_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN15_IRQ _bm(_GPIO_15,REG_BASE_GPIO, (15<<3),PIN15_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN16_IN _bm(_GPIO_16,REG_BASE_GPIO, (16<<3),PIN16_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN16_OUT _bm(_GPIO_16,REG_BASE_GPIO, (16<<3),PIN16_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN16_OEN _bm(_GPIO_16,REG_BASE_GPIO, (16<<3),PIN16_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN16_IRQ_DIR _bm(_GPIO_16,REG_BASE_GPIO, (16<<3),PIN16_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN16_IRQ_EN _bm(_GPIO_16,REG_BASE_GPIO, (16<<3),PIN16_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN16_IRQ_CLR _bm(_GPIO_16,REG_BASE_GPIO, (16<<3),PIN16_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN16_IRQ _bm(_GPIO_16,REG_BASE_GPIO, (16<<3),PIN16_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN17_IN _bm(_GPIO_17,REG_BASE_GPIO, (17<<3),PIN17_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN17_OUT _bm(_GPIO_17,REG_BASE_GPIO, (17<<3),PIN17_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN17_OEN _bm(_GPIO_17,REG_BASE_GPIO, (17<<3),PIN17_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN17_IRQ_DIR _bm(_GPIO_17,REG_BASE_GPIO, (17<<3),PIN17_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN17_IRQ_EN _bm(_GPIO_17,REG_BASE_GPIO, (17<<3),PIN17_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN17_IRQ_CLR _bm(_GPIO_17,REG_BASE_GPIO, (17<<3),PIN17_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN17_IRQ _bm(_GPIO_17,REG_BASE_GPIO, (17<<3),PIN17_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN18_IN _bm(_GPIO_18,REG_BASE_GPIO, (18<<3),PIN18_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN18_OUT _bm(_GPIO_18,REG_BASE_GPIO, (18<<3),PIN18_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN18_OEN _bm(_GPIO_18,REG_BASE_GPIO, (18<<3),PIN18_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN18_IRQ_DIR _bm(_GPIO_18,REG_BASE_GPIO, (18<<3),PIN18_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN18_IRQ_EN _bm(_GPIO_18,REG_BASE_GPIO, (18<<3),PIN18_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN18_IRQ_CLR _bm(_GPIO_18,REG_BASE_GPIO, (18<<3),PIN18_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN18_IRQ _bm(_GPIO_18,REG_BASE_GPIO, (18<<3),PIN18_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN19_IN _bm(_GPIO_19,REG_BASE_GPIO, (19<<3),PIN19_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN19_OUT _bm(_GPIO_19,REG_BASE_GPIO, (19<<3),PIN19_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN19_OEN _bm(_GPIO_19,REG_BASE_GPIO, (19<<3),PIN19_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN19_IRQ_DIR _bm(_GPIO_19,REG_BASE_GPIO, (19<<3),PIN19_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN19_IRQ_EN _bm(_GPIO_19,REG_BASE_GPIO, (19<<3),PIN19_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN19_IRQ_CLR _bm(_GPIO_19,REG_BASE_GPIO, (19<<3),PIN19_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN19_IRQ _bm(_GPIO_19,REG_BASE_GPIO, (19<<3),PIN19_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN20_IN _bm(_GPIO_20,REG_BASE_GPIO, (20<<3),PIN20_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN20_OUT _bm(_GPIO_20,REG_BASE_GPIO, (20<<3),PIN20_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN20_OEN _bm(_GPIO_20,REG_BASE_GPIO, (20<<3),PIN20_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN20_IRQ_DIR _bm(_GPIO_20,REG_BASE_GPIO, (20<<3),PIN20_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN20_IRQ_EN _bm(_GPIO_20,REG_BASE_GPIO, (20<<3),PIN20_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN20_IRQ_CLR _bm(_GPIO_20,REG_BASE_GPIO, (20<<3),PIN20_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN20_IRQ _bm(_GPIO_20,REG_BASE_GPIO, (20<<3),PIN20_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN21_IN _bm(_GPIO_21,REG_BASE_GPIO, (21<<3),PIN21_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN21_OUT _bm(_GPIO_21,REG_BASE_GPIO, (21<<3),PIN21_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN21_OEN _bm(_GPIO_21,REG_BASE_GPIO, (21<<3),PIN21_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN21_IRQ_DIR _bm(_GPIO_21,REG_BASE_GPIO, (21<<3),PIN21_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN21_IRQ_EN _bm(_GPIO_21,REG_BASE_GPIO, (21<<3),PIN21_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN21_IRQ_CLR _bm(_GPIO_21,REG_BASE_GPIO, (21<<3),PIN21_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN21_IRQ _bm(_GPIO_21,REG_BASE_GPIO, (21<<3),PIN21_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN22_IN _bm(_GPIO_22,REG_BASE_GPIO, (22<<3),PIN22_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN22_OUT _bm(_GPIO_22,REG_BASE_GPIO, (22<<3),PIN22_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN22_OEN _bm(_GPIO_22,REG_BASE_GPIO, (22<<3),PIN22_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN22_IRQ_DIR _bm(_GPIO_22,REG_BASE_GPIO, (22<<3),PIN22_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN22_IRQ_EN _bm(_GPIO_22,REG_BASE_GPIO, (22<<3),PIN22_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN22_IRQ_CLR _bm(_GPIO_22,REG_BASE_GPIO, (22<<3),PIN22_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN22_IRQ _bm(_GPIO_22,REG_BASE_GPIO, (22<<3),PIN22_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN23_IN _bm(_GPIO_23,REG_BASE_GPIO, (23<<3),PIN23_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN23_OUT _bm(_GPIO_23,REG_BASE_GPIO, (23<<3),PIN23_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN23_OEN _bm(_GPIO_23,REG_BASE_GPIO, (23<<3),PIN23_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN23_IRQ_DIR _bm(_GPIO_23,REG_BASE_GPIO, (23<<3),PIN23_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN23_IRQ_EN _bm(_GPIO_23,REG_BASE_GPIO, (23<<3),PIN23_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN23_IRQ_CLR _bm(_GPIO_23,REG_BASE_GPIO, (23<<3),PIN23_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN23_IRQ _bm(_GPIO_23,REG_BASE_GPIO, (23<<3),PIN23_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN24_IN _bm(_GPIO_24,REG_BASE_GPIO, (24<<3),PIN24_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN24_OUT _bm(_GPIO_24,REG_BASE_GPIO, (24<<3),PIN24_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN24_OEN _bm(_GPIO_24,REG_BASE_GPIO, (24<<3),PIN24_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN24_IRQ_DIR _bm(_GPIO_24,REG_BASE_GPIO, (24<<3),PIN24_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN24_IRQ_EN _bm(_GPIO_24,REG_BASE_GPIO, (24<<3),PIN24_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN24_IRQ_CLR _bm(_GPIO_24,REG_BASE_GPIO, (24<<3),PIN24_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN24_IRQ _bm(_GPIO_24,REG_BASE_GPIO, (24<<3),PIN24_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN25_IN _bm(_GPIO_25,REG_BASE_GPIO, (25<<3),PIN25_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN25_OUT _bm(_GPIO_25,REG_BASE_GPIO, (25<<3),PIN25_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN25_OEN _bm(_GPIO_25,REG_BASE_GPIO, (25<<3),PIN25_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN25_IRQ_DIR _bm(_GPIO_25,REG_BASE_GPIO, (25<<3),PIN25_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN25_IRQ_EN _bm(_GPIO_25,REG_BASE_GPIO, (25<<3),PIN25_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN25_IRQ_CLR _bm(_GPIO_25,REG_BASE_GPIO, (25<<3),PIN25_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN25_IRQ _bm(_GPIO_25,REG_BASE_GPIO, (25<<3),PIN25_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN26_IN _bm(_GPIO_26,REG_BASE_GPIO, (26<<3),PIN26_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN26_OUT _bm(_GPIO_26,REG_BASE_GPIO, (26<<3),PIN26_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN26_OEN _bm(_GPIO_26,REG_BASE_GPIO, (26<<3),PIN26_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN26_IRQ_DIR _bm(_GPIO_26,REG_BASE_GPIO, (26<<3),PIN26_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN26_IRQ_EN _bm(_GPIO_26,REG_BASE_GPIO, (26<<3),PIN26_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN26_IRQ_CLR _bm(_GPIO_26,REG_BASE_GPIO, (26<<3),PIN26_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN26_IRQ _bm(_GPIO_26,REG_BASE_GPIO, (26<<3),PIN26_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN27_IN _bm(_GPIO_27,REG_BASE_GPIO, (27<<3),PIN27_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN27_OUT _bm(_GPIO_27,REG_BASE_GPIO, (27<<3),PIN27_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN27_OEN _bm(_GPIO_27,REG_BASE_GPIO, (27<<3),PIN27_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN27_IRQ_DIR _bm(_GPIO_27,REG_BASE_GPIO, (27<<3),PIN27_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN27_IRQ_EN _bm(_GPIO_27,REG_BASE_GPIO, (27<<3),PIN27_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN27_IRQ_CLR _bm(_GPIO_27,REG_BASE_GPIO, (27<<3),PIN27_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN27_IRQ _bm(_GPIO_27,REG_BASE_GPIO, (27<<3),PIN27_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN28_IN _bm(_GPIO_28,REG_BASE_GPIO, (28<<3),PIN28_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN28_OUT _bm(_GPIO_28,REG_BASE_GPIO, (28<<3),PIN28_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN28_OEN _bm(_GPIO_28,REG_BASE_GPIO, (28<<3),PIN28_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN28_IRQ_DIR _bm(_GPIO_28,REG_BASE_GPIO, (28<<3),PIN28_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN28_IRQ_EN _bm(_GPIO_28,REG_BASE_GPIO, (28<<3),PIN28_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN28_IRQ_CLR _bm(_GPIO_28,REG_BASE_GPIO, (28<<3),PIN28_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN28_IRQ _bm(_GPIO_28,REG_BASE_GPIO, (28<<3),PIN28_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN29_IN _bm(_GPIO_29,REG_BASE_GPIO, (29<<3),PIN29_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN29_OUT _bm(_GPIO_29,REG_BASE_GPIO, (29<<3),PIN29_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN29_OEN _bm(_GPIO_29,REG_BASE_GPIO, (29<<3),PIN29_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN29_IRQ_DIR _bm(_GPIO_29,REG_BASE_GPIO, (29<<3),PIN29_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN29_IRQ_EN _bm(_GPIO_29,REG_BASE_GPIO, (29<<3),PIN29_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN29_IRQ_CLR _bm(_GPIO_29,REG_BASE_GPIO, (29<<3),PIN29_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN29_IRQ _bm(_GPIO_29,REG_BASE_GPIO, (29<<3),PIN29_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN30_IN _bm(_GPIO_30,REG_BASE_GPIO, (30<<3),PIN30_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN30_OUT _bm(_GPIO_30,REG_BASE_GPIO, (30<<3),PIN30_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN30_OEN _bm(_GPIO_30,REG_BASE_GPIO, (30<<3),PIN30_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN30_IRQ_DIR _bm(_GPIO_30,REG_BASE_GPIO, (30<<3),PIN30_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN30_IRQ_EN _bm(_GPIO_30,REG_BASE_GPIO, (30<<3),PIN30_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN30_IRQ_CLR _bm(_GPIO_30,REG_BASE_GPIO, (30<<3),PIN30_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN30_IRQ _bm(_GPIO_30,REG_BASE_GPIO, (30<<3),PIN30_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN31_IN _bm(_GPIO_31,REG_BASE_GPIO, (31<<3),PIN31_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN31_OUT _bm(_GPIO_31,REG_BASE_GPIO, (31<<3),PIN31_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN31_OEN _bm(_GPIO_31,REG_BASE_GPIO, (31<<3),PIN31_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN31_IRQ_DIR _bm(_GPIO_31,REG_BASE_GPIO, (31<<3),PIN31_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN31_IRQ_EN _bm(_GPIO_31,REG_BASE_GPIO, (31<<3),PIN31_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN31_IRQ_CLR _bm(_GPIO_31,REG_BASE_GPIO, (31<<3),PIN31_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN31_IRQ _bm(_GPIO_31,REG_BASE_GPIO, (31<<3),PIN31_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN32_IN _bm(_GPIO_32,REG_BASE_GPIO, (32<<3),PIN32_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN32_OUT _bm(_GPIO_32,REG_BASE_GPIO, (32<<3),PIN32_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN32_OEN _bm(_GPIO_32,REG_BASE_GPIO, (32<<3),PIN32_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN32_IRQ_DIR _bm(_GPIO_32,REG_BASE_GPIO, (32<<3),PIN32_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN32_IRQ_EN _bm(_GPIO_32,REG_BASE_GPIO, (32<<3),PIN32_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN32_IRQ_CLR _bm(_GPIO_32,REG_BASE_GPIO, (32<<3),PIN32_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN32_IRQ _bm(_GPIO_32,REG_BASE_GPIO, (32<<3),PIN32_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN33_IN _bm(_GPIO_33,REG_BASE_GPIO, (33<<3),PIN33_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN33_OUT _bm(_GPIO_33,REG_BASE_GPIO, (33<<3),PIN33_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN33_OEN _bm(_GPIO_33,REG_BASE_GPIO, (33<<3),PIN33_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN33_IRQ_DIR _bm(_GPIO_33,REG_BASE_GPIO, (33<<3),PIN33_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN33_IRQ_EN _bm(_GPIO_33,REG_BASE_GPIO, (33<<3),PIN33_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN33_IRQ_CLR _bm(_GPIO_33,REG_BASE_GPIO, (33<<3),PIN33_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN33_IRQ _bm(_GPIO_33,REG_BASE_GPIO, (33<<3),PIN33_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN34_IN _bm(_GPIO_34,REG_BASE_GPIO, (34<<3),PIN34_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN34_OUT _bm(_GPIO_34,REG_BASE_GPIO, (34<<3),PIN34_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN34_OEN _bm(_GPIO_34,REG_BASE_GPIO, (34<<3),PIN34_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN34_IRQ_DIR _bm(_GPIO_34,REG_BASE_GPIO, (34<<3),PIN34_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN34_IRQ_EN _bm(_GPIO_34,REG_BASE_GPIO, (34<<3),PIN34_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN34_IRQ_CLR _bm(_GPIO_34,REG_BASE_GPIO, (34<<3),PIN34_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN34_IRQ _bm(_GPIO_34,REG_BASE_GPIO, (34<<3),PIN34_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN35_IN _bm(_GPIO_35,REG_BASE_GPIO, (35<<3),PIN35_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN35_OUT _bm(_GPIO_35,REG_BASE_GPIO, (35<<3),PIN35_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN35_OEN _bm(_GPIO_35,REG_BASE_GPIO, (35<<3),PIN35_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN35_IRQ_DIR _bm(_GPIO_35,REG_BASE_GPIO, (35<<3),PIN35_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN35_IRQ_EN _bm(_GPIO_35,REG_BASE_GPIO, (35<<3),PIN35_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN35_IRQ_CLR _bm(_GPIO_35,REG_BASE_GPIO, (35<<3),PIN35_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN35_IRQ _bm(_GPIO_35,REG_BASE_GPIO, (35<<3),PIN35_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN36_IN _bm(_GPIO_36,REG_BASE_GPIO, (36<<3),PIN36_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN36_OUT _bm(_GPIO_36,REG_BASE_GPIO, (36<<3),PIN36_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN36_OEN _bm(_GPIO_36,REG_BASE_GPIO, (36<<3),PIN36_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN36_IRQ_DIR _bm(_GPIO_36,REG_BASE_GPIO, (36<<3),PIN36_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN36_IRQ_EN _bm(_GPIO_36,REG_BASE_GPIO, (36<<3),PIN36_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN36_IRQ_CLR _bm(_GPIO_36,REG_BASE_GPIO, (36<<3),PIN36_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN36_IRQ _bm(_GPIO_36,REG_BASE_GPIO, (36<<3),PIN36_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN37_IN _bm(_GPIO_37,REG_BASE_GPIO, (37<<3),PIN37_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN37_OUT _bm(_GPIO_37,REG_BASE_GPIO, (37<<3),PIN37_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN37_OEN _bm(_GPIO_37,REG_BASE_GPIO, (37<<3),PIN37_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN37_IRQ_DIR _bm(_GPIO_37,REG_BASE_GPIO, (37<<3),PIN37_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN37_IRQ_EN _bm(_GPIO_37,REG_BASE_GPIO, (37<<3),PIN37_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN37_IRQ_CLR _bm(_GPIO_37,REG_BASE_GPIO, (37<<3),PIN37_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN37_IRQ _bm(_GPIO_37,REG_BASE_GPIO, (37<<3),PIN37_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN38_IN _bm(_GPIO_38,REG_BASE_GPIO, (38<<3),PIN38_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN38_OUT _bm(_GPIO_38,REG_BASE_GPIO, (38<<3),PIN38_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN38_OEN _bm(_GPIO_38,REG_BASE_GPIO, (38<<3),PIN38_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN38_IRQ_DIR _bm(_GPIO_38,REG_BASE_GPIO, (38<<3),PIN38_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN38_IRQ_EN _bm(_GPIO_38,REG_BASE_GPIO, (38<<3),PIN38_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN38_IRQ_CLR _bm(_GPIO_38,REG_BASE_GPIO, (38<<3),PIN38_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN38_IRQ _bm(_GPIO_38,REG_BASE_GPIO, (38<<3),PIN38_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN39_IN _bm(_GPIO_39,REG_BASE_GPIO, (39<<3),PIN39_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN39_OUT _bm(_GPIO_39,REG_BASE_GPIO, (39<<3),PIN39_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN39_OEN _bm(_GPIO_39,REG_BASE_GPIO, (39<<3),PIN39_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN39_IRQ_DIR _bm(_GPIO_39,REG_BASE_GPIO, (39<<3),PIN39_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN39_IRQ_EN _bm(_GPIO_39,REG_BASE_GPIO, (39<<3),PIN39_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN39_IRQ_CLR _bm(_GPIO_39,REG_BASE_GPIO, (39<<3),PIN39_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN39_IRQ _bm(_GPIO_39,REG_BASE_GPIO, (39<<3),PIN39_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN40_IN _bm(_GPIO_40,REG_BASE_GPIO, (40<<3),PIN40_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN40_OUT _bm(_GPIO_40,REG_BASE_GPIO, (40<<3),PIN40_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN40_OEN _bm(_GPIO_40,REG_BASE_GPIO, (40<<3),PIN40_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN40_IRQ_DIR _bm(_GPIO_40,REG_BASE_GPIO, (40<<3),PIN40_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN40_IRQ_EN _bm(_GPIO_40,REG_BASE_GPIO, (40<<3),PIN40_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN40_IRQ_CLR _bm(_GPIO_40,REG_BASE_GPIO, (40<<3),PIN40_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN40_IRQ _bm(_GPIO_40,REG_BASE_GPIO, (40<<3),PIN40_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN41_IN _bm(_GPIO_41,REG_BASE_GPIO, (41<<3),PIN41_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN41_OUT _bm(_GPIO_41,REG_BASE_GPIO, (41<<3),PIN41_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN41_OEN _bm(_GPIO_41,REG_BASE_GPIO, (41<<3),PIN41_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN41_IRQ_DIR _bm(_GPIO_41,REG_BASE_GPIO, (41<<3),PIN41_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN41_IRQ_EN _bm(_GPIO_41,REG_BASE_GPIO, (41<<3),PIN41_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN41_IRQ_CLR _bm(_GPIO_41,REG_BASE_GPIO, (41<<3),PIN41_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN41_IRQ _bm(_GPIO_41,REG_BASE_GPIO, (41<<3),PIN41_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN42_IN _bm(_GPIO_42,REG_BASE_GPIO, (42<<3),PIN42_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN42_OUT _bm(_GPIO_42,REG_BASE_GPIO, (42<<3),PIN42_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN42_OEN _bm(_GPIO_42,REG_BASE_GPIO, (42<<3),PIN42_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN42_IRQ_DIR _bm(_GPIO_42,REG_BASE_GPIO, (42<<3),PIN42_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN42_IRQ_EN _bm(_GPIO_42,REG_BASE_GPIO, (42<<3),PIN42_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN42_IRQ_CLR _bm(_GPIO_42,REG_BASE_GPIO, (42<<3),PIN42_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN42_IRQ _bm(_GPIO_42,REG_BASE_GPIO, (42<<3),PIN42_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN43_IN _bm(_GPIO_43,REG_BASE_GPIO, (43<<3),PIN43_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN43_OUT _bm(_GPIO_43,REG_BASE_GPIO, (43<<3),PIN43_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN43_OEN _bm(_GPIO_43,REG_BASE_GPIO, (43<<3),PIN43_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN43_IRQ_DIR _bm(_GPIO_43,REG_BASE_GPIO, (43<<3),PIN43_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN43_IRQ_EN _bm(_GPIO_43,REG_BASE_GPIO, (43<<3),PIN43_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN43_IRQ_CLR _bm(_GPIO_43,REG_BASE_GPIO, (43<<3),PIN43_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN43_IRQ _bm(_GPIO_43,REG_BASE_GPIO, (43<<3),PIN43_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN44_IN _bm(_GPIO_44,REG_BASE_GPIO, (44<<3),PIN44_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN44_OUT _bm(_GPIO_44,REG_BASE_GPIO, (44<<3),PIN44_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN44_OEN _bm(_GPIO_44,REG_BASE_GPIO, (44<<3),PIN44_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN44_IRQ_DIR _bm(_GPIO_44,REG_BASE_GPIO, (44<<3),PIN44_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN44_IRQ_EN _bm(_GPIO_44,REG_BASE_GPIO, (44<<3),PIN44_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN44_IRQ_CLR _bm(_GPIO_44,REG_BASE_GPIO, (44<<3),PIN44_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN44_IRQ _bm(_GPIO_44,REG_BASE_GPIO, (44<<3),PIN44_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN45_IN _bm(_GPIO_45,REG_BASE_GPIO, (45<<3),PIN45_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN45_OUT _bm(_GPIO_45,REG_BASE_GPIO, (45<<3),PIN45_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN45_OEN _bm(_GPIO_45,REG_BASE_GPIO, (45<<3),PIN45_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN45_IRQ_DIR _bm(_GPIO_45,REG_BASE_GPIO, (45<<3),PIN45_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN45_IRQ_EN _bm(_GPIO_45,REG_BASE_GPIO, (45<<3),PIN45_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN45_IRQ_CLR _bm(_GPIO_45,REG_BASE_GPIO, (45<<3),PIN45_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN45_IRQ _bm(_GPIO_45,REG_BASE_GPIO, (45<<3),PIN45_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN46_IN _bm(_GPIO_46,REG_BASE_GPIO, (46<<3),PIN46_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN46_OUT _bm(_GPIO_46,REG_BASE_GPIO, (46<<3),PIN46_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN46_OEN _bm(_GPIO_46,REG_BASE_GPIO, (46<<3),PIN46_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN46_IRQ_DIR _bm(_GPIO_46,REG_BASE_GPIO, (46<<3),PIN46_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN46_IRQ_EN _bm(_GPIO_46,REG_BASE_GPIO, (46<<3),PIN46_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN46_IRQ_CLR _bm(_GPIO_46,REG_BASE_GPIO, (46<<3),PIN46_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN46_IRQ _bm(_GPIO_46,REG_BASE_GPIO, (46<<3),PIN46_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN47_IN _bm(_GPIO_47,REG_BASE_GPIO, (47<<3),PIN47_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN47_OUT _bm(_GPIO_47,REG_BASE_GPIO, (47<<3),PIN47_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN47_OEN _bm(_GPIO_47,REG_BASE_GPIO, (47<<3),PIN47_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN47_IRQ_DIR _bm(_GPIO_47,REG_BASE_GPIO, (47<<3),PIN47_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN47_IRQ_EN _bm(_GPIO_47,REG_BASE_GPIO, (47<<3),PIN47_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN47_IRQ_CLR _bm(_GPIO_47,REG_BASE_GPIO, (47<<3),PIN47_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN47_IRQ _bm(_GPIO_47,REG_BASE_GPIO, (47<<3),PIN47_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN48_IN _bm(_GPIO_48,REG_BASE_GPIO, (48<<3),PIN48_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN48_OUT _bm(_GPIO_48,REG_BASE_GPIO, (48<<3),PIN48_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN48_OEN _bm(_GPIO_48,REG_BASE_GPIO, (48<<3),PIN48_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN48_IRQ_DIR _bm(_GPIO_48,REG_BASE_GPIO, (48<<3),PIN48_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN48_IRQ_EN _bm(_GPIO_48,REG_BASE_GPIO, (48<<3),PIN48_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN48_IRQ_CLR _bm(_GPIO_48,REG_BASE_GPIO, (48<<3),PIN48_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN48_IRQ _bm(_GPIO_48,REG_BASE_GPIO, (48<<3),PIN48_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN49_IN _bm(_GPIO_49,REG_BASE_GPIO, (49<<3),PIN49_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN49_OUT _bm(_GPIO_49,REG_BASE_GPIO, (49<<3),PIN49_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN49_OEN _bm(_GPIO_49,REG_BASE_GPIO, (49<<3),PIN49_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN49_IRQ_DIR _bm(_GPIO_49,REG_BASE_GPIO, (49<<3),PIN49_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN49_IRQ_EN _bm(_GPIO_49,REG_BASE_GPIO, (49<<3),PIN49_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN49_IRQ_CLR _bm(_GPIO_49,REG_BASE_GPIO, (49<<3),PIN49_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN49_IRQ _bm(_GPIO_49,REG_BASE_GPIO, (49<<3),PIN49_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN50_IN _bm(_GPIO_50,REG_BASE_GPIO, (50<<3),PIN50_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN50_OUT _bm(_GPIO_50,REG_BASE_GPIO, (50<<3),PIN50_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN50_OEN _bm(_GPIO_50,REG_BASE_GPIO, (50<<3),PIN50_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN50_IRQ_DIR _bm(_GPIO_50,REG_BASE_GPIO, (50<<3),PIN50_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN50_IRQ_EN _bm(_GPIO_50,REG_BASE_GPIO, (50<<3),PIN50_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN50_IRQ_CLR _bm(_GPIO_50,REG_BASE_GPIO, (50<<3),PIN50_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN50_IRQ _bm(_GPIO_50,REG_BASE_GPIO, (50<<3),PIN50_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN51_IN _bm(_GPIO_51,REG_BASE_GPIO, (51<<3),PIN51_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN51_OUT _bm(_GPIO_51,REG_BASE_GPIO, (51<<3),PIN51_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN51_OEN _bm(_GPIO_51,REG_BASE_GPIO, (51<<3),PIN51_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN51_IRQ_DIR _bm(_GPIO_51,REG_BASE_GPIO, (51<<3),PIN51_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN51_IRQ_EN _bm(_GPIO_51,REG_BASE_GPIO, (51<<3),PIN51_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN51_IRQ_CLR _bm(_GPIO_51,REG_BASE_GPIO, (51<<3),PIN51_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN51_IRQ _bm(_GPIO_51,REG_BASE_GPIO, (51<<3),PIN51_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN52_IN _bm(_GPIO_52,REG_BASE_GPIO, (52<<3),PIN52_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN52_OUT _bm(_GPIO_52,REG_BASE_GPIO, (52<<3),PIN52_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN52_OEN _bm(_GPIO_52,REG_BASE_GPIO, (52<<3),PIN52_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN52_IRQ_DIR _bm(_GPIO_52,REG_BASE_GPIO, (52<<3),PIN52_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN52_IRQ_EN _bm(_GPIO_52,REG_BASE_GPIO, (52<<3),PIN52_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN52_IRQ_CLR _bm(_GPIO_52,REG_BASE_GPIO, (52<<3),PIN52_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN52_IRQ _bm(_GPIO_52,REG_BASE_GPIO, (52<<3),PIN52_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN53_IN _bm(_GPIO_53,REG_BASE_GPIO, (53<<3),PIN53_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN53_OUT _bm(_GPIO_53,REG_BASE_GPIO, (53<<3),PIN53_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN53_OEN _bm(_GPIO_53,REG_BASE_GPIO, (53<<3),PIN53_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN53_IRQ_DIR _bm(_GPIO_53,REG_BASE_GPIO, (53<<3),PIN53_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN53_IRQ_EN _bm(_GPIO_53,REG_BASE_GPIO, (53<<3),PIN53_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN53_IRQ_CLR _bm(_GPIO_53,REG_BASE_GPIO, (53<<3),PIN53_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN53_IRQ _bm(_GPIO_53,REG_BASE_GPIO, (53<<3),PIN53_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN54_IN _bm(_GPIO_54,REG_BASE_GPIO, (54<<3),PIN54_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN54_OUT _bm(_GPIO_54,REG_BASE_GPIO, (54<<3),PIN54_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN54_OEN _bm(_GPIO_54,REG_BASE_GPIO, (54<<3),PIN54_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN54_IRQ_DIR _bm(_GPIO_54,REG_BASE_GPIO, (54<<3),PIN54_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN54_IRQ_EN _bm(_GPIO_54,REG_BASE_GPIO, (54<<3),PIN54_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN54_IRQ_CLR _bm(_GPIO_54,REG_BASE_GPIO, (54<<3),PIN54_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN54_IRQ _bm(_GPIO_54,REG_BASE_GPIO, (54<<3),PIN54_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN55_IN _bm(_GPIO_55,REG_BASE_GPIO, (55<<3),PIN55_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN55_OUT _bm(_GPIO_55,REG_BASE_GPIO, (55<<3),PIN55_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN55_OEN _bm(_GPIO_55,REG_BASE_GPIO, (55<<3),PIN55_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN55_IRQ_DIR _bm(_GPIO_55,REG_BASE_GPIO, (55<<3),PIN55_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN55_IRQ_EN _bm(_GPIO_55,REG_BASE_GPIO, (55<<3),PIN55_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN55_IRQ_CLR _bm(_GPIO_55,REG_BASE_GPIO, (55<<3),PIN55_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN55_IRQ _bm(_GPIO_55,REG_BASE_GPIO, (55<<3),PIN55_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN56_IN _bm(_GPIO_56,REG_BASE_GPIO, (56<<3),PIN56_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN56_OUT _bm(_GPIO_56,REG_BASE_GPIO, (56<<3),PIN56_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN56_OEN _bm(_GPIO_56,REG_BASE_GPIO, (56<<3),PIN56_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN56_IRQ_DIR _bm(_GPIO_56,REG_BASE_GPIO, (56<<3),PIN56_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN56_IRQ_EN _bm(_GPIO_56,REG_BASE_GPIO, (56<<3),PIN56_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN56_IRQ_CLR _bm(_GPIO_56,REG_BASE_GPIO, (56<<3),PIN56_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN56_IRQ _bm(_GPIO_56,REG_BASE_GPIO, (56<<3),PIN56_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN57_IN _bm(_GPIO_57,REG_BASE_GPIO, (57<<3),PIN57_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN57_OUT _bm(_GPIO_57,REG_BASE_GPIO, (57<<3),PIN57_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN57_OEN _bm(_GPIO_57,REG_BASE_GPIO, (57<<3),PIN57_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN57_IRQ_DIR _bm(_GPIO_57,REG_BASE_GPIO, (57<<3),PIN57_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN57_IRQ_EN _bm(_GPIO_57,REG_BASE_GPIO, (57<<3),PIN57_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN57_IRQ_CLR _bm(_GPIO_57,REG_BASE_GPIO, (57<<3),PIN57_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN57_IRQ _bm(_GPIO_57,REG_BASE_GPIO, (57<<3),PIN57_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN58_IN _bm(_GPIO_58,REG_BASE_GPIO, (58<<3),PIN58_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN58_OUT _bm(_GPIO_58,REG_BASE_GPIO, (58<<3),PIN58_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN58_OEN _bm(_GPIO_58,REG_BASE_GPIO, (58<<3),PIN58_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN58_IRQ_DIR _bm(_GPIO_58,REG_BASE_GPIO, (58<<3),PIN58_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN58_IRQ_EN _bm(_GPIO_58,REG_BASE_GPIO, (58<<3),PIN58_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN58_IRQ_CLR _bm(_GPIO_58,REG_BASE_GPIO, (58<<3),PIN58_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN58_IRQ _bm(_GPIO_58,REG_BASE_GPIO, (58<<3),PIN58_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN59_IN _bm(_GPIO_59,REG_BASE_GPIO, (59<<3),PIN59_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN59_OUT _bm(_GPIO_59,REG_BASE_GPIO, (59<<3),PIN59_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN59_OEN _bm(_GPIO_59,REG_BASE_GPIO, (59<<3),PIN59_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN59_IRQ_DIR _bm(_GPIO_59,REG_BASE_GPIO, (59<<3),PIN59_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN59_IRQ_EN _bm(_GPIO_59,REG_BASE_GPIO, (59<<3),PIN59_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN59_IRQ_CLR _bm(_GPIO_59,REG_BASE_GPIO, (59<<3),PIN59_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN59_IRQ _bm(_GPIO_59,REG_BASE_GPIO, (59<<3),PIN59_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN60_IN _bm(_GPIO_60,REG_BASE_GPIO, (60<<3),PIN60_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN60_OUT _bm(_GPIO_60,REG_BASE_GPIO, (60<<3),PIN60_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN60_OEN _bm(_GPIO_60,REG_BASE_GPIO, (60<<3),PIN60_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN60_IRQ_DIR _bm(_GPIO_60,REG_BASE_GPIO, (60<<3),PIN60_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN60_IRQ_EN _bm(_GPIO_60,REG_BASE_GPIO, (60<<3),PIN60_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN60_IRQ_CLR _bm(_GPIO_60,REG_BASE_GPIO, (60<<3),PIN60_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN60_IRQ _bm(_GPIO_60,REG_BASE_GPIO, (60<<3),PIN60_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN61_IN _bm(_GPIO_61,REG_BASE_GPIO, (61<<3),PIN61_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN61_OUT _bm(_GPIO_61,REG_BASE_GPIO, (61<<3),PIN61_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN61_OEN _bm(_GPIO_61,REG_BASE_GPIO, (61<<3),PIN61_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN61_IRQ_DIR _bm(_GPIO_61,REG_BASE_GPIO, (61<<3),PIN61_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN61_IRQ_EN _bm(_GPIO_61,REG_BASE_GPIO, (61<<3),PIN61_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN61_IRQ_CLR _bm(_GPIO_61,REG_BASE_GPIO, (61<<3),PIN61_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN61_IRQ _bm(_GPIO_61,REG_BASE_GPIO, (61<<3),PIN61_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN62_IN _bm(_GPIO_62,REG_BASE_GPIO, (62<<3),PIN62_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN62_OUT _bm(_GPIO_62,REG_BASE_GPIO, (62<<3),PIN62_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN62_OEN _bm(_GPIO_62,REG_BASE_GPIO, (62<<3),PIN62_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN62_IRQ_DIR _bm(_GPIO_62,REG_BASE_GPIO, (62<<3),PIN62_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN62_IRQ_EN _bm(_GPIO_62,REG_BASE_GPIO, (62<<3),PIN62_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN62_IRQ_CLR _bm(_GPIO_62,REG_BASE_GPIO, (62<<3),PIN62_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN62_IRQ _bm(_GPIO_62,REG_BASE_GPIO, (62<<3),PIN62_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN63_IN _bm(_GPIO_63,REG_BASE_GPIO, (63<<3),PIN63_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN63_OUT _bm(_GPIO_63,REG_BASE_GPIO, (63<<3),PIN63_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN63_OEN _bm(_GPIO_63,REG_BASE_GPIO, (63<<3),PIN63_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN63_IRQ_DIR _bm(_GPIO_63,REG_BASE_GPIO, (63<<3),PIN63_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN63_IRQ_EN _bm(_GPIO_63,REG_BASE_GPIO, (63<<3),PIN63_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN63_IRQ_CLR _bm(_GPIO_63,REG_BASE_GPIO, (63<<3),PIN63_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN63_IRQ _bm(_GPIO_63,REG_BASE_GPIO, (63<<3),PIN63_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN64_IN _bm(_GPIO_64,REG_BASE_GPIO, (64<<3),PIN64_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN64_OUT _bm(_GPIO_64,REG_BASE_GPIO, (64<<3),PIN64_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN64_OEN _bm(_GPIO_64,REG_BASE_GPIO, (64<<3),PIN64_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN64_IRQ_DIR _bm(_GPIO_64,REG_BASE_GPIO, (64<<3),PIN64_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN64_IRQ_EN _bm(_GPIO_64,REG_BASE_GPIO, (64<<3),PIN64_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN64_IRQ_CLR _bm(_GPIO_64,REG_BASE_GPIO, (64<<3),PIN64_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN64_IRQ _bm(_GPIO_64,REG_BASE_GPIO, (64<<3),PIN64_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN65_IN _bm(_GPIO_65,REG_BASE_GPIO, (65<<3),PIN65_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN65_OUT _bm(_GPIO_65,REG_BASE_GPIO, (65<<3),PIN65_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN65_OEN _bm(_GPIO_65,REG_BASE_GPIO, (65<<3),PIN65_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN65_IRQ_DIR _bm(_GPIO_65,REG_BASE_GPIO, (65<<3),PIN65_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN65_IRQ_EN _bm(_GPIO_65,REG_BASE_GPIO, (65<<3),PIN65_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN65_IRQ_CLR _bm(_GPIO_65,REG_BASE_GPIO, (65<<3),PIN65_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN65_IRQ _bm(_GPIO_65,REG_BASE_GPIO, (65<<3),PIN65_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN66_IN _bm(_GPIO_66,REG_BASE_GPIO, (66<<3),PIN66_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN66_OUT _bm(_GPIO_66,REG_BASE_GPIO, (66<<3),PIN66_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN66_OEN _bm(_GPIO_66,REG_BASE_GPIO, (66<<3),PIN66_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN66_IRQ_DIR _bm(_GPIO_66,REG_BASE_GPIO, (66<<3),PIN66_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN66_IRQ_EN _bm(_GPIO_66,REG_BASE_GPIO, (66<<3),PIN66_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN66_IRQ_CLR _bm(_GPIO_66,REG_BASE_GPIO, (66<<3),PIN66_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN66_IRQ _bm(_GPIO_66,REG_BASE_GPIO, (66<<3),PIN66_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN67_IN _bm(_GPIO_67,REG_BASE_GPIO, (67<<3),PIN67_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN67_OUT _bm(_GPIO_67,REG_BASE_GPIO, (67<<3),PIN67_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN67_OEN _bm(_GPIO_67,REG_BASE_GPIO, (67<<3),PIN67_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN67_IRQ_DIR _bm(_GPIO_67,REG_BASE_GPIO, (67<<3),PIN67_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN67_IRQ_EN _bm(_GPIO_67,REG_BASE_GPIO, (67<<3),PIN67_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN67_IRQ_CLR _bm(_GPIO_67,REG_BASE_GPIO, (67<<3),PIN67_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN67_IRQ _bm(_GPIO_67,REG_BASE_GPIO, (67<<3),PIN67_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN68_IN _bm(_GPIO_68,REG_BASE_GPIO, (68<<3),PIN68_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN68_OUT _bm(_GPIO_68,REG_BASE_GPIO, (68<<3),PIN68_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN68_OEN _bm(_GPIO_68,REG_BASE_GPIO, (68<<3),PIN68_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN68_IRQ_DIR _bm(_GPIO_68,REG_BASE_GPIO, (68<<3),PIN68_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN68_IRQ_EN _bm(_GPIO_68,REG_BASE_GPIO, (68<<3),PIN68_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN68_IRQ_CLR _bm(_GPIO_68,REG_BASE_GPIO, (68<<3),PIN68_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN68_IRQ _bm(_GPIO_68,REG_BASE_GPIO, (68<<3),PIN68_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN69_IN _bm(_GPIO_69,REG_BASE_GPIO, (69<<3),PIN69_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN69_OUT _bm(_GPIO_69,REG_BASE_GPIO, (69<<3),PIN69_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN69_OEN _bm(_GPIO_69,REG_BASE_GPIO, (69<<3),PIN69_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN69_IRQ_DIR _bm(_GPIO_69,REG_BASE_GPIO, (69<<3),PIN69_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN69_IRQ_EN _bm(_GPIO_69,REG_BASE_GPIO, (69<<3),PIN69_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN69_IRQ_CLR _bm(_GPIO_69,REG_BASE_GPIO, (69<<3),PIN69_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN69_IRQ _bm(_GPIO_69,REG_BASE_GPIO, (69<<3),PIN69_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN70_IN _bm(_GPIO_70,REG_BASE_GPIO, (70<<3),PIN70_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN70_OUT _bm(_GPIO_70,REG_BASE_GPIO, (70<<3),PIN70_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN70_OEN _bm(_GPIO_70,REG_BASE_GPIO, (70<<3),PIN70_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN70_IRQ_DIR _bm(_GPIO_70,REG_BASE_GPIO, (70<<3),PIN70_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN70_IRQ_EN _bm(_GPIO_70,REG_BASE_GPIO, (70<<3),PIN70_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN70_IRQ_CLR _bm(_GPIO_70,REG_BASE_GPIO, (70<<3),PIN70_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN70_IRQ _bm(_GPIO_70,REG_BASE_GPIO, (70<<3),PIN70_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN71_IN _bm(_GPIO_71,REG_BASE_GPIO, (71<<3),PIN71_IN) // 1 Bit, 1'h0, R
#define GPIO_PIN71_OUT _bm(_GPIO_71,REG_BASE_GPIO, (71<<3),PIN71_OUT) // 1 Bit, 1'h0, RW
#define GPIO_PIN71_OEN _bm(_GPIO_71,REG_BASE_GPIO, (71<<3),PIN71_OEN) // 1 Bit, 1'h1, RW
#define GPIO_PIN71_IRQ_DIR _bm(_GPIO_71,REG_BASE_GPIO, (71<<3),PIN71_IRQ_DIR) // 2 Bit, 2'h0, RW
#define GPIO_PIN71_IRQ_EN _bm(_GPIO_71,REG_BASE_GPIO, (71<<3),PIN71_IRQ_EN) // 1 Bit, 1'h0, RW
#define GPIO_PIN71_IRQ_CLR _bm(_GPIO_71,REG_BASE_GPIO, (71<<3),PIN71_IRQ_CLR) // 1 Bit, 1'h0, W
#define GPIO_PIN71_IRQ _bm(_GPIO_71,REG_BASE_GPIO, (71<<3),PIN71_IRQ) // 1 Bit, 1'h0, R
#define GPIO_PIN_72_64_IN _bm(_GPIO_72,REG_BASE_GPIO, (72<<3),PIN_72_64_IN) // 8 Bit, 8'h0, R
#define GPIO_PIN_63_32_IN _bm(_GPIO_73,REG_BASE_GPIO, (73<<3),PIN_63_32_IN) // 32 Bit, 32'h0, R
#define GPIO_PIN_31_0_IN _bm(_GPIO_74,REG_BASE_GPIO, (74<<3),PIN_31_0_IN) // 32 Bit, 32'h0, R
#define GPIO_PIN_72_64_OUT _bm(_GPIO_75,REG_BASE_GPIO, (75<<3),PIN_72_64_OUT) // 8 Bit, 8'h0, RW
#define GPIO_PIN_63_32_OUT _bm(_GPIO_76,REG_BASE_GPIO, (76<<3),PIN_63_32_OUT) // 32 Bit, 32'h0, RW
#define GPIO_PIN_31_0_OUT _bm(_GPIO_77,REG_BASE_GPIO, (77<<3),PIN_31_0_OUT) // 32 Bit, 32'h0, RW
#define GPIO_PIN_72_64_OEN _bm(_GPIO_78,REG_BASE_GPIO, (78<<3),PIN_72_64_OEN) // 8 Bit, 8'hFF, RW
#define GPIO_PIN_63_32_OEN _bm(_GPIO_79,REG_BASE_GPIO, (79<<3),PIN_63_32_OEN) // 32 Bit, 32'hFFFFFFFF, RW
#define GPIO_PIN_31_0_OEN _bm(_GPIO_80,REG_BASE_GPIO, (80<<3),PIN_31_0_OEN) // 32 Bit, 32'hFFFFFFFF, RW
#define GPIO_PIN_72_64_IRQ_DIR1 _bm(_GPIO_81,REG_BASE_GPIO, (81<<3),PIN_72_64_IRQ_DIR1) // 8 Bit, 8'h0, RW
#define GPIO_PIN_63_32_IRQ_DIR1 _bm(_GPIO_82,REG_BASE_GPIO, (82<<3),PIN_63_32_IRQ_DIR1) // 32 Bit, 32'h0, RW
#define GPIO_PIN_31_0_IRQ_DIR1 _bm(_GPIO_83,REG_BASE_GPIO, (83<<3),PIN_31_0_IRQ_DIR1) // 32 Bit, 32'h0, RW
#define GPIO_PIN_72_64_IRQ_DIR0 _bm(_GPIO_84,REG_BASE_GPIO, (84<<3),PIN_72_64_IRQ_DIR0) // 8 Bit, 8'h0, RW
#define GPIO_PIN_63_32_IRQ_DIR0 _bm(_GPIO_85,REG_BASE_GPIO, (85<<3),PIN_63_32_IRQ_DIR0) // 32 Bit, 32'h0, RW
#define GPIO_PIN_31_0_IRQ_DIR0 _bm(_GPIO_86,REG_BASE_GPIO, (86<<3),PIN_31_0_IRQ_DIR0) // 32 Bit, 32'h0, RW
#define GPIO_PIN_72_64_IRQ_EN _bm(_GPIO_87,REG_BASE_GPIO, (87<<3),PIN_72_64_IRQ_EN) // 8 Bit, 8'h0, RW
#define GPIO_PIN_63_32_IRQ_EN _bm(_GPIO_88,REG_BASE_GPIO, (88<<3),PIN_63_32_IRQ_EN) // 32 Bit, 32'h0, RW
#define GPIO_PIN_31_0_IRQ_EN _bm(_GPIO_89,REG_BASE_GPIO, (89<<3),PIN_31_0_IRQ_EN) // 32 Bit, 32'h0, RW
#define GPIO_PIN_72_64_IRQ_CLR _bm(_GPIO_90,REG_BASE_GPIO, (90<<3),PIN_72_64_IRQ_CLR) // 8 Bit, 8'h0, RW
#define GPIO_PIN_63_32_IRQ_CLR _bm(_GPIO_91,REG_BASE_GPIO, (91<<3),PIN_63_32_IRQ_CLR) // 32 Bit, 32'h0, RW
#define GPIO_PIN_31_0_IRQ_CLR _bm(_GPIO_92,REG_BASE_GPIO, (92<<3),PIN_31_0_IRQ_CLR) // 32 Bit, 32'h0, RW
#define GPIO_PIN_72_64_IRQ _bm(_GPIO_93,REG_BASE_GPIO, (93<<3),PIN_72_64_IRQ) // 8 Bit, 8'h0, RW
#define GPIO_PIN_63_32_IRQ _bm(_GPIO_94,REG_BASE_GPIO, (94<<3),PIN_63_32_IRQ) // 32 Bit, 32'h0, RW
#define GPIO_PIN_31_0_IRQ _bm(_GPIO_95,REG_BASE_GPIO, (95<<3),PIN_31_0_IRQ) // 32 Bit, 32'h0, RW
#define SPI0_RX_DAT _bm(_SPI0_0,REG_BASE_SPI0, (0<<3),RX_DAT) // 32 Bit, 32'h0, R
#define SPI0_TX_DAT _bm(_SPI0_1,REG_BASE_SPI0, (1<<3),TX_DAT) // 32 Bit, 32'h0, R
#define SPI0_EN _bm(_SPI0_2,REG_BASE_SPI0, (2<<3),EN) // 1 Bit, 1'h0, RW
#define SPI0_CLK_DIV _bm(_SPI0_2,REG_BASE_SPI0, (2<<3),CLK_DIV) // 8 Bit, 8'h0, RW
#define SPI0_BIT_MODE _bm(_SPI0_2,REG_BASE_SPI0, (2<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define SPI0_CS_MODE _bm(_SPI0_2,REG_BASE_SPI0, (2<<3),CS_MODE) // 2 Bit, 2'h0, RW
#define SPI0_IRQ_EN _bm(_SPI0_2,REG_BASE_SPI0, (2<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define SPI0_IRQ_CLR _bm(_SPI0_2,REG_BASE_SPI0, (2<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define SPI0_IRQ _bm(_SPI0_2,REG_BASE_SPI0, (2<<3),IRQ) // 1 Bit, 1'h0, R
#define SPI0_ONE_BITMODE _bm(_SPI0_2,REG_BASE_SPI0, (2<<3),ONE_BITMODE) // 1 Bit, 1'h0, RW
#define SPI0_CLK_MODE _bm(_SPI0_2,REG_BASE_SPI0, (2<<3),CLK_MODE) // 2 Bit, 1'h0, RW
#define SPI0_WS _bm(_SPI0_2,REG_BASE_SPI0, (2<<3),WS) // 2 Bit, 2'h0, RW
#define SPI0_RW _bm(_SPI0_2,REG_BASE_SPI0, (2<<3),RW) // 2 Bit, 2'h0, RW
#define SPI0_GO _bm(_SPI0_2,REG_BASE_SPI0, (2<<3),GO) // 1 Bit, 1'h0, RW
#define SPI1_RX_DAT _bm(_SPI1_0,REG_BASE_SPI1, (0<<3),RX_DAT) // 32 Bit, 32'h0, R
#define SPI1_TX_DAT _bm(_SPI1_1,REG_BASE_SPI1, (1<<3),TX_DAT) // 32 Bit, 32'h0, R
#define SPI1_EN _bm(_SPI1_2,REG_BASE_SPI1, (2<<3),EN) // 1 Bit, 1'h0, RW
#define SPI1_CLK_DIV _bm(_SPI1_2,REG_BASE_SPI1, (2<<3),CLK_DIV) // 8 Bit, 8'h0, RW
#define SPI1_BIT_MODE _bm(_SPI1_2,REG_BASE_SPI1, (2<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define SPI1_CS_MODE _bm(_SPI1_2,REG_BASE_SPI1, (2<<3),CS_MODE) // 2 Bit, 2'h0, RW
#define SPI1_IRQ_EN _bm(_SPI1_2,REG_BASE_SPI1, (2<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define SPI1_IRQ_CLR _bm(_SPI1_2,REG_BASE_SPI1, (2<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define SPI1_IRQ _bm(_SPI1_2,REG_BASE_SPI1, (2<<3),IRQ) // 1 Bit, 1'h0, R
#define SPI1_ONE_BITMODE _bm(_SPI1_2,REG_BASE_SPI1, (2<<3),ONE_BITMODE) // 1 Bit, 1'h0, RW
#define SPI1_CLK_MODE _bm(_SPI1_2,REG_BASE_SPI1, (2<<3),CLK_MODE) // 2 Bit, 1'h0, RW
#define SPI1_WS _bm(_SPI1_2,REG_BASE_SPI1, (2<<3),WS) // 2 Bit, 2'h0, RW
#define SPI1_RW _bm(_SPI1_2,REG_BASE_SPI1, (2<<3),RW) // 2 Bit, 2'h0, RW
#define SPI1_GO _bm(_SPI1_2,REG_BASE_SPI1, (2<<3),GO) // 1 Bit, 1'h0, RW
#define SPI2_RX_DAT _bm(_SPI2_0,REG_BASE_SPI2, (0<<3),RX_DAT) // 32 Bit, 32'h0, R
#define SPI2_TX_DAT _bm(_SPI2_1,REG_BASE_SPI2, (1<<3),TX_DAT) // 32 Bit, 32'h0, R
#define SPI2_EN _bm(_SPI2_2,REG_BASE_SPI2, (2<<3),EN) // 1 Bit, 1'h0, RW
#define SPI2_CLK_DIV _bm(_SPI2_2,REG_BASE_SPI2, (2<<3),CLK_DIV) // 8 Bit, 8'h0, RW
#define SPI2_BIT_MODE _bm(_SPI2_2,REG_BASE_SPI2, (2<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define SPI2_CS_MODE _bm(_SPI2_2,REG_BASE_SPI2, (2<<3),CS_MODE) // 2 Bit, 2'h0, RW
#define SPI2_IRQ_EN _bm(_SPI2_2,REG_BASE_SPI2, (2<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define SPI2_IRQ_CLR _bm(_SPI2_2,REG_BASE_SPI2, (2<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define SPI2_IRQ _bm(_SPI2_2,REG_BASE_SPI2, (2<<3),IRQ) // 1 Bit, 1'h0, R
#define SPI2_ONE_BITMODE _bm(_SPI2_2,REG_BASE_SPI2, (2<<3),ONE_BITMODE) // 1 Bit, 1'h0, RW
#define SPI2_CLK_MODE _bm(_SPI2_2,REG_BASE_SPI2, (2<<3),CLK_MODE) // 2 Bit, 1'h0, RW
#define SPI2_WS _bm(_SPI2_2,REG_BASE_SPI2, (2<<3),WS) // 2 Bit, 2'h0, RW
#define SPI2_RW _bm(_SPI2_2,REG_BASE_SPI2, (2<<3),RW) // 2 Bit, 2'h0, RW
#define SPI2_GO _bm(_SPI2_2,REG_BASE_SPI2, (2<<3),GO) // 1 Bit, 1'h0, RW
#define SPI3_RX_DAT _bm(_SPI3_0,REG_BASE_SPI3, (0<<3),RX_DAT) // 32 Bit, 32'h0, R
#define SPI3_TX_DAT _bm(_SPI3_1,REG_BASE_SPI3, (1<<3),TX_DAT) // 32 Bit, 32'h0, R
#define SPI3_EN _bm(_SPI3_2,REG_BASE_SPI3, (2<<3),EN) // 1 Bit, 1'h0, RW
#define SPI3_CLK_DIV _bm(_SPI3_2,REG_BASE_SPI3, (2<<3),CLK_DIV) // 8 Bit, 8'h0, RW
#define SPI3_BIT_MODE _bm(_SPI3_2,REG_BASE_SPI3, (2<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define SPI3_CS_MODE _bm(_SPI3_2,REG_BASE_SPI3, (2<<3),CS_MODE) // 2 Bit, 2'h0, RW
#define SPI3_IRQ_EN _bm(_SPI3_2,REG_BASE_SPI3, (2<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define SPI3_IRQ_CLR _bm(_SPI3_2,REG_BASE_SPI3, (2<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define SPI3_IRQ _bm(_SPI3_2,REG_BASE_SPI3, (2<<3),IRQ) // 1 Bit, 1'h0, R
#define SPI3_ONE_BITMODE _bm(_SPI3_2,REG_BASE_SPI3, (2<<3),ONE_BITMODE) // 1 Bit, 1'h0, RW
#define SPI3_CLK_MODE _bm(_SPI3_2,REG_BASE_SPI3, (2<<3),CLK_MODE) // 2 Bit, 1'h0, RW
#define SPI3_WS _bm(_SPI3_2,REG_BASE_SPI3, (2<<3),WS) // 2 Bit, 2'h0, RW
#define SPI3_RW _bm(_SPI3_2,REG_BASE_SPI3, (2<<3),RW) // 2 Bit, 2'h0, RW
#define SPI3_GO _bm(_SPI3_2,REG_BASE_SPI3, (2<<3),GO) // 1 Bit, 1'h0, RW
#define SPI4_RX_DAT _bm(_SPI4_0,REG_BASE_SPI4, (0<<3),RX_DAT) // 32 Bit, 32'h0, R
#define SPI4_TX_DAT _bm(_SPI4_1,REG_BASE_SPI4, (1<<3),TX_DAT) // 32 Bit, 32'h0, R
#define SPI4_EN _bm(_SPI4_2,REG_BASE_SPI4, (2<<3),EN) // 1 Bit, 1'h0, RW
#define SPI4_CLK_DIV _bm(_SPI4_2,REG_BASE_SPI4, (2<<3),CLK_DIV) // 8 Bit, 8'h0, RW
#define SPI4_BIT_MODE _bm(_SPI4_2,REG_BASE_SPI4, (2<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define SPI4_CS_MODE _bm(_SPI4_2,REG_BASE_SPI4, (2<<3),CS_MODE) // 2 Bit, 2'h0, RW
#define SPI4_IRQ_EN _bm(_SPI4_2,REG_BASE_SPI4, (2<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define SPI4_IRQ_CLR _bm(_SPI4_2,REG_BASE_SPI4, (2<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define SPI4_IRQ _bm(_SPI4_2,REG_BASE_SPI4, (2<<3),IRQ) // 1 Bit, 1'h0, R
#define SPI4_ONE_BITMODE _bm(_SPI4_2,REG_BASE_SPI4, (2<<3),ONE_BITMODE) // 1 Bit, 1'h0, RW
#define SPI4_CLK_MODE _bm(_SPI4_2,REG_BASE_SPI4, (2<<3),CLK_MODE) // 2 Bit, 1'h0, RW
#define SPI4_WS _bm(_SPI4_2,REG_BASE_SPI4, (2<<3),WS) // 2 Bit, 2'h0, RW
#define SPI4_RW _bm(_SPI4_2,REG_BASE_SPI4, (2<<3),RW) // 2 Bit, 2'h0, RW
#define SPI4_GO _bm(_SPI4_2,REG_BASE_SPI4, (2<<3),GO) // 1 Bit, 1'h0, RW
#define SPI5_RX_DAT _bm(_SPI5_0,REG_BASE_SPI5, (0<<3),RX_DAT) // 32 Bit, 32'h0, R
#define SPI5_TX_DAT _bm(_SPI5_1,REG_BASE_SPI5, (1<<3),TX_DAT) // 32 Bit, 32'h0, R
#define SPI5_EN _bm(_SPI5_2,REG_BASE_SPI5, (2<<3),EN) // 1 Bit, 1'h0, RW
#define SPI5_CLK_DIV _bm(_SPI5_2,REG_BASE_SPI5, (2<<3),CLK_DIV) // 8 Bit, 8'h0, RW
#define SPI5_BIT_MODE _bm(_SPI5_2,REG_BASE_SPI5, (2<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define SPI5_CS_MODE _bm(_SPI5_2,REG_BASE_SPI5, (2<<3),CS_MODE) // 2 Bit, 2'h0, RW
#define SPI5_IRQ_EN _bm(_SPI5_2,REG_BASE_SPI5, (2<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define SPI5_IRQ_CLR _bm(_SPI5_2,REG_BASE_SPI5, (2<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define SPI5_IRQ _bm(_SPI5_2,REG_BASE_SPI5, (2<<3),IRQ) // 1 Bit, 1'h0, R
#define SPI5_ONE_BITMODE _bm(_SPI5_2,REG_BASE_SPI5, (2<<3),ONE_BITMODE) // 1 Bit, 1'h0, RW
#define SPI5_CLK_MODE _bm(_SPI5_2,REG_BASE_SPI5, (2<<3),CLK_MODE) // 2 Bit, 1'h0, RW
#define SPI5_WS _bm(_SPI5_2,REG_BASE_SPI5, (2<<3),WS) // 2 Bit, 2'h0, RW
#define SPI5_RW _bm(_SPI5_2,REG_BASE_SPI5, (2<<3),RW) // 2 Bit, 2'h0, RW
#define SPI5_GO _bm(_SPI5_2,REG_BASE_SPI5, (2<<3),GO) // 1 Bit, 1'h0, RW
#define SPI6_RX_DAT _bm(_SPI6_0,REG_BASE_SPI6, (0<<3),RX_DAT) // 32 Bit, 32'h0, R
#define SPI6_TX_DAT _bm(_SPI6_1,REG_BASE_SPI6, (1<<3),TX_DAT) // 32 Bit, 32'h0, R
#define SPI6_EN _bm(_SPI6_2,REG_BASE_SPI6, (2<<3),EN) // 1 Bit, 1'h0, RW
#define SPI6_CLK_DIV _bm(_SPI6_2,REG_BASE_SPI6, (2<<3),CLK_DIV) // 8 Bit, 8'h0, RW
#define SPI6_BIT_MODE _bm(_SPI6_2,REG_BASE_SPI6, (2<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define SPI6_CS_MODE _bm(_SPI6_2,REG_BASE_SPI6, (2<<3),CS_MODE) // 2 Bit, 2'h0, RW
#define SPI6_IRQ_EN _bm(_SPI6_2,REG_BASE_SPI6, (2<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define SPI6_IRQ_CLR _bm(_SPI6_2,REG_BASE_SPI6, (2<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define SPI6_IRQ _bm(_SPI6_2,REG_BASE_SPI6, (2<<3),IRQ) // 1 Bit, 1'h0, R
#define SPI6_ONE_BITMODE _bm(_SPI6_2,REG_BASE_SPI6, (2<<3),ONE_BITMODE) // 1 Bit, 1'h0, RW
#define SPI6_CLK_MODE _bm(_SPI6_2,REG_BASE_SPI6, (2<<3),CLK_MODE) // 2 Bit, 1'h0, RW
#define SPI6_WS _bm(_SPI6_2,REG_BASE_SPI6, (2<<3),WS) // 2 Bit, 2'h0, RW
#define SPI6_RW _bm(_SPI6_2,REG_BASE_SPI6, (2<<3),RW) // 2 Bit, 2'h0, RW
#define SPI6_GO _bm(_SPI6_2,REG_BASE_SPI6, (2<<3),GO) // 1 Bit, 1'h0, RW
#define SPI7_RX_DAT _bm(_SPI7_0,REG_BASE_SPI7, (0<<3),RX_DAT) // 32 Bit, 32'h0, R
#define SPI7_TX_DAT _bm(_SPI7_1,REG_BASE_SPI7, (1<<3),TX_DAT) // 32 Bit, 32'h0, R
#define SPI7_EN _bm(_SPI7_2,REG_BASE_SPI7, (2<<3),EN) // 1 Bit, 1'h0, RW
#define SPI7_CLK_DIV _bm(_SPI7_2,REG_BASE_SPI7, (2<<3),CLK_DIV) // 8 Bit, 8'h0, RW
#define SPI7_BIT_MODE _bm(_SPI7_2,REG_BASE_SPI7, (2<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define SPI7_CS_MODE _bm(_SPI7_2,REG_BASE_SPI7, (2<<3),CS_MODE) // 2 Bit, 2'h0, RW
#define SPI7_IRQ_EN _bm(_SPI7_2,REG_BASE_SPI7, (2<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define SPI7_IRQ_CLR _bm(_SPI7_2,REG_BASE_SPI7, (2<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define SPI7_IRQ _bm(_SPI7_2,REG_BASE_SPI7, (2<<3),IRQ) // 1 Bit, 1'h0, R
#define SPI7_ONE_BITMODE _bm(_SPI7_2,REG_BASE_SPI7, (2<<3),ONE_BITMODE) // 1 Bit, 1'h0, RW
#define SPI7_CLK_MODE _bm(_SPI7_2,REG_BASE_SPI7, (2<<3),CLK_MODE) // 2 Bit, 1'h0, RW
#define SPI7_WS _bm(_SPI7_2,REG_BASE_SPI7, (2<<3),WS) // 2 Bit, 2'h0, RW
#define SPI7_RW _bm(_SPI7_2,REG_BASE_SPI7, (2<<3),RW) // 2 Bit, 2'h0, RW
#define SPI7_GO _bm(_SPI7_2,REG_BASE_SPI7, (2<<3),GO) // 1 Bit, 1'h0, RW
#define SPI8_RX_DAT _bm(_SPI8_0,REG_BASE_SPI8, (0<<3),RX_DAT) // 32 Bit, 32'h0, R
#define SPI8_TX_DAT _bm(_SPI8_1,REG_BASE_SPI8, (1<<3),TX_DAT) // 32 Bit, 32'h0, R
#define SPI8_EN _bm(_SPI8_2,REG_BASE_SPI8, (2<<3),EN) // 1 Bit, 1'h0, RW
#define SPI8_CLK_DIV _bm(_SPI8_2,REG_BASE_SPI8, (2<<3),CLK_DIV) // 8 Bit, 8'h0, RW
#define SPI8_BIT_MODE _bm(_SPI8_2,REG_BASE_SPI8, (2<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define SPI8_CS_MODE _bm(_SPI8_2,REG_BASE_SPI8, (2<<3),CS_MODE) // 2 Bit, 2'h0, RW
#define SPI8_IRQ_EN _bm(_SPI8_2,REG_BASE_SPI8, (2<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define SPI8_IRQ_CLR _bm(_SPI8_2,REG_BASE_SPI8, (2<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define SPI8_IRQ _bm(_SPI8_2,REG_BASE_SPI8, (2<<3),IRQ) // 1 Bit, 1'h0, R
#define SPI8_ONE_BITMODE _bm(_SPI8_2,REG_BASE_SPI8, (2<<3),ONE_BITMODE) // 1 Bit, 1'h0, RW
#define SPI8_CLK_MODE _bm(_SPI8_2,REG_BASE_SPI8, (2<<3),CLK_MODE) // 2 Bit, 1'h0, RW
#define SPI8_WS _bm(_SPI8_2,REG_BASE_SPI8, (2<<3),WS) // 2 Bit, 2'h0, RW
#define SPI8_RW _bm(_SPI8_2,REG_BASE_SPI8, (2<<3),RW) // 2 Bit, 2'h0, RW
#define SPI8_GO _bm(_SPI8_2,REG_BASE_SPI8, (2<<3),GO) // 1 Bit, 1'h0, RW
#define I2C0_RX_DAT _bm(_I2C0_0,REG_BASE_I2C0, (0<<3),RX_DAT) // 8 Bit, 8'h0, R
#define I2C0_TX_DAT _bm(_I2C0_0,REG_BASE_I2C0, (0<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define I2C0_ACT _bm(_I2C0_0,REG_BASE_I2C0, (0<<3),ACT) // 1 Bit, 1'h0, R
#define I2C0_MODE _bm(_I2C0_0,REG_BASE_I2C0, (0<<3),MODE) // 1 Bit, 1'h0, RW
#define I2C0_BIT_MODE _bm(_I2C0_0,REG_BASE_I2C0, (0<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define I2C0_IRQ _bm(_I2C0_0,REG_BASE_I2C0, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define I2C0_IRQ_EN _bm(_I2C0_0,REG_BASE_I2C0, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define I2C0_IRQ_CLR _bm(_I2C0_0,REG_BASE_I2C0, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define I2C0_CLK_DIV _bm(_I2C0_1,REG_BASE_I2C0, (1<<3),CLK_DIV) // 16 Bit, 16'h10, RW
#define I2C0_MST_COL _bm(_I2C0_2,REG_BASE_I2C0, (2<<3),MST_COL) // 1 Bit, 1'h0, R
#define I2C0_MST_ACK _bm(_I2C0_2,REG_BASE_I2C0, (2<<3),MST_ACK) // 1 Bit, 1'h0, R
#define I2C0_MST_REPEAT _bm(_I2C0_2,REG_BASE_I2C0, (2<<3),MST_REPEAT) // 1 Bit, 1'h0, RW
#define I2C0_MST_LAST _bm(_I2C0_2,REG_BASE_I2C0, (2<<3),MST_LAST) // 1 Bit, 1'h0, RW
#define I2C0_MST_RW _bm(_I2C0_2,REG_BASE_I2C0, (2<<3),MST_RW) // 1 Bit, 1'h0, RW
#define I2C0_MST_GO _bm(_I2C0_2,REG_BASE_I2C0, (2<<3),MST_GO) // 1 Bit, 1'h0, RW
#define I2C0_I2C_SDA _bm(_I2C0_3,REG_BASE_I2C0, (3<<3),I2C_SDA) // 1 Bit, 1'h0, R
#define I2C0_I2C_SCL _bm(_I2C0_3,REG_BASE_I2C0, (3<<3),I2C_SCL) // 1 Bit, 1'h0, R
#define I2C0_SLV_ACK_IN _bm(_I2C0_3,REG_BASE_I2C0, (3<<3),SLV_ACK_IN) // 1 Bit, 1'h0, R
#define I2C0_SLV_GO _bm(_I2C0_3,REG_BASE_I2C0, (3<<3),SLV_GO) // 1 Bit, 1'h0, RW
#define I2C0_SLV_RW _bm(_I2C0_3,REG_BASE_I2C0, (3<<3),SLV_RW) // 1 Bit, 1'h0, RW
#define I2C0_SLV_ACK_OUT _bm(_I2C0_3,REG_BASE_I2C0, (3<<3),SLV_ACK_OUT) // 1 Bit, 1'h0, RW
#define I2C0_SLV_ADR _bm(_I2C0_3,REG_BASE_I2C0, (3<<3),SLV_ADR) // 7 Bit, 1'h0, RW
#define I2C1_RX_DAT _bm(_I2C1_0,REG_BASE_I2C1, (0<<3),RX_DAT) // 8 Bit, 8'h0, R
#define I2C1_TX_DAT _bm(_I2C1_0,REG_BASE_I2C1, (0<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define I2C1_ACT _bm(_I2C1_0,REG_BASE_I2C1, (0<<3),ACT) // 1 Bit, 1'h0, R
#define I2C1_MODE _bm(_I2C1_0,REG_BASE_I2C1, (0<<3),MODE) // 1 Bit, 1'h0, RW
#define I2C1_BIT_MODE _bm(_I2C1_0,REG_BASE_I2C1, (0<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define I2C1_IRQ _bm(_I2C1_0,REG_BASE_I2C1, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define I2C1_IRQ_EN _bm(_I2C1_0,REG_BASE_I2C1, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define I2C1_IRQ_CLR _bm(_I2C1_0,REG_BASE_I2C1, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define I2C1_CLK_DIV _bm(_I2C1_1,REG_BASE_I2C1, (1<<3),CLK_DIV) // 16 Bit, 16'h10, RW
#define I2C1_MST_COL _bm(_I2C1_2,REG_BASE_I2C1, (2<<3),MST_COL) // 1 Bit, 1'h0, R
#define I2C1_MST_ACK _bm(_I2C1_2,REG_BASE_I2C1, (2<<3),MST_ACK) // 1 Bit, 1'h0, R
#define I2C1_MST_REPEAT _bm(_I2C1_2,REG_BASE_I2C1, (2<<3),MST_REPEAT) // 1 Bit, 1'h0, RW
#define I2C1_MST_LAST _bm(_I2C1_2,REG_BASE_I2C1, (2<<3),MST_LAST) // 1 Bit, 1'h0, RW
#define I2C1_MST_RW _bm(_I2C1_2,REG_BASE_I2C1, (2<<3),MST_RW) // 1 Bit, 1'h0, RW
#define I2C1_MST_GO _bm(_I2C1_2,REG_BASE_I2C1, (2<<3),MST_GO) // 1 Bit, 1'h0, RW
#define I2C1_I2C_SDA _bm(_I2C1_3,REG_BASE_I2C1, (3<<3),I2C_SDA) // 1 Bit, 1'h0, R
#define I2C1_I2C_SCL _bm(_I2C1_3,REG_BASE_I2C1, (3<<3),I2C_SCL) // 1 Bit, 1'h0, R
#define I2C1_SLV_ACK_IN _bm(_I2C1_3,REG_BASE_I2C1, (3<<3),SLV_ACK_IN) // 1 Bit, 1'h0, R
#define I2C1_SLV_GO _bm(_I2C1_3,REG_BASE_I2C1, (3<<3),SLV_GO) // 1 Bit, 1'h0, RW
#define I2C1_SLV_RW _bm(_I2C1_3,REG_BASE_I2C1, (3<<3),SLV_RW) // 1 Bit, 1'h0, RW
#define I2C1_SLV_ACK_OUT _bm(_I2C1_3,REG_BASE_I2C1, (3<<3),SLV_ACK_OUT) // 1 Bit, 1'h0, RW
#define I2C1_SLV_ADR _bm(_I2C1_3,REG_BASE_I2C1, (3<<3),SLV_ADR) // 7 Bit, 1'h0, RW
#define I2C2_RX_DAT _bm(_I2C2_0,REG_BASE_I2C2, (0<<3),RX_DAT) // 8 Bit, 8'h0, R
#define I2C2_TX_DAT _bm(_I2C2_0,REG_BASE_I2C2, (0<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define I2C2_ACT _bm(_I2C2_0,REG_BASE_I2C2, (0<<3),ACT) // 1 Bit, 1'h0, R
#define I2C2_MODE _bm(_I2C2_0,REG_BASE_I2C2, (0<<3),MODE) // 1 Bit, 1'h0, RW
#define I2C2_BIT_MODE _bm(_I2C2_0,REG_BASE_I2C2, (0<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define I2C2_IRQ _bm(_I2C2_0,REG_BASE_I2C2, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define I2C2_IRQ_EN _bm(_I2C2_0,REG_BASE_I2C2, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define I2C2_IRQ_CLR _bm(_I2C2_0,REG_BASE_I2C2, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define I2C2_CLK_DIV _bm(_I2C2_1,REG_BASE_I2C2, (1<<3),CLK_DIV) // 16 Bit, 16'h10, RW
#define I2C2_MST_COL _bm(_I2C2_2,REG_BASE_I2C2, (2<<3),MST_COL) // 1 Bit, 1'h0, R
#define I2C2_MST_ACK _bm(_I2C2_2,REG_BASE_I2C2, (2<<3),MST_ACK) // 1 Bit, 1'h0, R
#define I2C2_MST_REPEAT _bm(_I2C2_2,REG_BASE_I2C2, (2<<3),MST_REPEAT) // 1 Bit, 1'h0, RW
#define I2C2_MST_LAST _bm(_I2C2_2,REG_BASE_I2C2, (2<<3),MST_LAST) // 1 Bit, 1'h0, RW
#define I2C2_MST_RW _bm(_I2C2_2,REG_BASE_I2C2, (2<<3),MST_RW) // 1 Bit, 1'h0, RW
#define I2C2_MST_GO _bm(_I2C2_2,REG_BASE_I2C2, (2<<3),MST_GO) // 1 Bit, 1'h0, RW
#define I2C2_I2C_SDA _bm(_I2C2_3,REG_BASE_I2C2, (3<<3),I2C_SDA) // 1 Bit, 1'h0, R
#define I2C2_I2C_SCL _bm(_I2C2_3,REG_BASE_I2C2, (3<<3),I2C_SCL) // 1 Bit, 1'h0, R
#define I2C2_SLV_ACK_IN _bm(_I2C2_3,REG_BASE_I2C2, (3<<3),SLV_ACK_IN) // 1 Bit, 1'h0, R
#define I2C2_SLV_GO _bm(_I2C2_3,REG_BASE_I2C2, (3<<3),SLV_GO) // 1 Bit, 1'h0, RW
#define I2C2_SLV_RW _bm(_I2C2_3,REG_BASE_I2C2, (3<<3),SLV_RW) // 1 Bit, 1'h0, RW
#define I2C2_SLV_ACK_OUT _bm(_I2C2_3,REG_BASE_I2C2, (3<<3),SLV_ACK_OUT) // 1 Bit, 1'h0, RW
#define I2C2_SLV_ADR _bm(_I2C2_3,REG_BASE_I2C2, (3<<3),SLV_ADR) // 7 Bit, 1'h0, RW
#define I2C3_RX_DAT _bm(_I2C3_0,REG_BASE_I2C3, (0<<3),RX_DAT) // 8 Bit, 8'h0, R
#define I2C3_TX_DAT _bm(_I2C3_0,REG_BASE_I2C3, (0<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define I2C3_ACT _bm(_I2C3_0,REG_BASE_I2C3, (0<<3),ACT) // 1 Bit, 1'h0, R
#define I2C3_MODE _bm(_I2C3_0,REG_BASE_I2C3, (0<<3),MODE) // 1 Bit, 1'h0, RW
#define I2C3_BIT_MODE _bm(_I2C3_0,REG_BASE_I2C3, (0<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define I2C3_IRQ _bm(_I2C3_0,REG_BASE_I2C3, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define I2C3_IRQ_EN _bm(_I2C3_0,REG_BASE_I2C3, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define I2C3_IRQ_CLR _bm(_I2C3_0,REG_BASE_I2C3, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define I2C3_CLK_DIV _bm(_I2C3_1,REG_BASE_I2C3, (1<<3),CLK_DIV) // 16 Bit, 16'h10, RW
#define I2C3_MST_COL _bm(_I2C3_2,REG_BASE_I2C3, (2<<3),MST_COL) // 1 Bit, 1'h0, R
#define I2C3_MST_ACK _bm(_I2C3_2,REG_BASE_I2C3, (2<<3),MST_ACK) // 1 Bit, 1'h0, R
#define I2C3_MST_REPEAT _bm(_I2C3_2,REG_BASE_I2C3, (2<<3),MST_REPEAT) // 1 Bit, 1'h0, RW
#define I2C3_MST_LAST _bm(_I2C3_2,REG_BASE_I2C3, (2<<3),MST_LAST) // 1 Bit, 1'h0, RW
#define I2C3_MST_RW _bm(_I2C3_2,REG_BASE_I2C3, (2<<3),MST_RW) // 1 Bit, 1'h0, RW
#define I2C3_MST_GO _bm(_I2C3_2,REG_BASE_I2C3, (2<<3),MST_GO) // 1 Bit, 1'h0, RW
#define I2C3_I2C_SDA _bm(_I2C3_3,REG_BASE_I2C3, (3<<3),I2C_SDA) // 1 Bit, 1'h0, R
#define I2C3_I2C_SCL _bm(_I2C3_3,REG_BASE_I2C3, (3<<3),I2C_SCL) // 1 Bit, 1'h0, R
#define I2C3_SLV_ACK_IN _bm(_I2C3_3,REG_BASE_I2C3, (3<<3),SLV_ACK_IN) // 1 Bit, 1'h0, R
#define I2C3_SLV_GO _bm(_I2C3_3,REG_BASE_I2C3, (3<<3),SLV_GO) // 1 Bit, 1'h0, RW
#define I2C3_SLV_RW _bm(_I2C3_3,REG_BASE_I2C3, (3<<3),SLV_RW) // 1 Bit, 1'h0, RW
#define I2C3_SLV_ACK_OUT _bm(_I2C3_3,REG_BASE_I2C3, (3<<3),SLV_ACK_OUT) // 1 Bit, 1'h0, RW
#define I2C3_SLV_ADR _bm(_I2C3_3,REG_BASE_I2C3, (3<<3),SLV_ADR) // 7 Bit, 1'h0, RW
#define I2C4_RX_DAT _bm(_I2C4_0,REG_BASE_I2C4, (0<<3),RX_DAT) // 8 Bit, 8'h0, R
#define I2C4_TX_DAT _bm(_I2C4_0,REG_BASE_I2C4, (0<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define I2C4_ACT _bm(_I2C4_0,REG_BASE_I2C4, (0<<3),ACT) // 1 Bit, 1'h0, R
#define I2C4_MODE _bm(_I2C4_0,REG_BASE_I2C4, (0<<3),MODE) // 1 Bit, 1'h0, RW
#define I2C4_BIT_MODE _bm(_I2C4_0,REG_BASE_I2C4, (0<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define I2C4_IRQ _bm(_I2C4_0,REG_BASE_I2C4, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define I2C4_IRQ_EN _bm(_I2C4_0,REG_BASE_I2C4, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define I2C4_IRQ_CLR _bm(_I2C4_0,REG_BASE_I2C4, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define I2C4_CLK_DIV _bm(_I2C4_1,REG_BASE_I2C4, (1<<3),CLK_DIV) // 16 Bit, 16'h10, RW
#define I2C4_MST_COL _bm(_I2C4_2,REG_BASE_I2C4, (2<<3),MST_COL) // 1 Bit, 1'h0, R
#define I2C4_MST_ACK _bm(_I2C4_2,REG_BASE_I2C4, (2<<3),MST_ACK) // 1 Bit, 1'h0, R
#define I2C4_MST_REPEAT _bm(_I2C4_2,REG_BASE_I2C4, (2<<3),MST_REPEAT) // 1 Bit, 1'h0, RW
#define I2C4_MST_LAST _bm(_I2C4_2,REG_BASE_I2C4, (2<<3),MST_LAST) // 1 Bit, 1'h0, RW
#define I2C4_MST_RW _bm(_I2C4_2,REG_BASE_I2C4, (2<<3),MST_RW) // 1 Bit, 1'h0, RW
#define I2C4_MST_GO _bm(_I2C4_2,REG_BASE_I2C4, (2<<3),MST_GO) // 1 Bit, 1'h0, RW
#define I2C4_I2C_SDA _bm(_I2C4_3,REG_BASE_I2C4, (3<<3),I2C_SDA) // 1 Bit, 1'h0, R
#define I2C4_I2C_SCL _bm(_I2C4_3,REG_BASE_I2C4, (3<<3),I2C_SCL) // 1 Bit, 1'h0, R
#define I2C4_SLV_ACK_IN _bm(_I2C4_3,REG_BASE_I2C4, (3<<3),SLV_ACK_IN) // 1 Bit, 1'h0, R
#define I2C4_SLV_GO _bm(_I2C4_3,REG_BASE_I2C4, (3<<3),SLV_GO) // 1 Bit, 1'h0, RW
#define I2C4_SLV_RW _bm(_I2C4_3,REG_BASE_I2C4, (3<<3),SLV_RW) // 1 Bit, 1'h0, RW
#define I2C4_SLV_ACK_OUT _bm(_I2C4_3,REG_BASE_I2C4, (3<<3),SLV_ACK_OUT) // 1 Bit, 1'h0, RW
#define I2C4_SLV_ADR _bm(_I2C4_3,REG_BASE_I2C4, (3<<3),SLV_ADR) // 7 Bit, 1'h0, RW
#define I2C5_RX_DAT _bm(_I2C5_0,REG_BASE_I2C5, (0<<3),RX_DAT) // 8 Bit, 8'h0, R
#define I2C5_TX_DAT _bm(_I2C5_0,REG_BASE_I2C5, (0<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define I2C5_ACT _bm(_I2C5_0,REG_BASE_I2C5, (0<<3),ACT) // 1 Bit, 1'h0, R
#define I2C5_MODE _bm(_I2C5_0,REG_BASE_I2C5, (0<<3),MODE) // 1 Bit, 1'h0, RW
#define I2C5_BIT_MODE _bm(_I2C5_0,REG_BASE_I2C5, (0<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define I2C5_IRQ _bm(_I2C5_0,REG_BASE_I2C5, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define I2C5_IRQ_EN _bm(_I2C5_0,REG_BASE_I2C5, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define I2C5_IRQ_CLR _bm(_I2C5_0,REG_BASE_I2C5, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define I2C5_CLK_DIV _bm(_I2C5_1,REG_BASE_I2C5, (1<<3),CLK_DIV) // 16 Bit, 16'h10, RW
#define I2C5_MST_COL _bm(_I2C5_2,REG_BASE_I2C5, (2<<3),MST_COL) // 1 Bit, 1'h0, R
#define I2C5_MST_ACK _bm(_I2C5_2,REG_BASE_I2C5, (2<<3),MST_ACK) // 1 Bit, 1'h0, R
#define I2C5_MST_REPEAT _bm(_I2C5_2,REG_BASE_I2C5, (2<<3),MST_REPEAT) // 1 Bit, 1'h0, RW
#define I2C5_MST_LAST _bm(_I2C5_2,REG_BASE_I2C5, (2<<3),MST_LAST) // 1 Bit, 1'h0, RW
#define I2C5_MST_RW _bm(_I2C5_2,REG_BASE_I2C5, (2<<3),MST_RW) // 1 Bit, 1'h0, RW
#define I2C5_MST_GO _bm(_I2C5_2,REG_BASE_I2C5, (2<<3),MST_GO) // 1 Bit, 1'h0, RW
#define I2C5_I2C_SDA _bm(_I2C5_3,REG_BASE_I2C5, (3<<3),I2C_SDA) // 1 Bit, 1'h0, R
#define I2C5_I2C_SCL _bm(_I2C5_3,REG_BASE_I2C5, (3<<3),I2C_SCL) // 1 Bit, 1'h0, R
#define I2C5_SLV_ACK_IN _bm(_I2C5_3,REG_BASE_I2C5, (3<<3),SLV_ACK_IN) // 1 Bit, 1'h0, R
#define I2C5_SLV_GO _bm(_I2C5_3,REG_BASE_I2C5, (3<<3),SLV_GO) // 1 Bit, 1'h0, RW
#define I2C5_SLV_RW _bm(_I2C5_3,REG_BASE_I2C5, (3<<3),SLV_RW) // 1 Bit, 1'h0, RW
#define I2C5_SLV_ACK_OUT _bm(_I2C5_3,REG_BASE_I2C5, (3<<3),SLV_ACK_OUT) // 1 Bit, 1'h0, RW
#define I2C5_SLV_ADR _bm(_I2C5_3,REG_BASE_I2C5, (3<<3),SLV_ADR) // 7 Bit, 1'h0, RW
#define I2C6_RX_DAT _bm(_I2C6_0,REG_BASE_I2C6, (0<<3),RX_DAT) // 8 Bit, 8'h0, R
#define I2C6_TX_DAT _bm(_I2C6_0,REG_BASE_I2C6, (0<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define I2C6_ACT _bm(_I2C6_0,REG_BASE_I2C6, (0<<3),ACT) // 1 Bit, 1'h0, R
#define I2C6_MODE _bm(_I2C6_0,REG_BASE_I2C6, (0<<3),MODE) // 1 Bit, 1'h0, RW
#define I2C6_BIT_MODE _bm(_I2C6_0,REG_BASE_I2C6, (0<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define I2C6_IRQ _bm(_I2C6_0,REG_BASE_I2C6, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define I2C6_IRQ_EN _bm(_I2C6_0,REG_BASE_I2C6, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define I2C6_IRQ_CLR _bm(_I2C6_0,REG_BASE_I2C6, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define I2C6_CLK_DIV _bm(_I2C6_1,REG_BASE_I2C6, (1<<3),CLK_DIV) // 16 Bit, 16'h10, RW
#define I2C6_MST_COL _bm(_I2C6_2,REG_BASE_I2C6, (2<<3),MST_COL) // 1 Bit, 1'h0, R
#define I2C6_MST_ACK _bm(_I2C6_2,REG_BASE_I2C6, (2<<3),MST_ACK) // 1 Bit, 1'h0, R
#define I2C6_MST_REPEAT _bm(_I2C6_2,REG_BASE_I2C6, (2<<3),MST_REPEAT) // 1 Bit, 1'h0, RW
#define I2C6_MST_LAST _bm(_I2C6_2,REG_BASE_I2C6, (2<<3),MST_LAST) // 1 Bit, 1'h0, RW
#define I2C6_MST_RW _bm(_I2C6_2,REG_BASE_I2C6, (2<<3),MST_RW) // 1 Bit, 1'h0, RW
#define I2C6_MST_GO _bm(_I2C6_2,REG_BASE_I2C6, (2<<3),MST_GO) // 1 Bit, 1'h0, RW
#define I2C6_I2C_SDA _bm(_I2C6_3,REG_BASE_I2C6, (3<<3),I2C_SDA) // 1 Bit, 1'h0, R
#define I2C6_I2C_SCL _bm(_I2C6_3,REG_BASE_I2C6, (3<<3),I2C_SCL) // 1 Bit, 1'h0, R
#define I2C6_SLV_ACK_IN _bm(_I2C6_3,REG_BASE_I2C6, (3<<3),SLV_ACK_IN) // 1 Bit, 1'h0, R
#define I2C6_SLV_GO _bm(_I2C6_3,REG_BASE_I2C6, (3<<3),SLV_GO) // 1 Bit, 1'h0, RW
#define I2C6_SLV_RW _bm(_I2C6_3,REG_BASE_I2C6, (3<<3),SLV_RW) // 1 Bit, 1'h0, RW
#define I2C6_SLV_ACK_OUT _bm(_I2C6_3,REG_BASE_I2C6, (3<<3),SLV_ACK_OUT) // 1 Bit, 1'h0, RW
#define I2C6_SLV_ADR _bm(_I2C6_3,REG_BASE_I2C6, (3<<3),SLV_ADR) // 7 Bit, 1'h0, RW
#define I2C7_RX_DAT _bm(_I2C7_0,REG_BASE_I2C7, (0<<3),RX_DAT) // 8 Bit, 8'h0, R
#define I2C7_TX_DAT _bm(_I2C7_0,REG_BASE_I2C7, (0<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define I2C7_ACT _bm(_I2C7_0,REG_BASE_I2C7, (0<<3),ACT) // 1 Bit, 1'h0, R
#define I2C7_MODE _bm(_I2C7_0,REG_BASE_I2C7, (0<<3),MODE) // 1 Bit, 1'h0, RW
#define I2C7_BIT_MODE _bm(_I2C7_0,REG_BASE_I2C7, (0<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define I2C7_IRQ _bm(_I2C7_0,REG_BASE_I2C7, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define I2C7_IRQ_EN _bm(_I2C7_0,REG_BASE_I2C7, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define I2C7_IRQ_CLR _bm(_I2C7_0,REG_BASE_I2C7, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define I2C7_CLK_DIV _bm(_I2C7_1,REG_BASE_I2C7, (1<<3),CLK_DIV) // 16 Bit, 16'h10, RW
#define I2C7_MST_COL _bm(_I2C7_2,REG_BASE_I2C7, (2<<3),MST_COL) // 1 Bit, 1'h0, R
#define I2C7_MST_ACK _bm(_I2C7_2,REG_BASE_I2C7, (2<<3),MST_ACK) // 1 Bit, 1'h0, R
#define I2C7_MST_REPEAT _bm(_I2C7_2,REG_BASE_I2C7, (2<<3),MST_REPEAT) // 1 Bit, 1'h0, RW
#define I2C7_MST_LAST _bm(_I2C7_2,REG_BASE_I2C7, (2<<3),MST_LAST) // 1 Bit, 1'h0, RW
#define I2C7_MST_RW _bm(_I2C7_2,REG_BASE_I2C7, (2<<3),MST_RW) // 1 Bit, 1'h0, RW
#define I2C7_MST_GO _bm(_I2C7_2,REG_BASE_I2C7, (2<<3),MST_GO) // 1 Bit, 1'h0, RW
#define I2C7_I2C_SDA _bm(_I2C7_3,REG_BASE_I2C7, (3<<3),I2C_SDA) // 1 Bit, 1'h0, R
#define I2C7_I2C_SCL _bm(_I2C7_3,REG_BASE_I2C7, (3<<3),I2C_SCL) // 1 Bit, 1'h0, R
#define I2C7_SLV_ACK_IN _bm(_I2C7_3,REG_BASE_I2C7, (3<<3),SLV_ACK_IN) // 1 Bit, 1'h0, R
#define I2C7_SLV_GO _bm(_I2C7_3,REG_BASE_I2C7, (3<<3),SLV_GO) // 1 Bit, 1'h0, RW
#define I2C7_SLV_RW _bm(_I2C7_3,REG_BASE_I2C7, (3<<3),SLV_RW) // 1 Bit, 1'h0, RW
#define I2C7_SLV_ACK_OUT _bm(_I2C7_3,REG_BASE_I2C7, (3<<3),SLV_ACK_OUT) // 1 Bit, 1'h0, RW
#define I2C7_SLV_ADR _bm(_I2C7_3,REG_BASE_I2C7, (3<<3),SLV_ADR) // 7 Bit, 1'h0, RW
#define I2C8_RX_DAT _bm(_I2C8_0,REG_BASE_I2C8, (0<<3),RX_DAT) // 8 Bit, 8'h0, R
#define I2C8_TX_DAT _bm(_I2C8_0,REG_BASE_I2C8, (0<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define I2C8_ACT _bm(_I2C8_0,REG_BASE_I2C8, (0<<3),ACT) // 1 Bit, 1'h0, R
#define I2C8_MODE _bm(_I2C8_0,REG_BASE_I2C8, (0<<3),MODE) // 1 Bit, 1'h0, RW
#define I2C8_BIT_MODE _bm(_I2C8_0,REG_BASE_I2C8, (0<<3),BIT_MODE) // 1 Bit, 1'h0, RW
#define I2C8_IRQ _bm(_I2C8_0,REG_BASE_I2C8, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define I2C8_IRQ_EN _bm(_I2C8_0,REG_BASE_I2C8, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define I2C8_IRQ_CLR _bm(_I2C8_0,REG_BASE_I2C8, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define I2C8_CLK_DIV _bm(_I2C8_1,REG_BASE_I2C8, (1<<3),CLK_DIV) // 16 Bit, 16'h10, RW
#define I2C8_MST_COL _bm(_I2C8_2,REG_BASE_I2C8, (2<<3),MST_COL) // 1 Bit, 1'h0, R
#define I2C8_MST_ACK _bm(_I2C8_2,REG_BASE_I2C8, (2<<3),MST_ACK) // 1 Bit, 1'h0, R
#define I2C8_MST_REPEAT _bm(_I2C8_2,REG_BASE_I2C8, (2<<3),MST_REPEAT) // 1 Bit, 1'h0, RW
#define I2C8_MST_LAST _bm(_I2C8_2,REG_BASE_I2C8, (2<<3),MST_LAST) // 1 Bit, 1'h0, RW
#define I2C8_MST_RW _bm(_I2C8_2,REG_BASE_I2C8, (2<<3),MST_RW) // 1 Bit, 1'h0, RW
#define I2C8_MST_GO _bm(_I2C8_2,REG_BASE_I2C8, (2<<3),MST_GO) // 1 Bit, 1'h0, RW
#define I2C8_I2C_SDA _bm(_I2C8_3,REG_BASE_I2C8, (3<<3),I2C_SDA) // 1 Bit, 1'h0, R
#define I2C8_I2C_SCL _bm(_I2C8_3,REG_BASE_I2C8, (3<<3),I2C_SCL) // 1 Bit, 1'h0, R
#define I2C8_SLV_ACK_IN _bm(_I2C8_3,REG_BASE_I2C8, (3<<3),SLV_ACK_IN) // 1 Bit, 1'h0, R
#define I2C8_SLV_GO _bm(_I2C8_3,REG_BASE_I2C8, (3<<3),SLV_GO) // 1 Bit, 1'h0, RW
#define I2C8_SLV_RW _bm(_I2C8_3,REG_BASE_I2C8, (3<<3),SLV_RW) // 1 Bit, 1'h0, RW
#define I2C8_SLV_ACK_OUT _bm(_I2C8_3,REG_BASE_I2C8, (3<<3),SLV_ACK_OUT) // 1 Bit, 1'h0, RW
#define I2C8_SLV_ADR _bm(_I2C8_3,REG_BASE_I2C8, (3<<3),SLV_ADR) // 7 Bit, 1'h0, RW
#define TIMER0_EN _bm(_TIMER0_0,REG_BASE_TIMER0, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER0_PWM_EN _bm(_TIMER0_0,REG_BASE_TIMER0, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER0_CK_EN _bm(_TIMER0_0,REG_BASE_TIMER0, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER0_IRQ_EN _bm(_TIMER0_0,REG_BASE_TIMER0, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER0_CNT_CLR _bm(_TIMER0_0,REG_BASE_TIMER0, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER0_IRQ_CLR _bm(_TIMER0_0,REG_BASE_TIMER0, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER0_IRQ _bm(_TIMER0_0,REG_BASE_TIMER0, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER0_DIV _bm(_TIMER0_0,REG_BASE_TIMER0, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER0_LMT _bm(_TIMER0_0,REG_BASE_TIMER0, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER0_TRIG _bm(_TIMER0_1,REG_BASE_TIMER0, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER0_CNT _bm(_TIMER0_1,REG_BASE_TIMER0, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER1_EN _bm(_TIMER1_0,REG_BASE_TIMER1, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER1_PWM_EN _bm(_TIMER1_0,REG_BASE_TIMER1, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER1_CK_EN _bm(_TIMER1_0,REG_BASE_TIMER1, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER1_IRQ_EN _bm(_TIMER1_0,REG_BASE_TIMER1, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER1_CNT_CLR _bm(_TIMER1_0,REG_BASE_TIMER1, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER1_IRQ_CLR _bm(_TIMER1_0,REG_BASE_TIMER1, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER1_IRQ _bm(_TIMER1_0,REG_BASE_TIMER1, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER1_DIV _bm(_TIMER1_0,REG_BASE_TIMER1, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER1_LMT _bm(_TIMER1_0,REG_BASE_TIMER1, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER1_TRIG _bm(_TIMER1_1,REG_BASE_TIMER1, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER1_CNT _bm(_TIMER1_1,REG_BASE_TIMER1, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER2_EN _bm(_TIMER2_0,REG_BASE_TIMER2, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER2_PWM_EN _bm(_TIMER2_0,REG_BASE_TIMER2, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER2_CK_EN _bm(_TIMER2_0,REG_BASE_TIMER2, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER2_IRQ_EN _bm(_TIMER2_0,REG_BASE_TIMER2, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER2_CNT_CLR _bm(_TIMER2_0,REG_BASE_TIMER2, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER2_IRQ_CLR _bm(_TIMER2_0,REG_BASE_TIMER2, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER2_IRQ _bm(_TIMER2_0,REG_BASE_TIMER2, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER2_DIV _bm(_TIMER2_0,REG_BASE_TIMER2, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER2_LMT _bm(_TIMER2_0,REG_BASE_TIMER2, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER2_TRIG _bm(_TIMER2_1,REG_BASE_TIMER2, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER2_CNT _bm(_TIMER2_1,REG_BASE_TIMER2, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER3_EN _bm(_TIMER3_0,REG_BASE_TIMER3, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER3_PWM_EN _bm(_TIMER3_0,REG_BASE_TIMER3, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER3_CK_EN _bm(_TIMER3_0,REG_BASE_TIMER3, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER3_IRQ_EN _bm(_TIMER3_0,REG_BASE_TIMER3, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER3_CNT_CLR _bm(_TIMER3_0,REG_BASE_TIMER3, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER3_IRQ_CLR _bm(_TIMER3_0,REG_BASE_TIMER3, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER3_IRQ _bm(_TIMER3_0,REG_BASE_TIMER3, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER3_DIV _bm(_TIMER3_0,REG_BASE_TIMER3, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER3_LMT _bm(_TIMER3_0,REG_BASE_TIMER3, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER3_TRIG _bm(_TIMER3_1,REG_BASE_TIMER3, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER3_CNT _bm(_TIMER3_1,REG_BASE_TIMER3, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER4_EN _bm(_TIMER4_0,REG_BASE_TIMER4, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER4_PWM_EN _bm(_TIMER4_0,REG_BASE_TIMER4, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER4_CK_EN _bm(_TIMER4_0,REG_BASE_TIMER4, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER4_IRQ_EN _bm(_TIMER4_0,REG_BASE_TIMER4, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER4_CNT_CLR _bm(_TIMER4_0,REG_BASE_TIMER4, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER4_IRQ_CLR _bm(_TIMER4_0,REG_BASE_TIMER4, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER4_IRQ _bm(_TIMER4_0,REG_BASE_TIMER4, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER4_DIV _bm(_TIMER4_0,REG_BASE_TIMER4, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER4_LMT _bm(_TIMER4_0,REG_BASE_TIMER4, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER4_TRIG _bm(_TIMER4_1,REG_BASE_TIMER4, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER4_CNT _bm(_TIMER4_1,REG_BASE_TIMER4, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER5_EN _bm(_TIMER5_0,REG_BASE_TIMER5, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER5_PWM_EN _bm(_TIMER5_0,REG_BASE_TIMER5, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER5_CK_EN _bm(_TIMER5_0,REG_BASE_TIMER5, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER5_IRQ_EN _bm(_TIMER5_0,REG_BASE_TIMER5, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER5_CNT_CLR _bm(_TIMER5_0,REG_BASE_TIMER5, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER5_IRQ_CLR _bm(_TIMER5_0,REG_BASE_TIMER5, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER5_IRQ _bm(_TIMER5_0,REG_BASE_TIMER5, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER5_DIV _bm(_TIMER5_0,REG_BASE_TIMER5, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER5_LMT _bm(_TIMER5_0,REG_BASE_TIMER5, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER5_TRIG _bm(_TIMER5_1,REG_BASE_TIMER5, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER5_CNT _bm(_TIMER5_1,REG_BASE_TIMER5, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER6_EN _bm(_TIMER6_0,REG_BASE_TIMER6, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER6_PWM_EN _bm(_TIMER6_0,REG_BASE_TIMER6, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER6_CK_EN _bm(_TIMER6_0,REG_BASE_TIMER6, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER6_IRQ_EN _bm(_TIMER6_0,REG_BASE_TIMER6, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER6_CNT_CLR _bm(_TIMER6_0,REG_BASE_TIMER6, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER6_IRQ_CLR _bm(_TIMER6_0,REG_BASE_TIMER6, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER6_IRQ _bm(_TIMER6_0,REG_BASE_TIMER6, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER6_DIV _bm(_TIMER6_0,REG_BASE_TIMER6, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER6_LMT _bm(_TIMER6_0,REG_BASE_TIMER6, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER6_TRIG _bm(_TIMER6_1,REG_BASE_TIMER6, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER6_CNT _bm(_TIMER6_1,REG_BASE_TIMER6, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER7_EN _bm(_TIMER7_0,REG_BASE_TIMER7, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER7_PWM_EN _bm(_TIMER7_0,REG_BASE_TIMER7, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER7_CK_EN _bm(_TIMER7_0,REG_BASE_TIMER7, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER7_IRQ_EN _bm(_TIMER7_0,REG_BASE_TIMER7, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER7_CNT_CLR _bm(_TIMER7_0,REG_BASE_TIMER7, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER7_IRQ_CLR _bm(_TIMER7_0,REG_BASE_TIMER7, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER7_IRQ _bm(_TIMER7_0,REG_BASE_TIMER7, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER7_DIV _bm(_TIMER7_0,REG_BASE_TIMER7, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER7_LMT _bm(_TIMER7_0,REG_BASE_TIMER7, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER7_TRIG _bm(_TIMER7_1,REG_BASE_TIMER7, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER7_CNT _bm(_TIMER7_1,REG_BASE_TIMER7, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER8_EN _bm(_TIMER8_0,REG_BASE_TIMER8, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER8_PWM_EN _bm(_TIMER8_0,REG_BASE_TIMER8, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER8_CK_EN _bm(_TIMER8_0,REG_BASE_TIMER8, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER8_IRQ_EN _bm(_TIMER8_0,REG_BASE_TIMER8, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER8_CNT_CLR _bm(_TIMER8_0,REG_BASE_TIMER8, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER8_IRQ_CLR _bm(_TIMER8_0,REG_BASE_TIMER8, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER8_IRQ _bm(_TIMER8_0,REG_BASE_TIMER8, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER8_DIV _bm(_TIMER8_0,REG_BASE_TIMER8, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER8_LMT _bm(_TIMER8_0,REG_BASE_TIMER8, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER8_TRIG _bm(_TIMER8_1,REG_BASE_TIMER8, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER8_CNT _bm(_TIMER8_1,REG_BASE_TIMER8, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER9_EN _bm(_TIMER9_0,REG_BASE_TIMER9, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER9_PWM_EN _bm(_TIMER9_0,REG_BASE_TIMER9, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER9_CK_EN _bm(_TIMER9_0,REG_BASE_TIMER9, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER9_IRQ_EN _bm(_TIMER9_0,REG_BASE_TIMER9, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER9_CNT_CLR _bm(_TIMER9_0,REG_BASE_TIMER9, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER9_IRQ_CLR _bm(_TIMER9_0,REG_BASE_TIMER9, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER9_IRQ _bm(_TIMER9_0,REG_BASE_TIMER9, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER9_DIV _bm(_TIMER9_0,REG_BASE_TIMER9, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER9_LMT _bm(_TIMER9_0,REG_BASE_TIMER9, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER9_TRIG _bm(_TIMER9_1,REG_BASE_TIMER9, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER9_CNT _bm(_TIMER9_1,REG_BASE_TIMER9, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER10_EN _bm(_TIMER10_0,REG_BASE_TIMER10, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER10_PWM_EN _bm(_TIMER10_0,REG_BASE_TIMER10, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER10_CK_EN _bm(_TIMER10_0,REG_BASE_TIMER10, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER10_IRQ_EN _bm(_TIMER10_0,REG_BASE_TIMER10, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER10_CNT_CLR _bm(_TIMER10_0,REG_BASE_TIMER10, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER10_IRQ_CLR _bm(_TIMER10_0,REG_BASE_TIMER10, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER10_IRQ _bm(_TIMER10_0,REG_BASE_TIMER10, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER10_DIV _bm(_TIMER10_0,REG_BASE_TIMER10, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER10_LMT _bm(_TIMER10_0,REG_BASE_TIMER10, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER10_TRIG _bm(_TIMER10_1,REG_BASE_TIMER10, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER10_CNT _bm(_TIMER10_1,REG_BASE_TIMER10, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER11_EN _bm(_TIMER11_0,REG_BASE_TIMER11, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER11_PWM_EN _bm(_TIMER11_0,REG_BASE_TIMER11, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER11_CK_EN _bm(_TIMER11_0,REG_BASE_TIMER11, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER11_IRQ_EN _bm(_TIMER11_0,REG_BASE_TIMER11, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER11_CNT_CLR _bm(_TIMER11_0,REG_BASE_TIMER11, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER11_IRQ_CLR _bm(_TIMER11_0,REG_BASE_TIMER11, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER11_IRQ _bm(_TIMER11_0,REG_BASE_TIMER11, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER11_DIV _bm(_TIMER11_0,REG_BASE_TIMER11, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER11_LMT _bm(_TIMER11_0,REG_BASE_TIMER11, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER11_TRIG _bm(_TIMER11_1,REG_BASE_TIMER11, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER11_CNT _bm(_TIMER11_1,REG_BASE_TIMER11, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER12_EN _bm(_TIMER12_0,REG_BASE_TIMER12, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER12_PWM_EN _bm(_TIMER12_0,REG_BASE_TIMER12, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER12_CK_EN _bm(_TIMER12_0,REG_BASE_TIMER12, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER12_IRQ_EN _bm(_TIMER12_0,REG_BASE_TIMER12, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER12_CNT_CLR _bm(_TIMER12_0,REG_BASE_TIMER12, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER12_IRQ_CLR _bm(_TIMER12_0,REG_BASE_TIMER12, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER12_IRQ _bm(_TIMER12_0,REG_BASE_TIMER12, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER12_DIV _bm(_TIMER12_0,REG_BASE_TIMER12, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER12_LMT _bm(_TIMER12_0,REG_BASE_TIMER12, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER12_TRIG _bm(_TIMER12_1,REG_BASE_TIMER12, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER12_CNT _bm(_TIMER12_1,REG_BASE_TIMER12, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER13_EN _bm(_TIMER13_0,REG_BASE_TIMER13, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER13_PWM_EN _bm(_TIMER13_0,REG_BASE_TIMER13, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER13_CK_EN _bm(_TIMER13_0,REG_BASE_TIMER13, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER13_IRQ_EN _bm(_TIMER13_0,REG_BASE_TIMER13, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER13_CNT_CLR _bm(_TIMER13_0,REG_BASE_TIMER13, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER13_IRQ_CLR _bm(_TIMER13_0,REG_BASE_TIMER13, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER13_IRQ _bm(_TIMER13_0,REG_BASE_TIMER13, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER13_DIV _bm(_TIMER13_0,REG_BASE_TIMER13, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER13_LMT _bm(_TIMER13_0,REG_BASE_TIMER13, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER13_TRIG _bm(_TIMER13_1,REG_BASE_TIMER13, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER13_CNT _bm(_TIMER13_1,REG_BASE_TIMER13, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER14_EN _bm(_TIMER14_0,REG_BASE_TIMER14, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER14_PWM_EN _bm(_TIMER14_0,REG_BASE_TIMER14, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER14_CK_EN _bm(_TIMER14_0,REG_BASE_TIMER14, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER14_IRQ_EN _bm(_TIMER14_0,REG_BASE_TIMER14, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER14_CNT_CLR _bm(_TIMER14_0,REG_BASE_TIMER14, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER14_IRQ_CLR _bm(_TIMER14_0,REG_BASE_TIMER14, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER14_IRQ _bm(_TIMER14_0,REG_BASE_TIMER14, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER14_DIV _bm(_TIMER14_0,REG_BASE_TIMER14, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER14_LMT _bm(_TIMER14_0,REG_BASE_TIMER14, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER14_TRIG _bm(_TIMER14_1,REG_BASE_TIMER14, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER14_CNT _bm(_TIMER14_1,REG_BASE_TIMER14, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER15_EN _bm(_TIMER15_0,REG_BASE_TIMER15, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER15_PWM_EN _bm(_TIMER15_0,REG_BASE_TIMER15, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER15_CK_EN _bm(_TIMER15_0,REG_BASE_TIMER15, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER15_IRQ_EN _bm(_TIMER15_0,REG_BASE_TIMER15, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER15_CNT_CLR _bm(_TIMER15_0,REG_BASE_TIMER15, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER15_IRQ_CLR _bm(_TIMER15_0,REG_BASE_TIMER15, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER15_IRQ _bm(_TIMER15_0,REG_BASE_TIMER15, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER15_DIV _bm(_TIMER15_0,REG_BASE_TIMER15, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER15_LMT _bm(_TIMER15_0,REG_BASE_TIMER15, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER15_TRIG _bm(_TIMER15_1,REG_BASE_TIMER15, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER15_CNT _bm(_TIMER15_1,REG_BASE_TIMER15, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER16_EN _bm(_TIMER16_0,REG_BASE_TIMER16, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER16_PWM_EN _bm(_TIMER16_0,REG_BASE_TIMER16, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER16_CK_EN _bm(_TIMER16_0,REG_BASE_TIMER16, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER16_IRQ_EN _bm(_TIMER16_0,REG_BASE_TIMER16, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER16_CNT_CLR _bm(_TIMER16_0,REG_BASE_TIMER16, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER16_IRQ_CLR _bm(_TIMER16_0,REG_BASE_TIMER16, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER16_IRQ _bm(_TIMER16_0,REG_BASE_TIMER16, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER16_DIV _bm(_TIMER16_0,REG_BASE_TIMER16, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER16_LMT _bm(_TIMER16_0,REG_BASE_TIMER16, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER16_TRIG _bm(_TIMER16_1,REG_BASE_TIMER16, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER16_CNT _bm(_TIMER16_1,REG_BASE_TIMER16, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER17_EN _bm(_TIMER17_0,REG_BASE_TIMER17, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER17_PWM_EN _bm(_TIMER17_0,REG_BASE_TIMER17, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER17_CK_EN _bm(_TIMER17_0,REG_BASE_TIMER17, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER17_IRQ_EN _bm(_TIMER17_0,REG_BASE_TIMER17, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER17_CNT_CLR _bm(_TIMER17_0,REG_BASE_TIMER17, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER17_IRQ_CLR _bm(_TIMER17_0,REG_BASE_TIMER17, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER17_IRQ _bm(_TIMER17_0,REG_BASE_TIMER17, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER17_DIV _bm(_TIMER17_0,REG_BASE_TIMER17, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER17_LMT _bm(_TIMER17_0,REG_BASE_TIMER17, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER17_TRIG _bm(_TIMER17_1,REG_BASE_TIMER17, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER17_CNT _bm(_TIMER17_1,REG_BASE_TIMER17, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER18_EN _bm(_TIMER18_0,REG_BASE_TIMER18, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER18_PWM_EN _bm(_TIMER18_0,REG_BASE_TIMER18, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER18_CK_EN _bm(_TIMER18_0,REG_BASE_TIMER18, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER18_IRQ_EN _bm(_TIMER18_0,REG_BASE_TIMER18, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER18_CNT_CLR _bm(_TIMER18_0,REG_BASE_TIMER18, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER18_IRQ_CLR _bm(_TIMER18_0,REG_BASE_TIMER18, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER18_IRQ _bm(_TIMER18_0,REG_BASE_TIMER18, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER18_DIV _bm(_TIMER18_0,REG_BASE_TIMER18, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER18_LMT _bm(_TIMER18_0,REG_BASE_TIMER18, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER18_TRIG _bm(_TIMER18_1,REG_BASE_TIMER18, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER18_CNT _bm(_TIMER18_1,REG_BASE_TIMER18, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER19_EN _bm(_TIMER19_0,REG_BASE_TIMER19, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER19_PWM_EN _bm(_TIMER19_0,REG_BASE_TIMER19, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER19_CK_EN _bm(_TIMER19_0,REG_BASE_TIMER19, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER19_IRQ_EN _bm(_TIMER19_0,REG_BASE_TIMER19, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER19_CNT_CLR _bm(_TIMER19_0,REG_BASE_TIMER19, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER19_IRQ_CLR _bm(_TIMER19_0,REG_BASE_TIMER19, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER19_IRQ _bm(_TIMER19_0,REG_BASE_TIMER19, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER19_DIV _bm(_TIMER19_0,REG_BASE_TIMER19, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER19_LMT _bm(_TIMER19_0,REG_BASE_TIMER19, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER19_TRIG _bm(_TIMER19_1,REG_BASE_TIMER19, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER19_CNT _bm(_TIMER19_1,REG_BASE_TIMER19, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER20_EN _bm(_TIMER20_0,REG_BASE_TIMER20, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER20_PWM_EN _bm(_TIMER20_0,REG_BASE_TIMER20, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER20_CK_EN _bm(_TIMER20_0,REG_BASE_TIMER20, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER20_IRQ_EN _bm(_TIMER20_0,REG_BASE_TIMER20, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER20_CNT_CLR _bm(_TIMER20_0,REG_BASE_TIMER20, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER20_IRQ_CLR _bm(_TIMER20_0,REG_BASE_TIMER20, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER20_IRQ _bm(_TIMER20_0,REG_BASE_TIMER20, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER20_DIV _bm(_TIMER20_0,REG_BASE_TIMER20, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER20_LMT _bm(_TIMER20_0,REG_BASE_TIMER20, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER20_TRIG _bm(_TIMER20_1,REG_BASE_TIMER20, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER20_CNT _bm(_TIMER20_1,REG_BASE_TIMER20, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER21_EN _bm(_TIMER21_0,REG_BASE_TIMER21, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER21_PWM_EN _bm(_TIMER21_0,REG_BASE_TIMER21, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER21_CK_EN _bm(_TIMER21_0,REG_BASE_TIMER21, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER21_IRQ_EN _bm(_TIMER21_0,REG_BASE_TIMER21, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER21_CNT_CLR _bm(_TIMER21_0,REG_BASE_TIMER21, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER21_IRQ_CLR _bm(_TIMER21_0,REG_BASE_TIMER21, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER21_IRQ _bm(_TIMER21_0,REG_BASE_TIMER21, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER21_DIV _bm(_TIMER21_0,REG_BASE_TIMER21, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER21_LMT _bm(_TIMER21_0,REG_BASE_TIMER21, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER21_TRIG _bm(_TIMER21_1,REG_BASE_TIMER21, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER21_CNT _bm(_TIMER21_1,REG_BASE_TIMER21, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER22_EN _bm(_TIMER22_0,REG_BASE_TIMER22, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER22_PWM_EN _bm(_TIMER22_0,REG_BASE_TIMER22, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER22_CK_EN _bm(_TIMER22_0,REG_BASE_TIMER22, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER22_IRQ_EN _bm(_TIMER22_0,REG_BASE_TIMER22, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER22_CNT_CLR _bm(_TIMER22_0,REG_BASE_TIMER22, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER22_IRQ_CLR _bm(_TIMER22_0,REG_BASE_TIMER22, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER22_IRQ _bm(_TIMER22_0,REG_BASE_TIMER22, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER22_DIV _bm(_TIMER22_0,REG_BASE_TIMER22, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER22_LMT _bm(_TIMER22_0,REG_BASE_TIMER22, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER22_TRIG _bm(_TIMER22_1,REG_BASE_TIMER22, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER22_CNT _bm(_TIMER22_1,REG_BASE_TIMER22, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER23_EN _bm(_TIMER23_0,REG_BASE_TIMER23, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER23_PWM_EN _bm(_TIMER23_0,REG_BASE_TIMER23, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER23_CK_EN _bm(_TIMER23_0,REG_BASE_TIMER23, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER23_IRQ_EN _bm(_TIMER23_0,REG_BASE_TIMER23, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER23_CNT_CLR _bm(_TIMER23_0,REG_BASE_TIMER23, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER23_IRQ_CLR _bm(_TIMER23_0,REG_BASE_TIMER23, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER23_IRQ _bm(_TIMER23_0,REG_BASE_TIMER23, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER23_DIV _bm(_TIMER23_0,REG_BASE_TIMER23, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER23_LMT _bm(_TIMER23_0,REG_BASE_TIMER23, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER23_TRIG _bm(_TIMER23_1,REG_BASE_TIMER23, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER23_CNT _bm(_TIMER23_1,REG_BASE_TIMER23, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER24_EN _bm(_TIMER24_0,REG_BASE_TIMER24, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER24_PWM_EN _bm(_TIMER24_0,REG_BASE_TIMER24, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER24_CK_EN _bm(_TIMER24_0,REG_BASE_TIMER24, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER24_IRQ_EN _bm(_TIMER24_0,REG_BASE_TIMER24, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER24_CNT_CLR _bm(_TIMER24_0,REG_BASE_TIMER24, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER24_IRQ_CLR _bm(_TIMER24_0,REG_BASE_TIMER24, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER24_IRQ _bm(_TIMER24_0,REG_BASE_TIMER24, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER24_DIV _bm(_TIMER24_0,REG_BASE_TIMER24, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER24_LMT _bm(_TIMER24_0,REG_BASE_TIMER24, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER24_TRIG _bm(_TIMER24_1,REG_BASE_TIMER24, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER24_CNT _bm(_TIMER24_1,REG_BASE_TIMER24, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER25_EN _bm(_TIMER25_0,REG_BASE_TIMER25, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER25_PWM_EN _bm(_TIMER25_0,REG_BASE_TIMER25, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER25_CK_EN _bm(_TIMER25_0,REG_BASE_TIMER25, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER25_IRQ_EN _bm(_TIMER25_0,REG_BASE_TIMER25, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER25_CNT_CLR _bm(_TIMER25_0,REG_BASE_TIMER25, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER25_IRQ_CLR _bm(_TIMER25_0,REG_BASE_TIMER25, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER25_IRQ _bm(_TIMER25_0,REG_BASE_TIMER25, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER25_DIV _bm(_TIMER25_0,REG_BASE_TIMER25, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER25_LMT _bm(_TIMER25_0,REG_BASE_TIMER25, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER25_TRIG _bm(_TIMER25_1,REG_BASE_TIMER25, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER25_CNT _bm(_TIMER25_1,REG_BASE_TIMER25, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER26_EN _bm(_TIMER26_0,REG_BASE_TIMER26, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER26_PWM_EN _bm(_TIMER26_0,REG_BASE_TIMER26, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER26_CK_EN _bm(_TIMER26_0,REG_BASE_TIMER26, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER26_IRQ_EN _bm(_TIMER26_0,REG_BASE_TIMER26, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER26_CNT_CLR _bm(_TIMER26_0,REG_BASE_TIMER26, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER26_IRQ_CLR _bm(_TIMER26_0,REG_BASE_TIMER26, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER26_IRQ _bm(_TIMER26_0,REG_BASE_TIMER26, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER26_DIV _bm(_TIMER26_0,REG_BASE_TIMER26, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER26_LMT _bm(_TIMER26_0,REG_BASE_TIMER26, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER26_TRIG _bm(_TIMER26_1,REG_BASE_TIMER26, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER26_CNT _bm(_TIMER26_1,REG_BASE_TIMER26, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER27_EN _bm(_TIMER27_0,REG_BASE_TIMER27, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER27_PWM_EN _bm(_TIMER27_0,REG_BASE_TIMER27, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER27_CK_EN _bm(_TIMER27_0,REG_BASE_TIMER27, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER27_IRQ_EN _bm(_TIMER27_0,REG_BASE_TIMER27, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER27_CNT_CLR _bm(_TIMER27_0,REG_BASE_TIMER27, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER27_IRQ_CLR _bm(_TIMER27_0,REG_BASE_TIMER27, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER27_IRQ _bm(_TIMER27_0,REG_BASE_TIMER27, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER27_DIV _bm(_TIMER27_0,REG_BASE_TIMER27, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER27_LMT _bm(_TIMER27_0,REG_BASE_TIMER27, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER27_TRIG _bm(_TIMER27_1,REG_BASE_TIMER27, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER27_CNT _bm(_TIMER27_1,REG_BASE_TIMER27, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER28_EN _bm(_TIMER28_0,REG_BASE_TIMER28, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER28_PWM_EN _bm(_TIMER28_0,REG_BASE_TIMER28, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER28_CK_EN _bm(_TIMER28_0,REG_BASE_TIMER28, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER28_IRQ_EN _bm(_TIMER28_0,REG_BASE_TIMER28, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER28_CNT_CLR _bm(_TIMER28_0,REG_BASE_TIMER28, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER28_IRQ_CLR _bm(_TIMER28_0,REG_BASE_TIMER28, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER28_IRQ _bm(_TIMER28_0,REG_BASE_TIMER28, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER28_DIV _bm(_TIMER28_0,REG_BASE_TIMER28, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER28_LMT _bm(_TIMER28_0,REG_BASE_TIMER28, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER28_TRIG _bm(_TIMER28_1,REG_BASE_TIMER28, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER28_CNT _bm(_TIMER28_1,REG_BASE_TIMER28, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER29_EN _bm(_TIMER29_0,REG_BASE_TIMER29, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER29_PWM_EN _bm(_TIMER29_0,REG_BASE_TIMER29, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER29_CK_EN _bm(_TIMER29_0,REG_BASE_TIMER29, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER29_IRQ_EN _bm(_TIMER29_0,REG_BASE_TIMER29, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER29_CNT_CLR _bm(_TIMER29_0,REG_BASE_TIMER29, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER29_IRQ_CLR _bm(_TIMER29_0,REG_BASE_TIMER29, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER29_IRQ _bm(_TIMER29_0,REG_BASE_TIMER29, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER29_DIV _bm(_TIMER29_0,REG_BASE_TIMER29, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER29_LMT _bm(_TIMER29_0,REG_BASE_TIMER29, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER29_TRIG _bm(_TIMER29_1,REG_BASE_TIMER29, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER29_CNT _bm(_TIMER29_1,REG_BASE_TIMER29, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER30_EN _bm(_TIMER30_0,REG_BASE_TIMER30, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER30_PWM_EN _bm(_TIMER30_0,REG_BASE_TIMER30, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER30_CK_EN _bm(_TIMER30_0,REG_BASE_TIMER30, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER30_IRQ_EN _bm(_TIMER30_0,REG_BASE_TIMER30, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER30_CNT_CLR _bm(_TIMER30_0,REG_BASE_TIMER30, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER30_IRQ_CLR _bm(_TIMER30_0,REG_BASE_TIMER30, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER30_IRQ _bm(_TIMER30_0,REG_BASE_TIMER30, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER30_DIV _bm(_TIMER30_0,REG_BASE_TIMER30, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER30_LMT _bm(_TIMER30_0,REG_BASE_TIMER30, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER30_TRIG _bm(_TIMER30_1,REG_BASE_TIMER30, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER30_CNT _bm(_TIMER30_1,REG_BASE_TIMER30, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER31_EN _bm(_TIMER31_0,REG_BASE_TIMER31, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER31_PWM_EN _bm(_TIMER31_0,REG_BASE_TIMER31, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER31_CK_EN _bm(_TIMER31_0,REG_BASE_TIMER31, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER31_IRQ_EN _bm(_TIMER31_0,REG_BASE_TIMER31, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER31_CNT_CLR _bm(_TIMER31_0,REG_BASE_TIMER31, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER31_IRQ_CLR _bm(_TIMER31_0,REG_BASE_TIMER31, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER31_IRQ _bm(_TIMER31_0,REG_BASE_TIMER31, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER31_DIV _bm(_TIMER31_0,REG_BASE_TIMER31, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER31_LMT _bm(_TIMER31_0,REG_BASE_TIMER31, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER31_TRIG _bm(_TIMER31_1,REG_BASE_TIMER31, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER31_CNT _bm(_TIMER31_1,REG_BASE_TIMER31, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER32_EN _bm(_TIMER32_0,REG_BASE_TIMER32, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER32_PWM_EN _bm(_TIMER32_0,REG_BASE_TIMER32, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER32_CK_EN _bm(_TIMER32_0,REG_BASE_TIMER32, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER32_IRQ_EN _bm(_TIMER32_0,REG_BASE_TIMER32, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER32_CNT_CLR _bm(_TIMER32_0,REG_BASE_TIMER32, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER32_IRQ_CLR _bm(_TIMER32_0,REG_BASE_TIMER32, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER32_IRQ _bm(_TIMER32_0,REG_BASE_TIMER32, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER32_DIV _bm(_TIMER32_0,REG_BASE_TIMER32, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER32_LMT _bm(_TIMER32_0,REG_BASE_TIMER32, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER32_TRIG _bm(_TIMER32_1,REG_BASE_TIMER32, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER32_CNT _bm(_TIMER32_1,REG_BASE_TIMER32, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER33_EN _bm(_TIMER33_0,REG_BASE_TIMER33, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER33_PWM_EN _bm(_TIMER33_0,REG_BASE_TIMER33, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER33_CK_EN _bm(_TIMER33_0,REG_BASE_TIMER33, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER33_IRQ_EN _bm(_TIMER33_0,REG_BASE_TIMER33, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER33_CNT_CLR _bm(_TIMER33_0,REG_BASE_TIMER33, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER33_IRQ_CLR _bm(_TIMER33_0,REG_BASE_TIMER33, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER33_IRQ _bm(_TIMER33_0,REG_BASE_TIMER33, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER33_DIV _bm(_TIMER33_0,REG_BASE_TIMER33, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER33_LMT _bm(_TIMER33_0,REG_BASE_TIMER33, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER33_TRIG _bm(_TIMER33_1,REG_BASE_TIMER33, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER33_CNT _bm(_TIMER33_1,REG_BASE_TIMER33, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER34_EN _bm(_TIMER34_0,REG_BASE_TIMER34, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER34_PWM_EN _bm(_TIMER34_0,REG_BASE_TIMER34, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER34_CK_EN _bm(_TIMER34_0,REG_BASE_TIMER34, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER34_IRQ_EN _bm(_TIMER34_0,REG_BASE_TIMER34, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER34_CNT_CLR _bm(_TIMER34_0,REG_BASE_TIMER34, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER34_IRQ_CLR _bm(_TIMER34_0,REG_BASE_TIMER34, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER34_IRQ _bm(_TIMER34_0,REG_BASE_TIMER34, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER34_DIV _bm(_TIMER34_0,REG_BASE_TIMER34, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER34_LMT _bm(_TIMER34_0,REG_BASE_TIMER34, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER34_TRIG _bm(_TIMER34_1,REG_BASE_TIMER34, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER34_CNT _bm(_TIMER34_1,REG_BASE_TIMER34, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER35_EN _bm(_TIMER35_0,REG_BASE_TIMER35, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER35_PWM_EN _bm(_TIMER35_0,REG_BASE_TIMER35, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER35_CK_EN _bm(_TIMER35_0,REG_BASE_TIMER35, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER35_IRQ_EN _bm(_TIMER35_0,REG_BASE_TIMER35, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER35_CNT_CLR _bm(_TIMER35_0,REG_BASE_TIMER35, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER35_IRQ_CLR _bm(_TIMER35_0,REG_BASE_TIMER35, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER35_IRQ _bm(_TIMER35_0,REG_BASE_TIMER35, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER35_DIV _bm(_TIMER35_0,REG_BASE_TIMER35, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER35_LMT _bm(_TIMER35_0,REG_BASE_TIMER35, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER35_TRIG _bm(_TIMER35_1,REG_BASE_TIMER35, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER35_CNT _bm(_TIMER35_1,REG_BASE_TIMER35, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER36_EN _bm(_TIMER36_0,REG_BASE_TIMER36, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER36_PWM_EN _bm(_TIMER36_0,REG_BASE_TIMER36, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER36_CK_EN _bm(_TIMER36_0,REG_BASE_TIMER36, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER36_IRQ_EN _bm(_TIMER36_0,REG_BASE_TIMER36, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER36_CNT_CLR _bm(_TIMER36_0,REG_BASE_TIMER36, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER36_IRQ_CLR _bm(_TIMER36_0,REG_BASE_TIMER36, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER36_IRQ _bm(_TIMER36_0,REG_BASE_TIMER36, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER36_DIV _bm(_TIMER36_0,REG_BASE_TIMER36, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER36_LMT _bm(_TIMER36_0,REG_BASE_TIMER36, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER36_TRIG _bm(_TIMER36_1,REG_BASE_TIMER36, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER36_CNT _bm(_TIMER36_1,REG_BASE_TIMER36, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER37_EN _bm(_TIMER37_0,REG_BASE_TIMER37, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER37_PWM_EN _bm(_TIMER37_0,REG_BASE_TIMER37, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER37_CK_EN _bm(_TIMER37_0,REG_BASE_TIMER37, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER37_IRQ_EN _bm(_TIMER37_0,REG_BASE_TIMER37, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER37_CNT_CLR _bm(_TIMER37_0,REG_BASE_TIMER37, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER37_IRQ_CLR _bm(_TIMER37_0,REG_BASE_TIMER37, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER37_IRQ _bm(_TIMER37_0,REG_BASE_TIMER37, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER37_DIV _bm(_TIMER37_0,REG_BASE_TIMER37, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER37_LMT _bm(_TIMER37_0,REG_BASE_TIMER37, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER37_TRIG _bm(_TIMER37_1,REG_BASE_TIMER37, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER37_CNT _bm(_TIMER37_1,REG_BASE_TIMER37, (1<<3),CNT) // 16 Bit, 16'h0, R
#define TIMER38_EN _bm(_TIMER38_0,REG_BASE_TIMER38, (0<<3),EN) // 1 Bit, 1'h0, RW
#define TIMER38_PWM_EN _bm(_TIMER38_0,REG_BASE_TIMER38, (0<<3),PWM_EN) // 1 Bit, 1'h0, RW
#define TIMER38_CK_EN _bm(_TIMER38_0,REG_BASE_TIMER38, (0<<3),CK_EN) // 1 Bit, 1'h0, RW
#define TIMER38_IRQ_EN _bm(_TIMER38_0,REG_BASE_TIMER38, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define TIMER38_CNT_CLR _bm(_TIMER38_0,REG_BASE_TIMER38, (0<<3),CNT_CLR) // 1 Bit, 1'h0, W
#define TIMER38_IRQ_CLR _bm(_TIMER38_0,REG_BASE_TIMER38, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define TIMER38_IRQ _bm(_TIMER38_0,REG_BASE_TIMER38, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define TIMER38_DIV _bm(_TIMER38_0,REG_BASE_TIMER38, (0<<3),DIV) // 8 Bit, 8'hFF, RW
#define TIMER38_LMT _bm(_TIMER38_0,REG_BASE_TIMER38, (0<<3),LMT) // 16 Bit, 16'hFFFF, RW
#define TIMER38_TRIG _bm(_TIMER38_1,REG_BASE_TIMER38, (1<<3),TRIG) // 16 Bit, 16'h7FFF, RW
#define TIMER38_CNT _bm(_TIMER38_1,REG_BASE_TIMER38, (1<<3),CNT) // 16 Bit, 16'h0, R
#define UART0_CLK_DIV _bm(_UART0_0,REG_BASE_UART0, (0<<3),CLK_DIV) // 12 Bit, 12'h02C, RW
#define UART0_TX_TYPE _bm(_UART0_0,REG_BASE_UART0, (0<<3),TX_TYPE) // 1 Bit, 1'h0, RW
#define UART0_STOP_BIT _bm(_UART0_0,REG_BASE_UART0, (0<<3),STOP_BIT) // 1 Bit, 1'h0, RW
#define UART0_PARITY_MODE _bm(_UART0_0,REG_BASE_UART0, (0<<3),PARITY_MODE) // 2 Bit, 2'h0, RW
#define UART0_TX_IRQ _bm(_UART0_0,REG_BASE_UART0, (0<<3),TX_IRQ) // 1 Bit, 1'h0, R
#define UART0_TX_IRQ_EN _bm(_UART0_0,REG_BASE_UART0, (0<<3),TX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART0_TX_IRQ_CLR _bm(_UART0_0,REG_BASE_UART0, (0<<3),TX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART0_TX_EMPTY _bm(_UART0_0,REG_BASE_UART0, (0<<3),TX_EMPTY) // 1 Bit, 1'h0, RW
#define UART0_TX_FULL _bm(_UART0_0,REG_BASE_UART0, (0<<3),TX_FULL) // 1 Bit, 1'h0, RW
#define UART0_RX_IRQ _bm(_UART0_0,REG_BASE_UART0, (0<<3),RX_IRQ) // 1 Bit, 1'h0, R
#define UART0_RX_IRQ_EN _bm(_UART0_0,REG_BASE_UART0, (0<<3),RX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART0_RX_IRQ_CLR _bm(_UART0_0,REG_BASE_UART0, (0<<3),RX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART0_RX_EMPTY _bm(_UART0_0,REG_BASE_UART0, (0<<3),RX_EMPTY) // 1 Bit, 1'h0, RW
#define UART0_RX_FULL _bm(_UART0_0,REG_BASE_UART0, (0<<3),RX_FULL) // 1 Bit, 1'h0, RW
#define UART0_RX_DAT _bm(_UART0_1,REG_BASE_UART0, (1<<3),RX_DAT) // 8 Bit, 8'h0, R
#define UART0_TX_DAT _bm(_UART0_2,REG_BASE_UART0, (2<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define UART0_RX_LMT _bm(_UART0_3,REG_BASE_UART0, (3<<3),RX_LMT) // 20 Bit, 20'h2FFFF, RW
#define UART1_CLK_DIV _bm(_UART1_0,REG_BASE_UART1, (0<<3),CLK_DIV) // 12 Bit, 12'h02C, RW
#define UART1_TX_TYPE _bm(_UART1_0,REG_BASE_UART1, (0<<3),TX_TYPE) // 1 Bit, 1'h0, RW
#define UART1_STOP_BIT _bm(_UART1_0,REG_BASE_UART1, (0<<3),STOP_BIT) // 1 Bit, 1'h0, RW
#define UART1_PARITY_MODE _bm(_UART1_0,REG_BASE_UART1, (0<<3),PARITY_MODE) // 2 Bit, 2'h0, RW
#define UART1_TX_IRQ _bm(_UART1_0,REG_BASE_UART1, (0<<3),TX_IRQ) // 1 Bit, 1'h0, R
#define UART1_TX_IRQ_EN _bm(_UART1_0,REG_BASE_UART1, (0<<3),TX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART1_TX_IRQ_CLR _bm(_UART1_0,REG_BASE_UART1, (0<<3),TX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART1_TX_EMPTY _bm(_UART1_0,REG_BASE_UART1, (0<<3),TX_EMPTY) // 1 Bit, 1'h0, RW
#define UART1_TX_FULL _bm(_UART1_0,REG_BASE_UART1, (0<<3),TX_FULL) // 1 Bit, 1'h0, RW
#define UART1_RX_IRQ _bm(_UART1_0,REG_BASE_UART1, (0<<3),RX_IRQ) // 1 Bit, 1'h0, R
#define UART1_RX_IRQ_EN _bm(_UART1_0,REG_BASE_UART1, (0<<3),RX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART1_RX_IRQ_CLR _bm(_UART1_0,REG_BASE_UART1, (0<<3),RX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART1_RX_EMPTY _bm(_UART1_0,REG_BASE_UART1, (0<<3),RX_EMPTY) // 1 Bit, 1'h0, RW
#define UART1_RX_FULL _bm(_UART1_0,REG_BASE_UART1, (0<<3),RX_FULL) // 1 Bit, 1'h0, RW
#define UART1_RX_DAT _bm(_UART1_1,REG_BASE_UART1, (1<<3),RX_DAT) // 8 Bit, 8'h0, R
#define UART1_TX_DAT _bm(_UART1_2,REG_BASE_UART1, (2<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define UART1_RX_LMT _bm(_UART1_3,REG_BASE_UART1, (3<<3),RX_LMT) // 20 Bit, 20'h2FFFF, RW
#define UART2_CLK_DIV _bm(_UART2_0,REG_BASE_UART2, (0<<3),CLK_DIV) // 12 Bit, 12'h02C, RW
#define UART2_TX_TYPE _bm(_UART2_0,REG_BASE_UART2, (0<<3),TX_TYPE) // 1 Bit, 1'h0, RW
#define UART2_STOP_BIT _bm(_UART2_0,REG_BASE_UART2, (0<<3),STOP_BIT) // 1 Bit, 1'h0, RW
#define UART2_PARITY_MODE _bm(_UART2_0,REG_BASE_UART2, (0<<3),PARITY_MODE) // 2 Bit, 2'h0, RW
#define UART2_TX_IRQ _bm(_UART2_0,REG_BASE_UART2, (0<<3),TX_IRQ) // 1 Bit, 1'h0, R
#define UART2_TX_IRQ_EN _bm(_UART2_0,REG_BASE_UART2, (0<<3),TX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART2_TX_IRQ_CLR _bm(_UART2_0,REG_BASE_UART2, (0<<3),TX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART2_TX_EMPTY _bm(_UART2_0,REG_BASE_UART2, (0<<3),TX_EMPTY) // 1 Bit, 1'h0, RW
#define UART2_TX_FULL _bm(_UART2_0,REG_BASE_UART2, (0<<3),TX_FULL) // 1 Bit, 1'h0, RW
#define UART2_RX_IRQ _bm(_UART2_0,REG_BASE_UART2, (0<<3),RX_IRQ) // 1 Bit, 1'h0, R
#define UART2_RX_IRQ_EN _bm(_UART2_0,REG_BASE_UART2, (0<<3),RX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART2_RX_IRQ_CLR _bm(_UART2_0,REG_BASE_UART2, (0<<3),RX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART2_RX_EMPTY _bm(_UART2_0,REG_BASE_UART2, (0<<3),RX_EMPTY) // 1 Bit, 1'h0, RW
#define UART2_RX_FULL _bm(_UART2_0,REG_BASE_UART2, (0<<3),RX_FULL) // 1 Bit, 1'h0, RW
#define UART2_RX_DAT _bm(_UART2_1,REG_BASE_UART2, (1<<3),RX_DAT) // 8 Bit, 8'h0, R
#define UART2_TX_DAT _bm(_UART2_2,REG_BASE_UART2, (2<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define UART2_RX_LMT _bm(_UART2_3,REG_BASE_UART2, (3<<3),RX_LMT) // 20 Bit, 20'h2FFFF, RW
#define UART3_CLK_DIV _bm(_UART3_0,REG_BASE_UART3, (0<<3),CLK_DIV) // 12 Bit, 12'h02C, RW
#define UART3_TX_TYPE _bm(_UART3_0,REG_BASE_UART3, (0<<3),TX_TYPE) // 1 Bit, 1'h0, RW
#define UART3_STOP_BIT _bm(_UART3_0,REG_BASE_UART3, (0<<3),STOP_BIT) // 1 Bit, 1'h0, RW
#define UART3_PARITY_MODE _bm(_UART3_0,REG_BASE_UART3, (0<<3),PARITY_MODE) // 2 Bit, 2'h0, RW
#define UART3_TX_IRQ _bm(_UART3_0,REG_BASE_UART3, (0<<3),TX_IRQ) // 1 Bit, 1'h0, R
#define UART3_TX_IRQ_EN _bm(_UART3_0,REG_BASE_UART3, (0<<3),TX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART3_TX_IRQ_CLR _bm(_UART3_0,REG_BASE_UART3, (0<<3),TX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART3_TX_EMPTY _bm(_UART3_0,REG_BASE_UART3, (0<<3),TX_EMPTY) // 1 Bit, 1'h0, RW
#define UART3_TX_FULL _bm(_UART3_0,REG_BASE_UART3, (0<<3),TX_FULL) // 1 Bit, 1'h0, RW
#define UART3_RX_IRQ _bm(_UART3_0,REG_BASE_UART3, (0<<3),RX_IRQ) // 1 Bit, 1'h0, R
#define UART3_RX_IRQ_EN _bm(_UART3_0,REG_BASE_UART3, (0<<3),RX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART3_RX_IRQ_CLR _bm(_UART3_0,REG_BASE_UART3, (0<<3),RX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART3_RX_EMPTY _bm(_UART3_0,REG_BASE_UART3, (0<<3),RX_EMPTY) // 1 Bit, 1'h0, RW
#define UART3_RX_FULL _bm(_UART3_0,REG_BASE_UART3, (0<<3),RX_FULL) // 1 Bit, 1'h0, RW
#define UART3_RX_DAT _bm(_UART3_1,REG_BASE_UART3, (1<<3),RX_DAT) // 8 Bit, 8'h0, R
#define UART3_TX_DAT _bm(_UART3_2,REG_BASE_UART3, (2<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define UART3_RX_LMT _bm(_UART3_3,REG_BASE_UART3, (3<<3),RX_LMT) // 20 Bit, 20'h2FFFF, RW
#define UART4_CLK_DIV _bm(_UART4_0,REG_BASE_UART4, (0<<3),CLK_DIV) // 12 Bit, 12'h02C, RW
#define UART4_TX_TYPE _bm(_UART4_0,REG_BASE_UART4, (0<<3),TX_TYPE) // 1 Bit, 1'h0, RW
#define UART4_STOP_BIT _bm(_UART4_0,REG_BASE_UART4, (0<<3),STOP_BIT) // 1 Bit, 1'h0, RW
#define UART4_PARITY_MODE _bm(_UART4_0,REG_BASE_UART4, (0<<3),PARITY_MODE) // 2 Bit, 2'h0, RW
#define UART4_TX_IRQ _bm(_UART4_0,REG_BASE_UART4, (0<<3),TX_IRQ) // 1 Bit, 1'h0, R
#define UART4_TX_IRQ_EN _bm(_UART4_0,REG_BASE_UART4, (0<<3),TX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART4_TX_IRQ_CLR _bm(_UART4_0,REG_BASE_UART4, (0<<3),TX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART4_TX_EMPTY _bm(_UART4_0,REG_BASE_UART4, (0<<3),TX_EMPTY) // 1 Bit, 1'h0, RW
#define UART4_TX_FULL _bm(_UART4_0,REG_BASE_UART4, (0<<3),TX_FULL) // 1 Bit, 1'h0, RW
#define UART4_RX_IRQ _bm(_UART4_0,REG_BASE_UART4, (0<<3),RX_IRQ) // 1 Bit, 1'h0, R
#define UART4_RX_IRQ_EN _bm(_UART4_0,REG_BASE_UART4, (0<<3),RX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART4_RX_IRQ_CLR _bm(_UART4_0,REG_BASE_UART4, (0<<3),RX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART4_RX_EMPTY _bm(_UART4_0,REG_BASE_UART4, (0<<3),RX_EMPTY) // 1 Bit, 1'h0, RW
#define UART4_RX_FULL _bm(_UART4_0,REG_BASE_UART4, (0<<3),RX_FULL) // 1 Bit, 1'h0, RW
#define UART4_RX_DAT _bm(_UART4_1,REG_BASE_UART4, (1<<3),RX_DAT) // 8 Bit, 8'h0, R
#define UART4_TX_DAT _bm(_UART4_2,REG_BASE_UART4, (2<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define UART4_RX_LMT _bm(_UART4_3,REG_BASE_UART4, (3<<3),RX_LMT) // 20 Bit, 20'h2FFFF, RW
#define UART5_CLK_DIV _bm(_UART5_0,REG_BASE_UART5, (0<<3),CLK_DIV) // 12 Bit, 12'h02C, RW
#define UART5_TX_TYPE _bm(_UART5_0,REG_BASE_UART5, (0<<3),TX_TYPE) // 1 Bit, 1'h0, RW
#define UART5_STOP_BIT _bm(_UART5_0,REG_BASE_UART5, (0<<3),STOP_BIT) // 1 Bit, 1'h0, RW
#define UART5_PARITY_MODE _bm(_UART5_0,REG_BASE_UART5, (0<<3),PARITY_MODE) // 2 Bit, 2'h0, RW
#define UART5_TX_IRQ _bm(_UART5_0,REG_BASE_UART5, (0<<3),TX_IRQ) // 1 Bit, 1'h0, R
#define UART5_TX_IRQ_EN _bm(_UART5_0,REG_BASE_UART5, (0<<3),TX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART5_TX_IRQ_CLR _bm(_UART5_0,REG_BASE_UART5, (0<<3),TX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART5_TX_EMPTY _bm(_UART5_0,REG_BASE_UART5, (0<<3),TX_EMPTY) // 1 Bit, 1'h0, RW
#define UART5_TX_FULL _bm(_UART5_0,REG_BASE_UART5, (0<<3),TX_FULL) // 1 Bit, 1'h0, RW
#define UART5_RX_IRQ _bm(_UART5_0,REG_BASE_UART5, (0<<3),RX_IRQ) // 1 Bit, 1'h0, R
#define UART5_RX_IRQ_EN _bm(_UART5_0,REG_BASE_UART5, (0<<3),RX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART5_RX_IRQ_CLR _bm(_UART5_0,REG_BASE_UART5, (0<<3),RX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART5_RX_EMPTY _bm(_UART5_0,REG_BASE_UART5, (0<<3),RX_EMPTY) // 1 Bit, 1'h0, RW
#define UART5_RX_FULL _bm(_UART5_0,REG_BASE_UART5, (0<<3),RX_FULL) // 1 Bit, 1'h0, RW
#define UART5_RX_DAT _bm(_UART5_1,REG_BASE_UART5, (1<<3),RX_DAT) // 8 Bit, 8'h0, R
#define UART5_TX_DAT _bm(_UART5_2,REG_BASE_UART5, (2<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define UART5_RX_LMT _bm(_UART5_3,REG_BASE_UART5, (3<<3),RX_LMT) // 20 Bit, 20'h2FFFF, RW
#define UART6_CLK_DIV _bm(_UART6_0,REG_BASE_UART6, (0<<3),CLK_DIV) // 12 Bit, 12'h02C, RW
#define UART6_TX_TYPE _bm(_UART6_0,REG_BASE_UART6, (0<<3),TX_TYPE) // 1 Bit, 1'h0, RW
#define UART6_STOP_BIT _bm(_UART6_0,REG_BASE_UART6, (0<<3),STOP_BIT) // 1 Bit, 1'h0, RW
#define UART6_PARITY_MODE _bm(_UART6_0,REG_BASE_UART6, (0<<3),PARITY_MODE) // 2 Bit, 2'h0, RW
#define UART6_TX_IRQ _bm(_UART6_0,REG_BASE_UART6, (0<<3),TX_IRQ) // 1 Bit, 1'h0, R
#define UART6_TX_IRQ_EN _bm(_UART6_0,REG_BASE_UART6, (0<<3),TX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART6_TX_IRQ_CLR _bm(_UART6_0,REG_BASE_UART6, (0<<3),TX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART6_TX_EMPTY _bm(_UART6_0,REG_BASE_UART6, (0<<3),TX_EMPTY) // 1 Bit, 1'h0, RW
#define UART6_TX_FULL _bm(_UART6_0,REG_BASE_UART6, (0<<3),TX_FULL) // 1 Bit, 1'h0, RW
#define UART6_RX_IRQ _bm(_UART6_0,REG_BASE_UART6, (0<<3),RX_IRQ) // 1 Bit, 1'h0, R
#define UART6_RX_IRQ_EN _bm(_UART6_0,REG_BASE_UART6, (0<<3),RX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART6_RX_IRQ_CLR _bm(_UART6_0,REG_BASE_UART6, (0<<3),RX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART6_RX_EMPTY _bm(_UART6_0,REG_BASE_UART6, (0<<3),RX_EMPTY) // 1 Bit, 1'h0, RW
#define UART6_RX_FULL _bm(_UART6_0,REG_BASE_UART6, (0<<3),RX_FULL) // 1 Bit, 1'h0, RW
#define UART6_RX_DAT _bm(_UART6_1,REG_BASE_UART6, (1<<3),RX_DAT) // 8 Bit, 8'h0, R
#define UART6_TX_DAT _bm(_UART6_2,REG_BASE_UART6, (2<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define UART6_RX_LMT _bm(_UART6_3,REG_BASE_UART6, (3<<3),RX_LMT) // 20 Bit, 20'h2FFFF, RW
#define UART7_CLK_DIV _bm(_UART7_0,REG_BASE_UART7, (0<<3),CLK_DIV) // 12 Bit, 12'h02C, RW
#define UART7_TX_TYPE _bm(_UART7_0,REG_BASE_UART7, (0<<3),TX_TYPE) // 1 Bit, 1'h0, RW
#define UART7_STOP_BIT _bm(_UART7_0,REG_BASE_UART7, (0<<3),STOP_BIT) // 1 Bit, 1'h0, RW
#define UART7_PARITY_MODE _bm(_UART7_0,REG_BASE_UART7, (0<<3),PARITY_MODE) // 2 Bit, 2'h0, RW
#define UART7_TX_IRQ _bm(_UART7_0,REG_BASE_UART7, (0<<3),TX_IRQ) // 1 Bit, 1'h0, R
#define UART7_TX_IRQ_EN _bm(_UART7_0,REG_BASE_UART7, (0<<3),TX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART7_TX_IRQ_CLR _bm(_UART7_0,REG_BASE_UART7, (0<<3),TX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART7_TX_EMPTY _bm(_UART7_0,REG_BASE_UART7, (0<<3),TX_EMPTY) // 1 Bit, 1'h0, RW
#define UART7_TX_FULL _bm(_UART7_0,REG_BASE_UART7, (0<<3),TX_FULL) // 1 Bit, 1'h0, RW
#define UART7_RX_IRQ _bm(_UART7_0,REG_BASE_UART7, (0<<3),RX_IRQ) // 1 Bit, 1'h0, R
#define UART7_RX_IRQ_EN _bm(_UART7_0,REG_BASE_UART7, (0<<3),RX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART7_RX_IRQ_CLR _bm(_UART7_0,REG_BASE_UART7, (0<<3),RX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART7_RX_EMPTY _bm(_UART7_0,REG_BASE_UART7, (0<<3),RX_EMPTY) // 1 Bit, 1'h0, RW
#define UART7_RX_FULL _bm(_UART7_0,REG_BASE_UART7, (0<<3),RX_FULL) // 1 Bit, 1'h0, RW
#define UART7_RX_DAT _bm(_UART7_1,REG_BASE_UART7, (1<<3),RX_DAT) // 8 Bit, 8'h0, R
#define UART7_TX_DAT _bm(_UART7_2,REG_BASE_UART7, (2<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define UART7_RX_LMT _bm(_UART7_3,REG_BASE_UART7, (3<<3),RX_LMT) // 20 Bit, 20'h2FFFF, RW
#define UART8_CLK_DIV _bm(_UART8_0,REG_BASE_UART8, (0<<3),CLK_DIV) // 12 Bit, 12'h02C, RW
#define UART8_TX_TYPE _bm(_UART8_0,REG_BASE_UART8, (0<<3),TX_TYPE) // 1 Bit, 1'h0, RW
#define UART8_STOP_BIT _bm(_UART8_0,REG_BASE_UART8, (0<<3),STOP_BIT) // 1 Bit, 1'h0, RW
#define UART7_PARITY_MODE _bm(_UART7_0,REG_BASE_UART7, (0<<3),PARITY_MODE) // 2 Bit, 2'h0, RW
#define UART8_TX_IRQ _bm(_UART8_0,REG_BASE_UART8, (0<<3),TX_IRQ) // 1 Bit, 1'h0, R
#define UART8_TX_IRQ_EN _bm(_UART8_0,REG_BASE_UART8, (0<<3),TX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART8_TX_IRQ_CLR _bm(_UART8_0,REG_BASE_UART8, (0<<3),TX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART8_TX_EMPTY _bm(_UART8_0,REG_BASE_UART8, (0<<3),TX_EMPTY) // 1 Bit, 1'h0, RW
#define UART8_TX_FULL _bm(_UART8_0,REG_BASE_UART8, (0<<3),TX_FULL) // 1 Bit, 1'h0, RW
#define UART8_RX_IRQ _bm(_UART8_0,REG_BASE_UART8, (0<<3),RX_IRQ) // 1 Bit, 1'h0, R
#define UART8_RX_IRQ_EN _bm(_UART8_0,REG_BASE_UART8, (0<<3),RX_IRQ_EN) // 1 Bit, 1'h0, RW
#define UART8_RX_IRQ_CLR _bm(_UART8_0,REG_BASE_UART8, (0<<3),RX_IRQ_CLR) // 1 Bit, 1'h0, W
#define UART8_RX_EMPTY _bm(_UART8_0,REG_BASE_UART8, (0<<3),RX_EMPTY) // 1 Bit, 1'h0, RW
#define UART8_RX_FULL _bm(_UART8_0,REG_BASE_UART8, (0<<3),RX_FULL) // 1 Bit, 1'h0, RW
#define UART8_RX_DAT _bm(_UART8_1,REG_BASE_UART8, (1<<3),RX_DAT) // 8 Bit, 8'h0, R
#define UART8_TX_DAT _bm(_UART8_2,REG_BASE_UART8, (2<<3),TX_DAT) // 8 Bit, 8'h0, RW
#define UART8_RX_LMT _bm(_UART8_3,REG_BASE_UART8, (3<<3),RX_LMT) // 20 Bit, 20'h2FFFF, RW
#define AES_SRC _bm(_AES_0,REG_BASE_AES, (0<<3),SRC) // 32 Bit, 32'h0, RW
#define AES_DST _bm(_AES_1,REG_BASE_AES, (1<<3),DST) // 32 Bit, 32'h0, RW
#define AES_LEN _bm(_AES_2,REG_BASE_AES, (2<<3),LEN) // 32 Bit, 32'h0, RW
#define AES_IRQ _bm(_AES_3,REG_BASE_AES, (3<<3),IRQ) // 1 Bit, 1'h0, R
#define AES_IRQ_EN _bm(_AES_3,REG_BASE_AES, (3<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define AES_IRQ_CLR _bm(_AES_3,REG_BASE_AES, (3<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define AES_KEY_LEN _bm(_AES_3,REG_BASE_AES, (3<<3),KEY_LEN) // 1 Bit, 1'h0, RW
#define AES_CBC_EN _bm(_AES_3,REG_BASE_AES, (3<<3),CBC_EN) // 1 Bit, 1'h0, RW
#define AES_MODE _bm(_AES_3,REG_BASE_AES, (3<<3),MODE) // 1 Bit, 1'h0, RW
#define AES_REQ _bm(_AES_3,REG_BASE_AES, (3<<3),REQ) // 1 Bit, 1'h0, RW
#define AES_KEY_255_224 _bm(_AES_4,REG_BASE_AES, (4<<3),KEY_255_224) // 32 Bit, 32'h0, RW
#define AES_KEY_223_192 _bm(_AES_5,REG_BASE_AES, (5<<3),KEY_223_192) // 32 Bit, 32'h0, RW
#define AES_KEY_191_160 _bm(_AES_6,REG_BASE_AES, (6<<3),KEY_191_160) // 32 Bit, 32'h0, RW
#define AES_KEY_159_128 _bm(_AES_7,REG_BASE_AES, (7<<3),KEY_159_128) // 32 Bit, 32'h0, RW
#define AES_KEY_127_96 _bm(_AES_8,REG_BASE_AES, (8<<3),KEY_127_96) // 32 Bit, 32'h0, RW
#define AES_KEY_95_64 _bm(_AES_9,REG_BASE_AES, (9<<3),KEY_95_64) // 32 Bit, 32'h0, RW
#define AES_KEY_63_32 _bm(_AES_10,REG_BASE_AES, (10<<3),KEY_63_32) // 32 Bit, 32'h0, RW
#define AES_KEY_31_0 _bm(_AES_11,REG_BASE_AES, (11<<3),KEY_31_0) // 32 Bit, 32'h0, RW
#define AES_IV_127_96 _bm(_AES_12,REG_BASE_AES, (12<<3),IV_127_96) // 32 Bit, 32'h0, RW
#define AES_IV_95_64 _bm(_AES_13,REG_BASE_AES, (13<<3),IV_95_64) // 32 Bit, 32'h0, RW
#define AES_IV_63_32 _bm(_AES_14,REG_BASE_AES, (14<<3),IV_63_32) // 32 Bit, 32'h0, RW
#define AES_IV_31_0 _bm(_AES_15,REG_BASE_AES, (15<<3),IV_31_0) // 32 Bit, 32'h0, RW
#define SHA_SRC _bm(_SHA_0,REG_BASE_SHA, (0<<3),SRC) // 32 Bit, 32'h0, RW
#define SHA_LEN _bm(_SHA_2,REG_BASE_SHA, (2<<3),LEN) // 32 Bit, 32'h0, RW
#define SHA_IRQ _bm(_SHA_3,REG_BASE_SHA, (3<<3),IRQ) // 1 Bit, 1'h0, R
#define SHA_IRQ_EN _bm(_SHA_3,REG_BASE_SHA, (3<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define SHA_IRQ_CLR _bm(_SHA_3,REG_BASE_SHA, (3<<3),IRQ_CLR) // 1 Bit, 1'h0, W
#define SHA_MODE _bm(_SHA_3,REG_BASE_SHA, (3<<3),MODE) // 1 Bit, 1'h0, RW
#define SHA_REQ _bm(_SHA_3,REG_BASE_SHA, (3<<3),REQ) // 1 Bit, 1'h0, RW
#define SHA_DIGEST_255_224 _bm(_SHA_4,REG_BASE_SHA, (4<<3),DIGEST_255_224) // 32 Bit, 32'h0, RW
#define SHA_DIGEST_223_192 _bm(_SHA_5,REG_BASE_SHA, (5<<3),DIGEST_223_192) // 32 Bit, 32'h0, RW
#define SHA_DIGEST_191_160 _bm(_SHA_6,REG_BASE_SHA, (6<<3),DIGEST_191_160) // 32 Bit, 32'h0, RW
#define SHA_DIGEST_159_128 _bm(_SHA_7,REG_BASE_SHA, (7<<3),DIGEST_159_128) // 32 Bit, 32'h0, RW
#define SHA_DIGEST_127_96 _bm(_SHA_8,REG_BASE_SHA, (8<<3),DIGEST_127_96) // 32 Bit, 32'h0, RW
#define SHA_DIGEST_95_64 _bm(_SHA_9,REG_BASE_SHA, (9<<3),DIGEST_95_64) // 32 Bit, 32'h0, RW
#define SHA_DIGEST_63_32 _bm(_SHA_10,REG_BASE_SHA, (10<<3),DIGEST_63_32) // 32 Bit, 32'h0, RW
#define SHA_DIGEST_31_0 _bm(_SHA_11,REG_BASE_SHA, (11<<3),DIGEST_31_0) // 32 Bit, 32'h0, RW
#define CHKSUM_IRQ _bm(_CHKSUM_0,REG_BASE_CHKSUM, (0<<3),IRQ) // 1 Bit, 0, R
#define CHKSUM_IRQ_EN _bm(_CHKSUM_0,REG_BASE_CHKSUM, (0<<3),IRQ_EN) // 1 Bit, 0, RW
#define CHKSUM_IRQ_CLR _bm(_CHKSUM_0,REG_BASE_CHKSUM, (0<<3),IRQ_CLR) // 1 Bit, 0, W
#define CHKSUM_GO _bm(_CHKSUM_0,REG_BASE_CHKSUM, (0<<3),GO) // 1 Bit, 0, RW
#define CHKSUM_ADR _bm(_CHKSUM_1,REG_BASE_CHKSUM, (1<<3),ADR) // 32 Bit, 0, RW
#define CHKSUM_LEN _bm(_CHKSUM_2,REG_BASE_CHKSUM, (2<<3),LEN) // 32 Bit, 0, RW
#define CHKSUM_DAT _bm(_CHKSUM_3,REG_BASE_CHKSUM, (3<<3),DAT) // 16 Bit, 0, R
#define SYS_RST_RID _bm(_SYS_0,REG_BASE_SYS, (0<<3),RST_RID) // 4 Bit, 4'h0, R
#define SYS_RST_MIPI _bm(_SYS_0,REG_BASE_SYS, (0<<3),RST_MIPI) // 1 Bit, 1'h0, RW
#define SYS_RST_PERI_REG _bm(_SYS_0,REG_BASE_SYS, (0<<3),RST_PERI_REG) // 1 Bit, 1'h1, RW
#define SYS_RST_H265_REG _bm(_SYS_0,REG_BASE_SYS, (0<<3),RST_H265_REG) // 1 Bit, 1'h1, RW
#define SYS_MCU_PHY_RST _bm(_SYS_0,REG_BASE_SYS, (0<<3),MCU_PHY_RST) // 1 Bit, 1'h1, RW
#define SYS_RST_NPU_REG _bm(_SYS_0,REG_BASE_SYS, (0<<3),RST_NPU_REG) // 1 Bit, 1'h1, RW
#define SYS_RST_CPU3 _bm(_SYS_0,REG_BASE_SYS, (0<<3),RST_CPU3) // 1 Bit, 1'h0, RW
#define SYS_RST_CPU2 _bm(_SYS_0,REG_BASE_SYS, (0<<3),RST_CPU2) // 1 Bit, 1'h0, RW
#define SYS_RST_CPU1 _bm(_SYS_0,REG_BASE_SYS, (0<<3),RST_CPU1) // 1 Bit, 1'h0, RW
#define SYS_RST_CPU0 _bm(_SYS_0,REG_BASE_SYS, (0<<3),RST_CPU0) // 1 Bit, 1'h0, RW
#define SYS_RST_ISP _bm(_SYS_0,REG_BASE_SYS, (0<<3),RST_ISP) // 1 Bit, 1'h0, RW
#define SYS_NPU_PD _bm(_SYS_1,REG_BASE_SYS, (1<<3),NPU_PD) // 1 Bit, 1'h1, RW
#define SYS_CPU3_PD _bm(_SYS_1,REG_BASE_SYS, (1<<3),CPU3_PD) // 1 Bit, 1'h1, RW
#define SYS_CPU2_PD _bm(_SYS_1,REG_BASE_SYS, (1<<3),CPU2_PD) // 1 Bit, 1'h1, RW
#define SYS_CPU1_PD _bm(_SYS_1,REG_BASE_SYS, (1<<3),CPU1_PD) // 1 Bit, 1'h1, RW
#define SYS_CPU0_PD _bm(_SYS_1,REG_BASE_SYS, (1<<3),CPU0_PD) // 1 Bit, 1'h1, RW
#define SYS_NPU_CKSEL _bm(_SYS_1,REG_BASE_SYS, (1<<3),NPU_CKSEL) // 2 Bit, 2'h0, RW
#define SYS_CPU3_CKSEL _bm(_SYS_1,REG_BASE_SYS, (1<<3),CPU3_CKSEL) // 2 Bit, 2'h0, RW
#define SYS_CPU2_CKSEL _bm(_SYS_1,REG_BASE_SYS, (1<<3),CPU2_CKSEL) // 2 Bit, 2'h0, RW
#define SYS_CPU1_CKSEL _bm(_SYS_1,REG_BASE_SYS, (1<<3),CPU1_CKSEL) // 2 Bit, 2'h0, RW
#define SYS_CPU0_CKSEL _bm(_SYS_1,REG_BASE_SYS, (1<<3),CPU0_CKSEL) // 2 Bit, 2'h0, RW
#define SYS_PLL0_P _bm(_SYS_2,REG_BASE_SYS, (2<<3),PLL0_P) // 6 Bit, 6'h4, RW
#define SYS_PLL0_M _bm(_SYS_2,REG_BASE_SYS, (2<<3),PLL0_M) // 10 Bit, 10'd352, RW
#define SYS_PLL0_S _bm(_SYS_2,REG_BASE_SYS, (2<<3),PLL0_S) // 3 Bit, 3'h2, RW
#define SYS_PLL0_VCO_BOOST _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_VCO_BOOST) // 1 Bit, 1'd1, RW
#define SYS_PLL0_LRD_EN _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_LRD_EN) // 1 Bit, 1'h0, RW
#define SYS_PLL0_RSEL _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_RSEL) // 4 Bit, 4'h0, RW
#define SYS_PLL0_PBIAS_CTRL_EN _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_PBIAS_CTRL_EN) // 1 Bit, 1'h0, RW
#define SYS_PLL0_FOUT_MASK _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_FOUT_MASK) // 1 Bit, 1'h0, RW
#define SYS_PLL0_PBIAS_CTRL _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_PBIAS_CTRL) // 1 Bit, 1'h0, RW
#define SYS_PLL0_ICP _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_ICP) // 2 Bit, 2'd2, RW
#define SYS_PLL0_BYPS _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_BYPS) // 1 Bit, 1'h0, RW
#define SYS_PLL0_CON_IN _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_CON_IN) // 2 Bit, 2'd3, RW
#define SYS_PLL0_CON_OUT _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_CON_OUT) // 2 Bit, 2'd3, RW
#define SYS_PLL0_CON_DLY _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_CON_DLY) // 2 Bit, 2'd3, RW
#define SYS_PLL0_CON_REV _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_CON_REV) // 2 Bit, 2'h0, RW
#define SYS_PLL0_TST_EN _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_TST_EN) // 1 Bit, 1'h0, RW
#define SYS_PLL0_TST_AFC _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_TST_AFC) // 5 Bit, 5'h16, RW
#define SYS_PLL0_FSEL _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_FSEL) // 1 Bit, 1'h0, RW
#define SYS_PLL0_FEED_EN _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_FEED_EN) // 1 Bit, 1'h0, RW
#define SYS_PLL0_LOCK_EN _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_LOCK_EN) // 1 Bit, 1'h1, RW
#define SYS_PLL0_AFCINI_SEL _bm(_SYS_3,REG_BASE_SYS, (3<<3),PLL0_AFCINI_SEL) // 1 Bit, 1'h0, RW
#define SYS_PLL1_P _bm(_SYS_4,REG_BASE_SYS, (4<<3),PLL1_P) // 6 Bit, 6'h4, RW
#define SYS_PLL1_M _bm(_SYS_4,REG_BASE_SYS, (4<<3),PLL1_M) // 10 Bit, 10'd237, RW
#define SYS_PLL1_S _bm(_SYS_4,REG_BASE_SYS, (4<<3),PLL1_S) // 3 Bit, 3'h1, RW
#define SYS_PLL1_PWDN _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_PWDN) // 1 Bit, 1'h0, RW
#define SYS_PLL1_VCO_BOOST _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_VCO_BOOST) // 1 Bit, 1'd1, RW
#define SYS_PLL1_LRD_EN _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_LRD_EN) // 1 Bit, 1'h0, RW
#define SYS_PLL1_RSEL _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_RSEL) // 4 Bit, 4'd0, RW
#define SYS_PLL1_PBIAS_CTRL_EN _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_PBIAS_CTRL_EN) // 1 Bit, 1'h0, RW
#define SYS_PLL1_FOUT_MASK _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_FOUT_MASK) // 1 Bit, 1'h0, RW
#define SYS_PLL1_PBIAS_CTRL _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_PBIAS_CTRL) // 1 Bit, 1'h0, RW
#define SYS_PLL1_ICP _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_ICP) // 2 Bit, 2'd2, RW
#define SYS_PLL1_BYPS _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_BYPS) // 1 Bit, 1'h0, RW
#define SYS_PLL1_CON_IN _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_CON_IN) // 2 Bit, 2'd3, RW
#define SYS_PLL1_CON_OUT _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_CON_OUT) // 2 Bit, 2'd3, RW
#define SYS_PLL1_CON_DLY _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_CON_DLY) // 2 Bit, 2'd3, RW
#define SYS_PLL1_CON_REV _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_CON_REV) // 2 Bit, 2'd0, RW
#define SYS_PLL1_TST_EN _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_TST_EN) // 1 Bit, 1'd0, RW
#define SYS_PLL1_TST_AFC _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_TST_AFC) // 5 Bit, 5'h16, RW
#define SYS_PLL1_FSEL _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_FSEL) // 1 Bit, 1'h0, RW
#define SYS_PLL1_FEED_EN _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_FEED_EN) // 1 Bit, 1'h0, RW
#define SYS_PLL1_LOCK_EN _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_LOCK_EN) // 1 Bit, 1'h1, RW
#define SYS_PLL1_AFCINI_SEL _bm(_SYS_5,REG_BASE_SYS, (5<<3),PLL1_AFCINI_SEL) // 1 Bit, 1'h0, RW
#define SYS_PLL2_P _bm(_SYS_6,REG_BASE_SYS, (6<<3),PLL2_P) // 6 Bit, 6'h8, RW
#define SYS_PLL2_M _bm(_SYS_6,REG_BASE_SYS, (6<<3),PLL2_M) // 10 Bit, 10'd474, RW
#define SYS_PLL2_S _bm(_SYS_6,REG_BASE_SYS, (6<<3),PLL2_S) // 3 Bit, 3'h0, RW
#define SYS_PLL2_PWDN _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_PWDN) // 1 Bit, 1'h0, RW
#define SYS_PLL2_VCO_BOOST _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_VCO_BOOST) // 1 Bit, 1'd1, RW
#define SYS_PLL2_LRD_EN _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_LRD_EN) // 1 Bit, 1'h0, RW
#define SYS_PLL2_RSEL _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_RSEL) // 4 Bit, 4'd0, RW
#define SYS_PLL2_PBIAS_CTRL_EN _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_PBIAS_CTRL_EN) // 1 Bit, 1'h0, R
#define SYS_PLL2_FOUT_MASK _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_FOUT_MASK) // 1 Bit, 1'h0, RW
#define SYS_PLL2_PBIAS_CTRL _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_PBIAS_CTRL) // 1 Bit, 1'h0, RW
#define SYS_PLL2_ICP _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_ICP) // 2 Bit, 2'd2, RW
#define SYS_PLL2_BYPS _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_BYPS) // 1 Bit, 1'h0, RW
#define SYS_PLL2_CON_IN _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_CON_IN) // 2 Bit, 2'd3, RW
#define SYS_PLL2_CON_OUT _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_CON_OUT) // 2 Bit, 2'd3, RW
#define SYS_PLL2_CON_DLY _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_CON_DLY) // 2 Bit, 2'd3, RW
#define SYS_PLL2_CON_REV _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_CON_REV) // 2 Bit, 2'd0, RW
#define SYS_PLL2_TST_EN _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_TST_EN) // 1 Bit, 1'd0, RW
#define SYS_PLL2_TST_AFC _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_TST_AFC) // 5 Bit, 5'h16, RW
#define SYS_PLL2_FSEL _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_FSEL) // 1 Bit, 1'h0, RW
#define SYS_PLL2_FEED_EN _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_FEED_EN) // 1 Bit, 1'h0, RW
#define SYS_PLL2_LOCK_EN _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_LOCK_EN) // 1 Bit, 1'h1, RW
#define SYS_PLL2_AFCINI_SEL _bm(_SYS_7,REG_BASE_SYS, (7<<3),PLL2_AFCINI_SEL) // 1 Bit, 1'h0, RW
#define SYS_WDT_CNT _bm(_SYS_16,REG_BASE_SYS, (16<<3),WDT_CNT) // 32 Bit, 32'h0, R
#define SYS_WDT_LMT _bm(_SYS_17,REG_BASE_SYS, (17<<3),WDT_LMT) // 32 Bit, 32'hFFFFFFFF, RW
#define SYS_WDT_EN _bm(_SYS_18,REG_BASE_SYS, (18<<3),WDT_EN) // 1 Bit, 1'h0, RW
#define SYS_WDT_CLR _bm(_SYS_18,REG_BASE_SYS, (18<<3),WDT_CLR) // 1 Bit, 1'h0, W
#define SYS_MARK0 _bm(_SYS_19,REG_BASE_SYS, (19<<3),MARK0) // 32 Bit, 32'h4E455945, R
#define SYS_MARK1 _bm(_SYS_20,REG_BASE_SYS, (20<<3),MARK1) // 32 Bit, 32'h455F5849, R
#define SYS_MARK2 _bm(_SYS_21,REG_BASE_SYS, (21<<3),MARK2) // 32 Bit, 32'h3537364E, R
#define SYS_MARK3 _bm(_SYS_22,REG_BASE_SYS, (22<<3),MARK3) // 32 Bit, 32'h523x505F, R
#define SYS_MARK4 _bm(_SYS_23,REG_BASE_SYS, (23<<3),MARK4) // 32 Bit, 32'h0000003x, R
#define SYS_RTL_DAY _bm(_SYS_24,REG_BASE_SYS, (24<<3),RTL_DAY) // 8 Bit, 8'hxx, R
#define SYS_RTL_MONTH _bm(_SYS_24,REG_BASE_SYS, (24<<3),RTL_MONTH) // 8 Bit, 8'hxx, R
#define SYS_RTL_YEAR _bm(_SYS_24,REG_BASE_SYS, (24<<3),RTL_YEAR) // 16 Bit, 16'hxxxx, R
#define SYS_RTL_SECOND _bm(_SYS_25,REG_BASE_SYS, (25<<3),RTL_SECOND) // 8 Bit, 8'hxx, R
#define SYS_RTL_MINUTE _bm(_SYS_25,REG_BASE_SYS, (25<<3),RTL_MINUTE) // 8 Bit, 8'hxx, R
#define SYS_RTL_HOUR _bm(_SYS_25,REG_BASE_SYS, (25<<3),RTL_HOUR) // 8 Bit, 8'hxx, R
#define SYS_ATOB_IRQ _bm(_SYS_32,REG_BASE_SYS, (32<<3),ATOB_IRQ) // 1 Bit, 1'h0, R
#define SYS_ATOB_IRQ_EN _bm(_SYS_32,REG_BASE_SYS, (32<<3),ATOB_IRQ_EN) // 1 Bit, 1'h0, RW
#define SYS_ATOB_IRQ_CLR _bm(_SYS_32,REG_BASE_SYS, (32<<3),ATOB_IRQ_CLR) // 1 Bit, 1'h0, W
#define SYS_BTOA_BUSY _bm(_SYS_32,REG_BASE_SYS, (32<<3),BTOA_BUSY) // 1 Bit, 1'h0, R
#define SYS_BTOA_CALL _bm(_SYS_32,REG_BASE_SYS, (32<<3),BTOA_CALL) // 1 Bit, 1'h0, RW
#define SYS_BTOA_IRQ _bm(_SYS_33,REG_BASE_SYS, (33<<3),BTOA_IRQ) // 1 Bit, 1'h0, R
#define SYS_BTOA_IRQ_EN _bm(_SYS_33,REG_BASE_SYS, (33<<3),BTOA_IRQ_EN) // 1 Bit, 1'h0, RW
#define SYS_BTOA_IRQ_CLR _bm(_SYS_33,REG_BASE_SYS, (33<<3),BTOA_IRQ_CLR) // 1 Bit, 1'h0, W
#define SYS_ATOB_BUSY _bm(_SYS_33,REG_BASE_SYS, (33<<3),ATOB_BUSY) // 1 Bit, 1'h0, R
#define SYS_ATOB_CALL _bm(_SYS_33,REG_BASE_SYS, (33<<3),ATOB_CALL) // 1 Bit, 1'h0, RW
#define SYS_REG0 _bm(_SYS_34,REG_BASE_SYS, (34<<3),REG0) // 32 Bit, 32'h0, RW
#define SYS_REG1 _bm(_SYS_35,REG_BASE_SYS, (35<<3),REG1) // 32 Bit, 32'h0, RW
#define SYS_REG2 _bm(_SYS_36,REG_BASE_SYS, (36<<3),REG2) // 32 Bit, 32'h0, RW
#define SYS_REG3 _bm(_SYS_37,REG_BASE_SYS, (37<<3),REG3) // 32 Bit, 32'h0, RW
#define SYS_REG4 _bm(_SYS_38,REG_BASE_SYS, (38<<3),REG4) // 32 Bit, 32'h0, RW
#define SYS_REG5 _bm(_SYS_39,REG_BASE_SYS, (39<<3),REG5) // 32 Bit, 32'h0, RW
#define SYS_REG6 _bm(_SYS_40,REG_BASE_SYS, (40<<3),REG6) // 32 Bit, 32'h0, RW
#define SYS_REG7 _bm(_SYS_41,REG_BASE_SYS, (41<<3),REG7) // 32 Bit, 32'h0, RW
#define SYS_MUTEX0 _bm(_SYS_42,REG_BASE_SYS, (42<<3),MUTEX0) // 1 Bit, 1'h0, RW
#define SYS_MUTEX1 _bm(_SYS_43,REG_BASE_SYS, (43<<3),MUTEX1) // 1 Bit, 1'h0, RW
#define SYS_MUTEX2 _bm(_SYS_44,REG_BASE_SYS, (44<<3),MUTEX2) // 1 Bit, 1'h0, RW
#define SYS_MUTEX3 _bm(_SYS_45,REG_BASE_SYS, (45<<3),MUTEX3) // 1 Bit, 1'h0, RW
#define SYS_MUTEX4 _bm(_SYS_46,REG_BASE_SYS, (46<<3),MUTEX4) // 1 Bit, 1'h0, RW
#define SYS_MUTEX5 _bm(_SYS_47,REG_BASE_SYS, (47<<3),MUTEX5) // 1 Bit, 1'h0, RW
#define SYS_MUTEX6 _bm(_SYS_48,REG_BASE_SYS, (48<<3),MUTEX6) // 1 Bit, 1'h0, RW
#define SYS_MUTEX7 _bm(_SYS_49,REG_BASE_SYS, (49<<3),MUTEX7) // 1 Bit, 1'h0, RW
#define SYS_MUTEX8 _bm(_SYS_50,REG_BASE_SYS, (50<<3),MUTEX8) // 1 Bit, 1'h0, RW
#define SYS_MUTEX9 _bm(_SYS_51,REG_BASE_SYS, (51<<3),MUTEX9) // 1 Bit, 1'h0, RW
#define SYS_MUTEX10 _bm(_SYS_52,REG_BASE_SYS, (52<<3),MUTEX10) // 1 Bit, 1'h0, RW
#define SYS_MUTEX11 _bm(_SYS_53,REG_BASE_SYS, (53<<3),MUTEX11) // 1 Bit, 1'h0, RW
#define SYS_MUTEX12 _bm(_SYS_54,REG_BASE_SYS, (54<<3),MUTEX12) // 1 Bit, 1'h0, RW
#define SYS_MUTEX13 _bm(_SYS_55,REG_BASE_SYS, (55<<3),MUTEX13) // 1 Bit, 1'h0, RW
#define SYS_MUTEX14 _bm(_SYS_56,REG_BASE_SYS, (56<<3),MUTEX14) // 1 Bit, 1'h0, RW
#define SYS_MUTEX15 _bm(_SYS_57,REG_BASE_SYS, (57<<3),MUTEX15) // 1 Bit, 1'h0, RW
#define SYS_INTGEN_SEL _bm(_SYS_64,REG_BASE_SYS, (64<<3),INTGEN_SEL) // 1 Bit, 1'h0, RW
#define SYS_OIC_CS_DISABLE_RDI _bm(_SYS_65,REG_BASE_SYS, (65<<3),OIC_CS_DISABLE_RDI) // 1 Bit, 1'h0, RW
#define SYS_OIC_CS_INORDER_RESP2 _bm(_SYS_65,REG_BASE_SYS, (65<<3),OIC_CS_INORDER_RESP2) // 1 Bit, 1'h0, RW
#define SYS_OIC_CS_INORDER_RESP1 _bm(_SYS_65,REG_BASE_SYS, (65<<3),OIC_CS_INORDER_RESP1) // 1 Bit, 1'h0, RW
#define SYS_OIC_CS_INORDER_RESP0 _bm(_SYS_65,REG_BASE_SYS, (65<<3),OIC_CS_INORDER_RESP0) // 1 Bit, 1'h0, RW
#define SYS_GPIO0_MUX _bm(_SYS_256,REG_BASE_SYS, (256<<3),GPIO0_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO1_MUX _bm(_SYS_257,REG_BASE_SYS, (257<<3),GPIO1_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO2_MUX _bm(_SYS_258,REG_BASE_SYS, (258<<3),GPIO2_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO3_MUX _bm(_SYS_259,REG_BASE_SYS, (259<<3),GPIO3_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO4_MUX _bm(_SYS_260,REG_BASE_SYS, (260<<3),GPIO4_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO5_MUX _bm(_SYS_261,REG_BASE_SYS, (261<<3),GPIO5_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO6_MUX _bm(_SYS_262,REG_BASE_SYS, (262<<3),GPIO6_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO7_MUX _bm(_SYS_263,REG_BASE_SYS, (263<<3),GPIO7_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO8_MUX _bm(_SYS_264,REG_BASE_SYS, (264<<3),GPIO8_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO9_MUX _bm(_SYS_265,REG_BASE_SYS, (265<<3),GPIO9_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO10_MUX _bm(_SYS_266,REG_BASE_SYS, (266<<3),GPIO10_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO11_MUX _bm(_SYS_267,REG_BASE_SYS, (267<<3),GPIO11_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO12_MUX _bm(_SYS_268,REG_BASE_SYS, (268<<3),GPIO12_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO13_MUX _bm(_SYS_269,REG_BASE_SYS, (269<<3),GPIO13_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO14_MUX _bm(_SYS_270,REG_BASE_SYS, (270<<3),GPIO14_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO15_MUX _bm(_SYS_271,REG_BASE_SYS, (271<<3),GPIO15_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO16_MUX _bm(_SYS_272,REG_BASE_SYS, (272<<3),GPIO16_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO17_MUX _bm(_SYS_273,REG_BASE_SYS, (273<<3),GPIO17_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO18_MUX _bm(_SYS_274,REG_BASE_SYS, (274<<3),GPIO18_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO19_MUX _bm(_SYS_275,REG_BASE_SYS, (275<<3),GPIO19_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO20_MUX _bm(_SYS_276,REG_BASE_SYS, (276<<3),GPIO20_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO21_MUX _bm(_SYS_277,REG_BASE_SYS, (277<<3),GPIO21_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO22_MUX _bm(_SYS_278,REG_BASE_SYS, (278<<3),GPIO22_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO23_MUX _bm(_SYS_279,REG_BASE_SYS, (279<<3),GPIO23_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO24_MUX _bm(_SYS_280,REG_BASE_SYS, (280<<3),GPIO24_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO25_MUX _bm(_SYS_281,REG_BASE_SYS, (281<<3),GPIO25_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO26_MUX _bm(_SYS_282,REG_BASE_SYS, (282<<3),GPIO26_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO27_MUX _bm(_SYS_283,REG_BASE_SYS, (283<<3),GPIO27_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO28_MUX _bm(_SYS_284,REG_BASE_SYS, (284<<3),GPIO28_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO29_MUX _bm(_SYS_285,REG_BASE_SYS, (285<<3),GPIO29_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO30_MUX _bm(_SYS_286,REG_BASE_SYS, (286<<3),GPIO30_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO31_MUX _bm(_SYS_287,REG_BASE_SYS, (287<<3),GPIO31_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO32_MUX _bm(_SYS_288,REG_BASE_SYS, (288<<3),GPIO32_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO33_MUX _bm(_SYS_289,REG_BASE_SYS, (289<<3),GPIO33_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO34_MUX _bm(_SYS_290,REG_BASE_SYS, (290<<3),GPIO34_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO35_MUX _bm(_SYS_291,REG_BASE_SYS, (291<<3),GPIO35_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO36_MUX _bm(_SYS_292,REG_BASE_SYS, (292<<3),GPIO36_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO37_MUX _bm(_SYS_293,REG_BASE_SYS, (293<<3),GPIO37_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO38_MUX _bm(_SYS_294,REG_BASE_SYS, (294<<3),GPIO38_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO39_MUX _bm(_SYS_295,REG_BASE_SYS, (295<<3),GPIO39_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO40_MUX _bm(_SYS_296,REG_BASE_SYS, (296<<3),GPIO40_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO41_MUX _bm(_SYS_297,REG_BASE_SYS, (297<<3),GPIO41_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO42_MUX _bm(_SYS_298,REG_BASE_SYS, (298<<3),GPIO42_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO43_MUX _bm(_SYS_299,REG_BASE_SYS, (299<<3),GPIO43_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO44_MUX _bm(_SYS_300,REG_BASE_SYS, (300<<3),GPIO44_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO45_MUX _bm(_SYS_301,REG_BASE_SYS, (301<<3),GPIO45_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO46_MUX _bm(_SYS_302,REG_BASE_SYS, (302<<3),GPIO46_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO47_MUX _bm(_SYS_303,REG_BASE_SYS, (303<<3),GPIO47_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO48_MUX _bm(_SYS_304,REG_BASE_SYS, (304<<3),GPIO48_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO49_MUX _bm(_SYS_305,REG_BASE_SYS, (305<<3),GPIO49_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO50_MUX _bm(_SYS_306,REG_BASE_SYS, (306<<3),GPIO50_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO51_MUX _bm(_SYS_307,REG_BASE_SYS, (307<<3),GPIO51_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO52_MUX _bm(_SYS_308,REG_BASE_SYS, (308<<3),GPIO52_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO53_MUX _bm(_SYS_309,REG_BASE_SYS, (309<<3),GPIO53_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO54_MUX _bm(_SYS_310,REG_BASE_SYS, (310<<3),GPIO54_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO55_MUX _bm(_SYS_311,REG_BASE_SYS, (311<<3),GPIO55_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO56_MUX _bm(_SYS_312,REG_BASE_SYS, (312<<3),GPIO56_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO57_MUX _bm(_SYS_313,REG_BASE_SYS, (313<<3),GPIO57_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO58_MUX _bm(_SYS_314,REG_BASE_SYS, (314<<3),GPIO58_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO59_MUX _bm(_SYS_315,REG_BASE_SYS, (315<<3),GPIO59_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO60_MUX _bm(_SYS_316,REG_BASE_SYS, (316<<3),GPIO60_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO61_MUX _bm(_SYS_317,REG_BASE_SYS, (317<<3),GPIO61_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO62_MUX _bm(_SYS_318,REG_BASE_SYS, (318<<3),GPIO62_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO63_MUX _bm(_SYS_319,REG_BASE_SYS, (319<<3),GPIO63_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO64_MUX _bm(_SYS_320,REG_BASE_SYS, (320<<3),GPIO64_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO65_MUX _bm(_SYS_321,REG_BASE_SYS, (321<<3),GPIO65_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO66_MUX _bm(_SYS_322,REG_BASE_SYS, (322<<3),GPIO66_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO67_MUX _bm(_SYS_323,REG_BASE_SYS, (323<<3),GPIO67_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO68_MUX _bm(_SYS_324,REG_BASE_SYS, (324<<3),GPIO68_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO69_MUX _bm(_SYS_325,REG_BASE_SYS, (325<<3),GPIO69_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO70_MUX _bm(_SYS_326,REG_BASE_SYS, (326<<3),GPIO70_MUX) // 2 Bit, 2'h0, RW
#define SYS_GPIO71_MUX _bm(_SYS_327,REG_BASE_SYS, (327<<3),GPIO71_MUX) // 2 Bit, 2'h0, RW
#define SYS_JTAG_TDO_DS _bm(_SYS_512,REG_BASE_SYS, (512<<3),JTAG_TDO_DS) // 2 Bit, 2'h0, RW
#define SYS_JTAG_TDO_SR _bm(_SYS_512,REG_BASE_SYS, (512<<3),JTAG_TDO_SR) // 1 Bit, 1'h0, RW
#define SYS_JTAG_TDI_IS _bm(_SYS_512,REG_BASE_SYS, (512<<3),JTAG_TDI_IS) // 1 Bit, 1'h0, RW
#define SYS_JTAG_TDI_PS _bm(_SYS_512,REG_BASE_SYS, (512<<3),JTAG_TDI_PS) // 1 Bit, 1'h0, RW
#define SYS_JTAG_TDI_PE _bm(_SYS_512,REG_BASE_SYS, (512<<3),JTAG_TDI_PE) // 1 Bit, 1'h0, RW
#define SYS_JTAG_TMS_IS _bm(_SYS_512,REG_BASE_SYS, (512<<3),JTAG_TMS_IS) // 1 Bit, 1'h0, RW
#define SYS_JTAG_TMS_PS _bm(_SYS_512,REG_BASE_SYS, (512<<3),JTAG_TMS_PS) // 1 Bit, 1'h0, RW
#define SYS_JTAG_TMS_PE _bm(_SYS_512,REG_BASE_SYS, (512<<3),JTAG_TMS_PE) // 1 Bit, 1'h0, RW
#define SYS_JTAG_TCK_IS _bm(_SYS_512,REG_BASE_SYS, (512<<3),JTAG_TCK_IS) // 1 Bit, 1'h0, RW
#define SYS_JTAG_TCK_PS _bm(_SYS_512,REG_BASE_SYS, (512<<3),JTAG_TCK_PS) // 1 Bit, 1'h0, RW
#define SYS_JTAG_TCK_PE _bm(_SYS_512,REG_BASE_SYS, (512<<3),JTAG_TCK_PE) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ3_DS _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ3_DS) // 2 Bit, 2'h0, RW
#define SYS_SFLS_DQ3_SR _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ3_SR) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ3_IS _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ3_IS) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ3_PS _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ3_PS) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ3_PE _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ3_PE) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ2_DS _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ2_DS) // 2 Bit, 2'h0, RW
#define SYS_SFLS_DQ2_SR _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ2_SR) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ2_IS _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ2_IS) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ2_PS _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ2_PS) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ2_PE _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ2_PE) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ1_DS _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ1_DS) // 2 Bit, 2'h0, RW
#define SYS_SFLS_DQ1_SR _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ1_SR) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ1_IS _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ1_IS) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ1_PS _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ1_PS) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ1_PE _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ1_PE) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ0_DS _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ0_DS) // 2 Bit, 2'h0, RW
#define SYS_SFLS_DQ0_SR _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ0_SR) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ0_IS _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ0_IS) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ0_PS _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ0_PS) // 1 Bit, 1'h0, RW
#define SYS_SFLS_DQ0_PE _bm(_SYS_513,REG_BASE_SYS, (513<<3),SFLS_DQ0_PE) // 1 Bit, 1'h0, RW
#define SYS_SFLS_CS_DS _bm(_SYS_514,REG_BASE_SYS, (514<<3),SFLS_CS_DS) // 2 Bit, 2'h0, RW
#define SYS_SFLS_CS_SR _bm(_SYS_514,REG_BASE_SYS, (514<<3),SFLS_CS_SR) // 1 Bit, 1'h0, RW
#define SYS_SFLS_CK_DS _bm(_SYS_514,REG_BASE_SYS, (514<<3),SFLS_CK_DS) // 2 Bit, 2'h0, RW
#define SYS_SFLS_CK_SR _bm(_SYS_514,REG_BASE_SYS, (514<<3),SFLS_CK_SR) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT3_DS _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT3_DS) // 2 Bit, 2'h0, RW
#define SYS_SDIO0DAT3_SR _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT3_SR) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT3_IS _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT3_IS) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT3_PS _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT3_PS) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT3_PE _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT3_PE) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT2_DS _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT2_DS) // 2 Bit, 2'h0, RW
#define SYS_SDIO0DAT2_SR _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT2_SR) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT2_IS _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT2_IS) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT2_PS _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT2_PS) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT2_PE _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT2_PE) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT1_DS _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT1_DS) // 2 Bit, 2'h0, RW
#define SYS_SDIO0DAT1_SR _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT1_SR) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT1_IS _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT1_IS) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT1_PS _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT1_PS) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT1_PE _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT1_PE) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT0_DS _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT0_DS) // 2 Bit, 2'h0, RW
#define SYS_SDIO0DAT0_SR _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT0_SR) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT0_IS _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT0_IS) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT0_PS _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT0_PS) // 1 Bit, 1'h0, RW
#define SYS_SDIO0DAT0_PE _bm(_SYS_515,REG_BASE_SYS, (515<<3),SDIO0DAT0_PE) // 1 Bit, 1'h0, RW
#define SYS_SDIO0CK_DS _bm(_SYS_516,REG_BASE_SYS, (516<<3),SDIO0CK_DS) // 2 Bit, 2'h0, RW
#define SYS_SDIO0CK_SR _bm(_SYS_516,REG_BASE_SYS, (516<<3),SDIO0CK_SR) // 1 Bit, 1'h0, RW
#define SYS_SDIO0CK_IS _bm(_SYS_516,REG_BASE_SYS, (516<<3),SDIO0CK_IS) // 1 Bit, 1'h0, RW
#define SYS_SDIO0CK_PS _bm(_SYS_516,REG_BASE_SYS, (516<<3),SDIO0CK_PS) // 1 Bit, 1'h0, RW
#define SYS_SDIO0CK_PE _bm(_SYS_516,REG_BASE_SYS, (516<<3),SDIO0CK_PE) // 1 Bit, 1'h0, RW
#define SYS_SDIO0CMD_DS _bm(_SYS_516,REG_BASE_SYS, (516<<3),SDIO0CMD_DS) // 2 Bit, 2'h0, RW
#define SYS_SDIO0CMD_SR _bm(_SYS_516,REG_BASE_SYS, (516<<3),SDIO0CMD_SR) // 1 Bit, 1'h0, RW
#define SYS_SDIO0CMD_IS _bm(_SYS_516,REG_BASE_SYS, (516<<3),SDIO0CMD_IS) // 1 Bit, 1'h0, RW
#define SYS_SDIO0CMD_PS _bm(_SYS_516,REG_BASE_SYS, (516<<3),SDIO0CMD_PS) // 1 Bit, 1'h0, RW
#define SYS_SDIO0CMD_PE _bm(_SYS_516,REG_BASE_SYS, (516<<3),SDIO0CMD_PE) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT3_DS _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT3_DS) // 2 Bit, 2'h0, RW
#define SYS_SDIO1DAT3_SR _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT3_SR) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT3_IS _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT3_IS) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT3_PS _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT3_PS) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT3_PE _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT3_PE) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT2_DS _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT2_DS) // 2 Bit, 2'h0, RW
#define SYS_SDIO1DAT2_SR _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT2_SR) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT2_IS _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT2_IS) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT2_PS _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT2_PS) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT2_PE _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT2_PE) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT1_DS _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT1_DS) // 2 Bit, 2'h0, RW
#define SYS_SDIO1DAT1_SR _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT1_SR) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT1_IS _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT1_IS) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT1_PS _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT1_PS) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT1_PE _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT1_PE) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT0_DS _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT0_DS) // 2 Bit, 2'h0, RW
#define SYS_SDIO1DAT0_SR _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT0_SR) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT0_IS _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT0_IS) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT0_PS _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT0_PS) // 1 Bit, 1'h0, RW
#define SYS_SDIO1DAT0_PE _bm(_SYS_517,REG_BASE_SYS, (517<<3),SDIO1DAT0_PE) // 1 Bit, 1'h0, RW
#define SYS_SDIO1CK_DS _bm(_SYS_518,REG_BASE_SYS, (518<<3),SDIO1CK_DS) // 2 Bit, 2'h0, RW
#define SYS_SDIO1CK_SR _bm(_SYS_518,REG_BASE_SYS, (518<<3),SDIO1CK_SR) // 1 Bit, 1'h0, RW
#define SYS_SDIO1CK_IS _bm(_SYS_518,REG_BASE_SYS, (518<<3),SDIO1CK_IS) // 1 Bit, 1'h0, RW
#define SYS_SDIO1CK_PS _bm(_SYS_518,REG_BASE_SYS, (518<<3),SDIO1CK_PS) // 1 Bit, 1'h0, RW
#define SYS_SDIO1CK_PE _bm(_SYS_518,REG_BASE_SYS, (518<<3),SDIO1CK_PE) // 1 Bit, 1'h0, RW
#define SYS_SDIO1CMD_DS _bm(_SYS_518,REG_BASE_SYS, (518<<3),SDIO1CMD_DS) // 2 Bit, 2'h0, RW
#define SYS_SDIO1CMD_SR _bm(_SYS_518,REG_BASE_SYS, (518<<3),SDIO1CMD_SR) // 1 Bit, 1'h0, RW
#define SYS_SDIO1CMD_IS _bm(_SYS_518,REG_BASE_SYS, (518<<3),SDIO1CMD_IS) // 1 Bit, 1'h0, RW
#define SYS_SDIO1CMD_PS _bm(_SYS_518,REG_BASE_SYS, (518<<3),SDIO1CMD_PS) // 1 Bit, 1'h0, RW
#define SYS_SDIO1CMD_PE _bm(_SYS_518,REG_BASE_SYS, (518<<3),SDIO1CMD_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO03_DS _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO03_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO03_SR _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO03_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO03_IS _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO03_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO03_PS _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO03_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO03_PE _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO03_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO02_DS _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO02_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO02_SR _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO02_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO02_IS _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO02_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO02_PS _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO02_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO02_PE _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO02_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO01_DS _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO01_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO01_SR _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO01_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO01_IS _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO01_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO01_PS _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO01_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO01_PE _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO01_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO00_DS _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO00_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO00_SR _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO00_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO00_IS _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO00_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO00_PS _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO00_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO00_PE _bm(_SYS_519,REG_BASE_SYS, (519<<3),GPIO00_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO07_DS _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO07_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO07_SR _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO07_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO07_IS _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO07_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO07_PS _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO07_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO07_PE _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO07_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO06_DS _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO06_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO06_SR _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO06_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO06_IS _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO06_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO06_PS _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO06_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO06_PE _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO06_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO05_DS _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO05_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO05_SR _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO05_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO05_IS _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO05_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO05_PS _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO05_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO05_PE _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO05_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO04_DS _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO04_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO04_SR _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO04_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO04_IS _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO04_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO04_PS _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO04_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO04_PE _bm(_SYS_520,REG_BASE_SYS, (520<<3),GPIO04_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO11_DS _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO11_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO11_SR _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO11_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO11_IS _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO11_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO11_PS _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO11_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO11_PE _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO11_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO10_DS _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO10_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO10_SR _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO10_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO10_IS _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO10_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO10_PS _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO10_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO10_PE _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO10_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO09_DS _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO09_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO09_SR _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO09_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO09_IS _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO09_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO09_PS _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO09_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO09_PE _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO09_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO08_DS _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO08_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO08_SR _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO08_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO08_IS _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO08_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO08_PS _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO08_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO08_PE _bm(_SYS_521,REG_BASE_SYS, (521<<3),GPIO08_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO15_DS _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO15_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO15_SR _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO15_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO15_IS _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO15_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO15_PS _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO15_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO15_PE _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO15_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO14_DS _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO14_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO14_SR _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO14_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO14_IS _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO14_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO14_PS _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO14_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO14_PE _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO14_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO13_DS _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO13_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO13_SR _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO13_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO13_IS _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO13_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO13_PS _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO13_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO13_PE _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO13_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO12_DS _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO12_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO12_SR _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO12_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO12_IS _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO12_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO12_PS _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO12_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO12_PE _bm(_SYS_522,REG_BASE_SYS, (522<<3),GPIO12_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO19_DS _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO19_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO19_SR _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO19_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO19_IS _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO19_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO19_PS _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO19_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO19_PE _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO19_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO18_DS _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO18_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO18_SR _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO18_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO18_IS _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO18_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO18_PS _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO18_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO18_PE _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO18_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO17_DS _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO17_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO17_SR _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO17_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO17_IS _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO17_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO17_PS _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO17_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO17_PE _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO17_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO16_DS _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO16_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO16_SR _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO16_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO16_IS _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO16_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO16_PS _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO16_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO16_PE _bm(_SYS_523,REG_BASE_SYS, (523<<3),GPIO16_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO23_DS _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO23_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO23_SR _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO23_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO23_IS _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO23_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO23_PS _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO23_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO23_PE _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO23_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO22_DS _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO22_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO22_SR _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO22_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO22_IS _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO22_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO22_PS _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO22_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO22_PE _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO22_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO21_DS _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO21_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO21_SR _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO21_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO21_IS _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO21_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO21_PS _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO21_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO21_PE _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO21_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO20_DS _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO20_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO20_SR _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO20_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO20_IS _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO20_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO20_PS _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO20_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO20_PE _bm(_SYS_524,REG_BASE_SYS, (524<<3),GPIO20_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO27_DS _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO27_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO27_SR _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO27_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO27_IS _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO27_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO27_PS _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO27_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO27_PE _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO27_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO26_DS _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO26_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO26_SR _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO26_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO26_IS _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO26_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO26_PS _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO26_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO26_PE _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO26_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO25_DS _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO25_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO25_SR _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO25_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO25_IS _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO25_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO25_PS _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO25_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO25_PE _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO25_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO24_DS _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO24_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO24_SR _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO24_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO24_IS _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO24_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO24_PS _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO24_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO24_PE _bm(_SYS_525,REG_BASE_SYS, (525<<3),GPIO24_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO31_DS _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO31_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO31_SR _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO31_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO31_IS _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO31_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO31_PS _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO31_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO31_PE _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO31_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO30_DS _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO30_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO30_SR _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO30_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO30_IS _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO30_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO30_PS _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO30_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO30_PE _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO30_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO29_DS _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO29_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO29_SR _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO29_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO29_IS _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO29_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO29_PS _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO29_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO29_PE _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO29_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO28_DS _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO28_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO28_SR _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO28_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO28_IS _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO28_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO28_PS _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO28_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO28_PE _bm(_SYS_526,REG_BASE_SYS, (526<<3),GPIO28_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO35_DS _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO35_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO35_SR _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO35_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO35_IS _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO35_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO35_PS _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO35_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO35_PE _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO35_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO34_DS _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO34_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO34_SR _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO34_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO34_IS _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO34_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO34_PS _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO34_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO34_PE _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO34_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO33_DS _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO33_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO33_SR _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO33_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO33_IS _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO33_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO33_PS _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO33_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO33_PE _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO33_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO32_DS _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO32_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO32_SR _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO32_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO32_IS _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO32_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO32_PS _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO32_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO32_PE _bm(_SYS_527,REG_BASE_SYS, (527<<3),GPIO32_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO39_DS _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO39_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO39_SR _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO39_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO39_IS _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO39_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO39_PS _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO39_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO39_PE _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO39_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO38_DS _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO38_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO38_SR _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO38_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO38_IS _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO38_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO38_PS _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO38_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO38_PE _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO38_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO37_DS _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO37_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO37_SR _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO37_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO37_IS _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO37_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO37_PS _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO37_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO37_PE _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO37_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO36_DS _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO36_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO36_SR _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO36_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO36_IS _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO36_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO36_PS _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO36_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO36_PE _bm(_SYS_528,REG_BASE_SYS, (528<<3),GPIO36_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO43_DS _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO43_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO43_SR _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO43_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO43_IS _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO43_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO43_PS _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO43_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO43_PE _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO43_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO42_DS _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO42_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO42_SR _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO42_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO42_IS _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO42_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO42_PS _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO42_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO42_PE _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO42_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO41_DS _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO41_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO41_SR _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO41_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO41_IS _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO41_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO41_PS _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO41_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO41_PE _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO41_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO40_DS _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO40_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO40_SR _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO40_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO40_IS _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO40_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO40_PS _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO40_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO40_PE _bm(_SYS_529,REG_BASE_SYS, (529<<3),GPIO40_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO47_DS _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO47_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO47_SR _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO47_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO47_IS _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO47_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO47_PS _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO47_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO47_PE _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO47_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO46_DS _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO46_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO46_SR _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO46_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO46_IS _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO46_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO46_PS _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO46_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO46_PE _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO46_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO45_DS _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO45_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO45_SR _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO45_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO45_IS _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO45_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO45_PS _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO45_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO45_PE _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO45_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO44_DS _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO44_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO44_SR _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO44_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO44_IS _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO44_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO44_PS _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO44_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO44_PE _bm(_SYS_530,REG_BASE_SYS, (530<<3),GPIO44_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO51_DS _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO51_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO51_SR _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO51_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO51_IS _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO51_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO51_PS _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO51_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO51_PE _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO51_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO50_DS _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO50_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO50_SR _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO50_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO50_IS _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO50_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO50_PS _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO50_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO50_PE _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO50_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO49_DS _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO49_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO49_SR _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO49_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO49_IS _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO49_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO49_PS _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO49_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO49_PE _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO49_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO48_DS _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO48_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO48_SR _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO48_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO48_IS _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO48_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO48_PS _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO48_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO48_PE _bm(_SYS_531,REG_BASE_SYS, (531<<3),GPIO48_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO55_DS _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO55_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO55_SR _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO55_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO55_IS _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO55_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO55_PS _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO55_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO55_PE _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO55_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO54_DS _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO54_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO54_SR _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO54_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO54_IS _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO54_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO54_PS _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO54_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO54_PE _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO54_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO53_DS _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO53_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO53_SR _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO53_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO53_IS _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO53_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO53_PS _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO53_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO53_PE _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO53_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO52_DS _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO52_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO52_SR _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO52_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO52_IS _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO52_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO52_PS _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO52_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO52_PE _bm(_SYS_532,REG_BASE_SYS, (532<<3),GPIO52_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO59_DS _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO59_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO59_SR _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO59_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO59_IS _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO59_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO59_PS _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO59_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO59_PE _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO59_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO58_DS _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO58_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO58_SR _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO58_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO58_IS _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO58_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO58_PS _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO58_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO58_PE _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO58_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO57_DS _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO57_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO57_SR _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO57_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO57_IS _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO57_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO57_PS _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO57_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO57_PE _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO57_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO56_DS _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO56_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO56_SR _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO56_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO56_IS _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO56_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO56_PS _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO56_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO56_PE _bm(_SYS_533,REG_BASE_SYS, (533<<3),GPIO56_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO63_DS _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO63_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO63_SR _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO63_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO63_IS _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO63_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO63_PS _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO63_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO63_PE _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO63_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO62_DS _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO62_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO62_SR _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO62_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO62_IS _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO62_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO62_PS _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO62_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO62_PE _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO62_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO61_DS _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO61_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO61_SR _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO61_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO61_IS _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO61_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO61_PS _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO61_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO61_PE _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO61_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO60_DS _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO60_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO60_SR _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO60_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO60_IS _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO60_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO60_PS _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO60_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO60_PE _bm(_SYS_534,REG_BASE_SYS, (534<<3),GPIO60_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO67_DS _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO67_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO67_SR _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO67_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO67_IS _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO67_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO67_PS _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO67_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO67_PE _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO67_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO66_DS _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO66_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO66_SR _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO66_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO66_IS _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO66_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO66_PS _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO66_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO66_PE _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO66_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO65_DS _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO65_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO65_SR _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO65_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO65_IS _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO65_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO65_PS _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO65_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO65_PE _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO65_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO64_DS _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO64_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO64_SR _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO64_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO64_IS _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO64_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO64_PS _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO64_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO64_PE _bm(_SYS_535,REG_BASE_SYS, (535<<3),GPIO64_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO71_DS _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO71_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO71_SR _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO71_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO71_IS _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO71_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO71_PS _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO71_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO71_PE _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO71_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO70_DS _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO70_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO70_SR _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO70_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO70_IS _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO70_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO70_PS _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO70_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO70_PE _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO70_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO69_DS _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO69_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO69_SR _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO69_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO69_IS _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO69_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO69_PS _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO69_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO69_PE _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO69_PE) // 1 Bit, 1'h0, RW
#define SYS_GPIO68_DS _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO68_DS) // 2 Bit, 2'h0, RW
#define SYS_GPIO68_SR _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO68_SR) // 1 Bit, 1'h0, RW
#define SYS_GPIO68_IS _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO68_IS) // 1 Bit, 1'h0, RW
#define SYS_GPIO68_PS _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO68_PS) // 1 Bit, 1'h0, RW
#define SYS_GPIO68_PE _bm(_SYS_536,REG_BASE_SYS, (536<<3),GPIO68_PE) // 1 Bit, 1'h0, RW
#define SYS_SS_CKO_DS _bm(_SYS_537,REG_BASE_SYS, (537<<3),SS_CKO_DS) // 2 Bit, 2'h0, RW
#define SYS_SS_CKO_SR _bm(_SYS_537,REG_BASE_SYS, (537<<3),SS_CKO_SR) // 1 Bit, 1'h0, RW
#define SYS_SS_VS_DS _bm(_SYS_537,REG_BASE_SYS, (537<<3),SS_VS_DS) // 2 Bit, 2'h0, RW
#define SYS_SS_VS_SR _bm(_SYS_537,REG_BASE_SYS, (537<<3),SS_VS_SR) // 1 Bit, 1'h0, RW
#define SYS_SS_VS_IS _bm(_SYS_537,REG_BASE_SYS, (537<<3),SS_VS_IS) // 1 Bit, 1'h0, RW
#define SYS_SS_VS_PS _bm(_SYS_537,REG_BASE_SYS, (537<<3),SS_VS_PS) // 1 Bit, 1'h0, RW
#define SYS_SS_VS_PE _bm(_SYS_537,REG_BASE_SYS, (537<<3),SS_VS_PE) // 1 Bit, 1'h0, RW
#define SYS_SS_HS_DS _bm(_SYS_537,REG_BASE_SYS, (537<<3),SS_HS_DS) // 2 Bit, 2'h0, RW
#define SYS_SS_HS_SR _bm(_SYS_537,REG_BASE_SYS, (537<<3),SS_HS_SR) // 1 Bit, 1'h0, RW
#define SYS_SS_HS_IS _bm(_SYS_537,REG_BASE_SYS, (537<<3),SS_HS_IS) // 1 Bit, 1'h0, RW
#define SYS_SS_HS_PS _bm(_SYS_537,REG_BASE_SYS, (537<<3),SS_HS_PS) // 1 Bit, 1'h0, RW
#define SYS_SS_HS_PE _bm(_SYS_537,REG_BASE_SYS, (537<<3),SS_HS_PE) // 1 Bit, 1'h0, RW
#define SYS_DIN_IS _bm(_SYS_538,REG_BASE_SYS, (538<<3),DIN_IS) // 32 Bit, 32'h0, RW
#define SYS_DENO_DS _bm(_SYS_539,REG_BASE_SYS, (539<<3),DENO_DS) // 2 Bit, 2'h0, RW
#define SYS_DENO_SR _bm(_SYS_539,REG_BASE_SYS, (539<<3),DENO_SR) // 1 Bit, 1'h0, RW
#define SYS_VSO_DS _bm(_SYS_539,REG_BASE_SYS, (539<<3),VSO_DS) // 2 Bit, 2'h0, RW
#define SYS_VSO_SR _bm(_SYS_539,REG_BASE_SYS, (539<<3),VSO_SR) // 1 Bit, 1'h0, RW
#define SYS_VSO_IS _bm(_SYS_539,REG_BASE_SYS, (539<<3),VSO_IS) // 1 Bit, 1'h0, RW
#define SYS_VSO_PS _bm(_SYS_539,REG_BASE_SYS, (539<<3),VSO_PS) // 1 Bit, 1'h0, RW
#define SYS_VSO_PE _bm(_SYS_539,REG_BASE_SYS, (539<<3),VSO_PE) // 1 Bit, 1'h0, RW
#define SYS_HSO_DS _bm(_SYS_539,REG_BASE_SYS, (539<<3),HSO_DS) // 2 Bit, 2'h0, RW
#define SYS_HSO_SR _bm(_SYS_539,REG_BASE_SYS, (539<<3),HSO_SR) // 1 Bit, 1'h0, RW
#define SYS_HSO_IS _bm(_SYS_539,REG_BASE_SYS, (539<<3),HSO_IS) // 1 Bit, 1'h0, RW
#define SYS_HSO_PS _bm(_SYS_539,REG_BASE_SYS, (539<<3),HSO_PS) // 1 Bit, 1'h0, RW
#define SYS_HSO_PE _bm(_SYS_539,REG_BASE_SYS, (539<<3),HSO_PE) // 1 Bit, 1'h0, RW
#define SYS_DCKO2_DS _bm(_SYS_540,REG_BASE_SYS, (540<<3),DCKO2_DS) // 2 Bit, 2'h0, RW
#define SYS_DCKO2_SR _bm(_SYS_540,REG_BASE_SYS, (540<<3),DCKO2_SR) // 1 Bit, 1'h0, RW
#define SYS_DCKO1_DS _bm(_SYS_540,REG_BASE_SYS, (540<<3),DCKO1_DS) // 2 Bit, 2'h0, RW
#define SYS_DCKO1_SR _bm(_SYS_540,REG_BASE_SYS, (540<<3),DCKO1_SR) // 1 Bit, 1'h0, RW
#define SYS_DCKO0_DS _bm(_SYS_540,REG_BASE_SYS, (540<<3),DCKO0_DS) // 2 Bit, 2'h0, RW
#define SYS_DCKO0_SR _bm(_SYS_540,REG_BASE_SYS, (540<<3),DCKO0_SR) // 1 Bit, 1'h0, RW
#define SYS_DO03_DS _bm(_SYS_541,REG_BASE_SYS, (541<<3),DO03_DS) // 2 Bit, 2'h0, RW
#define SYS_DO03_SR _bm(_SYS_541,REG_BASE_SYS, (541<<3),DO03_SR) // 1 Bit, 1'h0, RW
#define SYS_DO02_DS _bm(_SYS_541,REG_BASE_SYS, (541<<3),DO02_DS) // 2 Bit, 2'h0, RW
#define SYS_DO02_SR _bm(_SYS_541,REG_BASE_SYS, (541<<3),DO02_SR) // 1 Bit, 1'h0, RW
#define SYS_DO01_DS _bm(_SYS_541,REG_BASE_SYS, (541<<3),DO01_DS) // 2 Bit, 2'h0, RW
#define SYS_DO01_SR _bm(_SYS_541,REG_BASE_SYS, (541<<3),DO01_SR) // 1 Bit, 1'h0, RW
#define SYS_DO00_DS _bm(_SYS_541,REG_BASE_SYS, (541<<3),DO00_DS) // 2 Bit, 2'h0, RW
#define SYS_DO00_SR _bm(_SYS_541,REG_BASE_SYS, (541<<3),DO00_SR) // 1 Bit, 1'h0, RW
#define SYS_DO07_DS _bm(_SYS_542,REG_BASE_SYS, (542<<3),DO07_DS) // 2 Bit, 2'h0, RW
#define SYS_DO07_SR _bm(_SYS_542,REG_BASE_SYS, (542<<3),DO07_SR) // 1 Bit, 1'h0, RW
#define SYS_DO06_DS _bm(_SYS_542,REG_BASE_SYS, (542<<3),DO06_DS) // 2 Bit, 2'h0, RW
#define SYS_DO06_SR _bm(_SYS_542,REG_BASE_SYS, (542<<3),DO06_SR) // 1 Bit, 1'h0, RW
#define SYS_DO05_DS _bm(_SYS_542,REG_BASE_SYS, (542<<3),DO05_DS) // 2 Bit, 2'h0, RW
#define SYS_DO05_SR _bm(_SYS_542,REG_BASE_SYS, (542<<3),DO05_SR) // 1 Bit, 1'h0, RW
#define SYS_DO04_DS _bm(_SYS_542,REG_BASE_SYS, (542<<3),DO04_DS) // 2 Bit, 2'h0, RW
#define SYS_DO04_SR _bm(_SYS_542,REG_BASE_SYS, (542<<3),DO04_SR) // 1 Bit, 1'h0, RW
#define SYS_DO11_DS _bm(_SYS_543,REG_BASE_SYS, (543<<3),DO11_DS) // 2 Bit, 2'h0, RW
#define SYS_DO11_SR _bm(_SYS_543,REG_BASE_SYS, (543<<3),DO11_SR) // 1 Bit, 1'h0, RW
#define SYS_DO10_DS _bm(_SYS_543,REG_BASE_SYS, (543<<3),DO10_DS) // 2 Bit, 2'h0, RW
#define SYS_DO10_SR _bm(_SYS_543,REG_BASE_SYS, (543<<3),DO10_SR) // 1 Bit, 1'h0, RW
#define SYS_DO09_DS _bm(_SYS_543,REG_BASE_SYS, (543<<3),DO09_DS) // 2 Bit, 2'h0, RW
#define SYS_DO09_SR _bm(_SYS_543,REG_BASE_SYS, (543<<3),DO09_SR) // 1 Bit, 1'h0, RW
#define SYS_DO08_DS _bm(_SYS_543,REG_BASE_SYS, (543<<3),DO08_DS) // 2 Bit, 2'h0, RW
#define SYS_DO08_SR _bm(_SYS_543,REG_BASE_SYS, (543<<3),DO08_SR) // 1 Bit, 1'h0, RW
#define SYS_DO15_DS _bm(_SYS_544,REG_BASE_SYS, (544<<3),DO15_DS) // 2 Bit, 2'h0, RW
#define SYS_DO15_SR _bm(_SYS_544,REG_BASE_SYS, (544<<3),DO15_SR) // 1 Bit, 1'h0, RW
#define SYS_DO14_DS _bm(_SYS_544,REG_BASE_SYS, (544<<3),DO14_DS) // 2 Bit, 2'h0, RW
#define SYS_DO14_SR _bm(_SYS_544,REG_BASE_SYS, (544<<3),DO14_SR) // 1 Bit, 1'h0, RW
#define SYS_DO13_DS _bm(_SYS_544,REG_BASE_SYS, (544<<3),DO13_DS) // 2 Bit, 2'h0, RW
#define SYS_DO13_SR _bm(_SYS_544,REG_BASE_SYS, (544<<3),DO13_SR) // 1 Bit, 1'h0, RW
#define SYS_DO12_DS _bm(_SYS_544,REG_BASE_SYS, (544<<3),DO12_DS) // 2 Bit, 2'h0, RW
#define SYS_DO12_SR _bm(_SYS_544,REG_BASE_SYS, (544<<3),DO12_SR) // 1 Bit, 1'h0, RW
#define SYS_DO19_DS _bm(_SYS_545,REG_BASE_SYS, (545<<3),DO19_DS) // 2 Bit, 2'h0, RW
#define SYS_DO19_SR _bm(_SYS_545,REG_BASE_SYS, (545<<3),DO19_SR) // 1 Bit, 1'h0, RW
#define SYS_DO18_DS _bm(_SYS_545,REG_BASE_SYS, (545<<3),DO18_DS) // 2 Bit, 2'h0, RW
#define SYS_DO18_SR _bm(_SYS_545,REG_BASE_SYS, (545<<3),DO18_SR) // 1 Bit, 1'h0, RW
#define SYS_DO17_DS _bm(_SYS_545,REG_BASE_SYS, (545<<3),DO17_DS) // 2 Bit, 2'h0, RW
#define SYS_DO17_SR _bm(_SYS_545,REG_BASE_SYS, (545<<3),DO17_SR) // 1 Bit, 1'h0, RW
#define SYS_DO16_DS _bm(_SYS_545,REG_BASE_SYS, (545<<3),DO16_DS) // 2 Bit, 2'h0, RW
#define SYS_DO16_SR _bm(_SYS_545,REG_BASE_SYS, (545<<3),DO16_SR) // 1 Bit, 1'h0, RW
#define SYS_DO23_DS _bm(_SYS_546,REG_BASE_SYS, (546<<3),DO23_DS) // 2 Bit, 2'h0, RW
#define SYS_DO23_SR _bm(_SYS_546,REG_BASE_SYS, (546<<3),DO23_SR) // 1 Bit, 1'h0, RW
#define SYS_DO22_DS _bm(_SYS_546,REG_BASE_SYS, (546<<3),DO22_DS) // 2 Bit, 2'h0, RW
#define SYS_DO22_SR _bm(_SYS_546,REG_BASE_SYS, (546<<3),DO22_SR) // 1 Bit, 1'h0, RW
#define SYS_DO21_DS _bm(_SYS_546,REG_BASE_SYS, (546<<3),DO21_DS) // 2 Bit, 2'h0, RW
#define SYS_DO21_SR _bm(_SYS_546,REG_BASE_SYS, (546<<3),DO21_SR) // 1 Bit, 1'h0, RW
#define SYS_DO20_DS _bm(_SYS_546,REG_BASE_SYS, (546<<3),DO20_DS) // 2 Bit, 2'h0, RW
#define SYS_DO20_SR _bm(_SYS_546,REG_BASE_SYS, (546<<3),DO20_SR) // 1 Bit, 1'h0, RW
#define BDMA0_DONE_VAL _bm(_BDMA0_0,REG_BASE_BDMA0, (0<<3),DONE_VAL) // 1 Bit, 1'h0, R
#define BDMA0_DONE_PTR _bm(_BDMA0_0,REG_BASE_BDMA0, (0<<3),DONE_PTR) // 6 Bit, 0, R
#define BDMA0_JOB_PTR _bm(_BDMA0_0,REG_BASE_BDMA0, (0<<3),JOB_PTR) // 6 Bit, 0, RW
#define BDMA0_IRQ _bm(_BDMA0_0,REG_BASE_BDMA0, (0<<3),IRQ) // 1 Bit, 0, R
#define BDMA0_IRQ_EN _bm(_BDMA0_0,REG_BASE_BDMA0, (0<<3),IRQ_EN) // 1 Bit, 0, RW
#define BDMA0_IRQ_CLR _bm(_BDMA0_0,REG_BASE_BDMA0, (0<<3),IRQ_CLR) // 1 Bit, 0, W
#define BDMA0_VALUE _bm(_BDMA0_0,REG_BASE_BDMA0, (0<<3),VALUE) // 8 Bit, 0, RW
#define BDMA0_MODE _bm(_BDMA0_0,REG_BASE_BDMA0, (0<<3),MODE) // 2 Bit, 0, RW
#define BDMA0_GO _bm(_BDMA0_0,REG_BASE_BDMA0, (0<<3),GO) // 1 Bit, 0, RW
#define BDMA0_SRC _bm(_BDMA0_1,REG_BASE_BDMA0, (1<<3),SRC) // 32 Bit, 0, RW
#define BDMA0_DST _bm(_BDMA0_2,REG_BASE_BDMA0, (2<<3),DST) // 32 Bit, 0, RW
#define BDMA0_LEN _bm(_BDMA0_3,REG_BASE_BDMA0, (3<<3),LEN) // 32 Bit, 0, RW
#define BDMA1_DONE_VAL _bm(_BDMA1_0,REG_BASE_BDMA1, (0<<3),DONE_VAL) // 1 Bit, 1'h0, R
#define BDMA1_DONE_PTR _bm(_BDMA1_0,REG_BASE_BDMA1, (0<<3),DONE_PTR) // 6 Bit, 0, R
#define BDMA1_JOB_PTR _bm(_BDMA1_0,REG_BASE_BDMA1, (0<<3),JOB_PTR) // 6 Bit, 0, RW
#define BDMA1_IRQ _bm(_BDMA1_0,REG_BASE_BDMA1, (0<<3),IRQ) // 1 Bit, 0, R
#define BDMA1_IRQ_EN _bm(_BDMA1_0,REG_BASE_BDMA1, (0<<3),IRQ_EN) // 1 Bit, 0, RW
#define BDMA1_IRQ_CLR _bm(_BDMA1_0,REG_BASE_BDMA1, (0<<3),IRQ_CLR) // 1 Bit, 0, W
#define BDMA1_VALUE _bm(_BDMA1_0,REG_BASE_BDMA1, (0<<3),VALUE) // 8 Bit, 0, RW
#define BDMA1_MODE _bm(_BDMA1_0,REG_BASE_BDMA1, (0<<3),MODE) // 2 Bit, 0, RW
#define BDMA1_GO _bm(_BDMA1_0,REG_BASE_BDMA1, (0<<3),GO) // 1 Bit, 0, RW
#define BDMA1_SRC _bm(_BDMA1_1,REG_BASE_BDMA1, (1<<3),SRC) // 32 Bit, 0, RW
#define BDMA1_DST _bm(_BDMA1_2,REG_BASE_BDMA1, (2<<3),DST) // 32 Bit, 0, RW
#define BDMA1_LEN _bm(_BDMA1_3,REG_BASE_BDMA1, (3<<3),LEN) // 32 Bit, 0, RW
#define BDMA2_DONE_VAL _bm(_BDMA2_0,REG_BASE_BDMA2, (0<<3),DONE_VAL) // 1 Bit, 1'h0, R
#define BDMA2_DONE_PTR _bm(_BDMA2_0,REG_BASE_BDMA2, (0<<3),DONE_PTR) // 6 Bit, 0, R
#define BDMA2_JOB_PTR _bm(_BDMA2_0,REG_BASE_BDMA2, (0<<3),JOB_PTR) // 6 Bit, 0, RW
#define BDMA2_IRQ _bm(_BDMA2_0,REG_BASE_BDMA2, (0<<3),IRQ) // 1 Bit, 0, R
#define BDMA2_IRQ_EN _bm(_BDMA2_0,REG_BASE_BDMA2, (0<<3),IRQ_EN) // 1 Bit, 0, RW
#define BDMA2_IRQ_CLR _bm(_BDMA2_0,REG_BASE_BDMA2, (0<<3),IRQ_CLR) // 1 Bit, 0, W
#define BDMA2_VALUE _bm(_BDMA2_0,REG_BASE_BDMA2, (0<<3),VALUE) // 8 Bit, 0, RW
#define BDMA2_MODE _bm(_BDMA2_0,REG_BASE_BDMA2, (0<<3),MODE) // 2 Bit, 0, RW
#define BDMA2_GO _bm(_BDMA2_0,REG_BASE_BDMA2, (0<<3),GO) // 1 Bit, 0, RW
#define BDMA2_SRC _bm(_BDMA2_1,REG_BASE_BDMA2, (1<<3),SRC) // 32 Bit, 0, RW
#define BDMA2_DST _bm(_BDMA2_2,REG_BASE_BDMA2, (2<<3),DST) // 32 Bit, 0, RW
#define BDMA2_LEN _bm(_BDMA2_3,REG_BASE_BDMA2, (3<<3),LEN) // 32 Bit, 0, RW
#define BDMA3_DONE_VAL _bm(_BDMA3_0,REG_BASE_BDMA3, (0<<3),DONE_VAL) // 1 Bit, 1'h0, R
#define BDMA3_DONE_PTR _bm(_BDMA3_0,REG_BASE_BDMA3, (0<<3),DONE_PTR) // 6 Bit, 0, R
#define BDMA3_JOB_PTR _bm(_BDMA3_0,REG_BASE_BDMA3, (0<<3),JOB_PTR) // 6 Bit, 0, RW
#define BDMA3_IRQ _bm(_BDMA3_0,REG_BASE_BDMA3, (0<<3),IRQ) // 1 Bit, 0, R
#define BDMA3_IRQ_EN _bm(_BDMA3_0,REG_BASE_BDMA3, (0<<3),IRQ_EN) // 1 Bit, 0, RW
#define BDMA3_IRQ_CLR _bm(_BDMA3_0,REG_BASE_BDMA3, (0<<3),IRQ_CLR) // 1 Bit, 0, W
#define BDMA3_VALUE _bm(_BDMA3_0,REG_BASE_BDMA3, (0<<3),VALUE) // 8 Bit, 0, RW
#define BDMA3_MODE _bm(_BDMA3_0,REG_BASE_BDMA3, (0<<3),MODE) // 2 Bit, 0, RW
#define BDMA3_GO _bm(_BDMA3_0,REG_BASE_BDMA3, (0<<3),GO) // 1 Bit, 0, RW
#define BDMA3_SRC _bm(_BDMA3_1,REG_BASE_BDMA3, (1<<3),SRC) // 32 Bit, 0, RW
#define BDMA3_DST _bm(_BDMA3_2,REG_BASE_BDMA3, (2<<3),DST) // 32 Bit, 0, RW
#define BDMA3_LEN _bm(_BDMA3_3,REG_BASE_BDMA3, (3<<3),LEN) // 32 Bit, 0, RW
#define BDMA_W_ENDIAN _bm(_BDMA_16,REG_BASE_BDMA, (16<<3),W_ENDIAN) // 1 Bit, 1'h0, RW
#define BDMA_R_ENDIAN _bm(_BDMA_16,REG_BASE_BDMA, (16<<3),R_ENDIAN) // 1 Bit, 1'h0, RW
#define CDMA0_DONE_VAL _bm(_CDMA0_0,REG_BASE_CDMA0, (0<<3),DONE_VAL) // 1 Bit, 1'h0, R
#define CDMA0_DONE_PTR _bm(_CDMA0_0,REG_BASE_CDMA0, (0<<3),DONE_PTR) // 6 Bit, 0, R
#define CDMA0_JOB_PTR _bm(_CDMA0_0,REG_BASE_CDMA0, (0<<3),JOB_PTR) // 6 Bit, 0, RW
#define CDMA0_IRQ _bm(_CDMA0_0,REG_BASE_CDMA0, (0<<3),IRQ) // 1 Bit, 0, R
#define CDMA0_IRQ_EN _bm(_CDMA0_0,REG_BASE_CDMA0, (0<<3),IRQ_EN) // 1 Bit, 0, RW
#define CDMA0_IRQ_CLR _bm(_CDMA0_0,REG_BASE_CDMA0, (0<<3),IRQ_CLR) // 1 Bit, 0, W
#define CDMA0_VALUE _bm(_CDMA0_0,REG_BASE_CDMA0, (0<<3),VALUE) // 8 Bit, 0, RW
#define CDMA0_MODE _bm(_CDMA0_0,REG_BASE_CDMA0, (0<<3),MODE) // 2 Bit, 0, RW
#define CDMA0_GO _bm(_CDMA0_0,REG_BASE_CDMA0, (0<<3),GO) // 1 Bit, 0, RW
#define CDMA0_SRC _bm(_CDMA0_1,REG_BASE_CDMA0, (1<<3),SRC) // 32 Bit, 0, RW
#define CDMA0_DST _bm(_CDMA0_2,REG_BASE_CDMA0, (2<<3),DST) // 32 Bit, 0, RW
#define CDMA0_LEN _bm(_CDMA0_3,REG_BASE_CDMA0, (3<<3),LEN) // 32 Bit, 0, RW
#define CDMA1_DONE_VAL _bm(_CDMA1_0,REG_BASE_CDMA1, (0<<3),DONE_VAL) // 1 Bit, 1'h0, R
#define CDMA1_DONE_PTR _bm(_CDMA1_0,REG_BASE_CDMA1, (0<<3),DONE_PTR) // 6 Bit, 0, R
#define CDMA1_JOB_PTR _bm(_CDMA1_0,REG_BASE_CDMA1, (0<<3),JOB_PTR) // 6 Bit, 0, RW
#define CDMA1_IRQ _bm(_CDMA1_0,REG_BASE_CDMA1, (0<<3),IRQ) // 1 Bit, 0, R
#define CDMA1_IRQ_EN _bm(_CDMA1_0,REG_BASE_CDMA1, (0<<3),IRQ_EN) // 1 Bit, 0, RW
#define CDMA1_IRQ_CLR _bm(_CDMA1_0,REG_BASE_CDMA1, (0<<3),IRQ_CLR) // 1 Bit, 0, W
#define CDMA1_VALUE _bm(_CDMA1_0,REG_BASE_CDMA1, (0<<3),VALUE) // 8 Bit, 0, RW
#define CDMA1_MODE _bm(_CDMA1_0,REG_BASE_CDMA1, (0<<3),MODE) // 2 Bit, 0, RW
#define CDMA1_GO _bm(_CDMA1_0,REG_BASE_CDMA1, (0<<3),GO) // 1 Bit, 0, RW
#define CDMA1_SRC _bm(_CDMA1_1,REG_BASE_CDMA1, (1<<3),SRC) // 32 Bit, 0, RW
#define CDMA1_DST _bm(_CDMA1_2,REG_BASE_CDMA1, (2<<3),DST) // 32 Bit, 0, RW
#define CDMA1_LEN _bm(_CDMA1_3,REG_BASE_CDMA1, (3<<3),LEN) // 32 Bit, 0, RW
#define CDMA2_DONE_VAL _bm(_CDMA2_0,REG_BASE_CDMA2, (0<<3),DONE_VAL) // 1 Bit, 1'h0, R
#define CDMA2_DONE_PTR _bm(_CDMA2_0,REG_BASE_CDMA2, (0<<3),DONE_PTR) // 6 Bit, 0, R
#define CDMA2_JOB_PTR _bm(_CDMA2_0,REG_BASE_CDMA2, (0<<3),JOB_PTR) // 6 Bit, 0, RW
#define CDMA2_IRQ _bm(_CDMA2_0,REG_BASE_CDMA2, (0<<3),IRQ) // 1 Bit, 0, R
#define CDMA2_IRQ_EN _bm(_CDMA2_0,REG_BASE_CDMA2, (0<<3),IRQ_EN) // 1 Bit, 0, RW
#define CDMA2_IRQ_CLR _bm(_CDMA2_0,REG_BASE_CDMA2, (0<<3),IRQ_CLR) // 1 Bit, 0, W
#define CDMA2_VALUE _bm(_CDMA2_0,REG_BASE_CDMA2, (0<<3),VALUE) // 8 Bit, 0, RW
#define CDMA2_MODE _bm(_CDMA2_0,REG_BASE_CDMA2, (0<<3),MODE) // 2 Bit, 0, RW
#define CDMA2_GO _bm(_CDMA2_0,REG_BASE_CDMA2, (0<<3),GO) // 1 Bit, 0, RW
#define CDMA2_SRC _bm(_CDMA2_1,REG_BASE_CDMA2, (1<<3),SRC) // 32 Bit, 0, RW
#define CDMA2_DST _bm(_CDMA2_2,REG_BASE_CDMA2, (2<<3),DST) // 32 Bit, 0, RW
#define CDMA2_LEN _bm(_CDMA2_3,REG_BASE_CDMA2, (3<<3),LEN) // 32 Bit, 0, RW
#define CDMA3_DONE_VAL _bm(_CDMA3_0,REG_BASE_CDMA3, (0<<3),DONE_VAL) // 1 Bit, 1'h0, R
#define CDMA3_DONE_PTR _bm(_CDMA3_0,REG_BASE_CDMA3, (0<<3),DONE_PTR) // 6 Bit, 0, R
#define CDMA3_JOB_PTR _bm(_CDMA3_0,REG_BASE_CDMA3, (0<<3),JOB_PTR) // 6 Bit, 0, RW
#define CDMA3_IRQ _bm(_CDMA3_0,REG_BASE_CDMA3, (0<<3),IRQ) // 1 Bit, 0, R
#define CDMA3_IRQ_EN _bm(_CDMA3_0,REG_BASE_CDMA3, (0<<3),IRQ_EN) // 1 Bit, 0, RW
#define CDMA3_IRQ_CLR _bm(_CDMA3_0,REG_BASE_CDMA3, (0<<3),IRQ_CLR) // 1 Bit, 0, W
#define CDMA3_VALUE _bm(_CDMA3_0,REG_BASE_CDMA3, (0<<3),VALUE) // 8 Bit, 0, RW
#define CDMA3_MODE _bm(_CDMA3_0,REG_BASE_CDMA3, (0<<3),MODE) // 2 Bit, 0, RW
#define CDMA3_GO _bm(_CDMA3_0,REG_BASE_CDMA3, (0<<3),GO) // 1 Bit, 0, RW
#define CDMA3_SRC _bm(_CDMA3_1,REG_BASE_CDMA3, (1<<3),SRC) // 32 Bit, 0, RW
#define CDMA3_DST _bm(_CDMA3_2,REG_BASE_CDMA3, (2<<3),DST) // 32 Bit, 0, RW
#define CDMA3_LEN _bm(_CDMA3_3,REG_BASE_CDMA3, (3<<3),LEN) // 32 Bit, 0, RW
#define I2S_TXLR _bm(_I2S_0,REG_BASE_I2S, (0<<3),TXLR) // 2 Bit, 0, R/W
#define I2S_TXEDN _bm(_I2S_0,REG_BASE_I2S, (0<<3),TXEDN) // 1 Bit, 0, R/W
#define I2S_RXEDN _bm(_I2S_0,REG_BASE_I2S, (0<<3),RXEDN) // 1 Bit, 0, R/W
#define I2S_TX_IRQ _bm(_I2S_0,REG_BASE_I2S, (0<<3),TX_IRQ) // 1 Bit, 0, R
#define I2S_RX_IRQ _bm(_I2S_0,REG_BASE_I2S, (0<<3),RX_IRQ) // 1 Bit, 0, R
#define I2S_TX_IRQ_CLR _bm(_I2S_0,REG_BASE_I2S, (0<<3),TX_IRQ_CLR) // 1 Bit, 0, R/W
#define I2S_RX_IRQ_CLR _bm(_I2S_0,REG_BASE_I2S, (0<<3),RX_IRQ_CLR) // 1 Bit, 0, R/W
#define I2S_TX_IRQ_EN _bm(_I2S_0,REG_BASE_I2S, (0<<3),TX_IRQ_EN) // 1 Bit, 0, R/W
#define I2S_RX_IRQ_EN _bm(_I2S_0,REG_BASE_I2S, (0<<3),RX_IRQ_EN) // 1 Bit, 0, R/W
#define I2S_BYTE _bm(_I2S_0,REG_BASE_I2S, (0<<3),BYTE) // 2 Bit, 0, R/W
#define I2S_RDBYTE _bm(_I2S_0,REG_BASE_I2S, (0<<3),RDBYTE) // 2 Bit, 0, R/W
#define I2S_WRBYTE _bm(_I2S_0,REG_BASE_I2S, (0<<3),WRBYTE) // 2 Bit, 0, R/W
#define I2S_TXDW _bm(_I2S_0,REG_BASE_I2S, (0<<3),TXDW) // 2 Bit, 0, R/W
#define I2S_RXDW _bm(_I2S_0,REG_BASE_I2S, (0<<3),RXDW) // 2 Bit, 0, R/W
#define I2S_TXCODEC _bm(_I2S_0,REG_BASE_I2S, (0<<3),TXCODEC) // 2 Bit, 0, R/W
#define I2S_RXCODEC _bm(_I2S_0,REG_BASE_I2S, (0<<3),RXCODEC) // 2 Bit, 0, R/W
#define I2S_TXMODE _bm(_I2S_0,REG_BASE_I2S, (0<<3),TXMODE) // 2 Bit, 0, R/W
#define I2S_RXMODE _bm(_I2S_0,REG_BASE_I2S, (0<<3),RXMODE) // 2 Bit, 0, R/W
#define I2S_TXEN _bm(_I2S_0,REG_BASE_I2S, (0<<3),TXEN) // 1 Bit, 0, R/W
#define I2S_RXEN _bm(_I2S_0,REG_BASE_I2S, (0<<3),RXEN) // 1 Bit, 0, R/W
#define I2S_MODE _bm(_I2S_0,REG_BASE_I2S, (0<<3),MODE) // 1 Bit, 0, R/W
#define I2S_ADRW _bm(_I2S_1,REG_BASE_I2S, (1<<3),ADRW) // 32 Bit, 0, R/W
#define I2S_ADRR _bm(_I2S_2,REG_BASE_I2S, (2<<3),ADRR) // 32 Bit, 0, R/W
#define I2S_RDLEN _bm(_I2S_3,REG_BASE_I2S, (3<<3),RDLEN) // 2 Bit, 0, R/W
#define I2S_WRLEN _bm(_I2S_3,REG_BASE_I2S, (3<<3),WRLEN) // 2 Bit, 0, R/W
#define I2S_RDDW _bm(_I2S_3,REG_BASE_I2S, (3<<3),RDDW) // 2 Bit, 0, R/W
#define I2S_WRDW _bm(_I2S_3,REG_BASE_I2S, (3<<3),WRDW) // 2 Bit, 0, R/W
#define I2S_SCKCNT _bm(_I2S_3,REG_BASE_I2S, (3<<3),SCKCNT) // 16 Bit, 0, R/W
#define I2S_RX_ADDR _bm(_I2S_4,REG_BASE_I2S, (4<<3),RX_ADDR) // 32 Bit, 0, R
#define I2S_TX_ADDR _bm(_I2S_5,REG_BASE_I2S, (5<<3),TX_ADDR) // 32 Bit, 0, R
#define IRQ_G_ISP _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),G_ISP) // 1 Bit, 1'h0, R
#define IRQ_ISP30 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP30) // 1 Bit, 1'h0, R
#define IRQ_ISP29 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP29) // 1 Bit, 1'h0, R
#define IRQ_ISP28 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP28) // 1 Bit, 1'h0, R
#define IRQ_ISP27 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP27) // 1 Bit, 1'h0, R
#define IRQ_ISP26 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP26) // 1 Bit, 1'h0, R
#define IRQ_ISP25 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP25) // 1 Bit, 1'h0, R
#define IRQ_ISP24 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP24) // 1 Bit, 1'h0, R
#define IRQ_ISP23 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP23) // 1 Bit, 1'h0, R
#define IRQ_ISP22 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP22) // 1 Bit, 1'h0, R
#define IRQ_ISP21 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP21) // 1 Bit, 1'h0, R
#define IRQ_ISP20 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP20) // 1 Bit, 1'h0, R
#define IRQ_ISP19 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP19) // 1 Bit, 1'h0, R
#define IRQ_ISP18 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP18) // 1 Bit, 1'h0, R
#define IRQ_ISP17 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP17) // 1 Bit, 1'h0, R
#define IRQ_ISP16 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP16) // 1 Bit, 1'h0, R
#define IRQ_ISP15 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP15) // 1 Bit, 1'h0, R
#define IRQ_ISP14 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP14) // 1 Bit, 1'h0, R
#define IRQ_ISP13 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP13) // 1 Bit, 1'h0, R
#define IRQ_ISP12 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP12) // 1 Bit, 1'h0, R
#define IRQ_ISP11 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP11) // 1 Bit, 1'h0, R
#define IRQ_ISP10 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP10) // 1 Bit, 1'h0, R
#define IRQ_ISP9 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP9) // 1 Bit, 1'h0, R
#define IRQ_ISP8 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP8) // 1 Bit, 1'h0, R
#define IRQ_ISP7 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP7) // 1 Bit, 1'h0, R
#define IRQ_ISP6 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP6) // 1 Bit, 1'h0, R
#define IRQ_ISP5 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP5) // 1 Bit, 1'h0, R
#define IRQ_ISP4 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP4) // 1 Bit, 1'h0, R
#define IRQ_ISP3 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP3) // 1 Bit, 1'h0, R
#define IRQ_ISP2 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP2) // 1 Bit, 1'h0, R
#define IRQ_ISP1 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP1) // 1 Bit, 1'h0, R
#define IRQ_ISP0 _bm(_IRQ_0,REG_BASE_IRQ_0, (0<<3),ISP0) // 1 Bit, 1'h0, R
#define IRQ_G_VCODEC _bm(_IRQ_1,REG_BASE_IRQ, (1<<3),G_VCODEC) // 1 Bit, 1'h0, R
#define IRQ_VCODEC _bm(_IRQ_1,REG_BASE_IRQ, (1<<3),VCODEC) // 1 Bit, 1'h0, R
#define IRQ_G_DMA0 _bm(_IRQ_2,REG_BASE_IRQ, (2<<3),G_DMA0) // 1 Bit, 1'h0, R
#define IRQ_BDMA0 _bm(_IRQ_2,REG_BASE_IRQ, (2<<3),BDMA0) // 1 Bit, 1'h0, R
#define IRQ_CDMA0 _bm(_IRQ_2,REG_BASE_IRQ, (2<<3),CDMA0) // 1 Bit, 1'h0, R
#define IRQ_G_DMA1 _bm(_IRQ_3,REG_BASE_IRQ, (3<<3),G_DMA1) // 1 Bit, 1'h0, R
#define IRQ_BDMA1 _bm(_IRQ_3,REG_BASE_IRQ, (3<<3),BDMA1) // 1 Bit, 1'h0, R
#define IRQ_CDMA1 _bm(_IRQ_3,REG_BASE_IRQ, (3<<3),CDMA1) // 1 Bit, 1'h0, R
#define IRQ_G_DMA2 _bm(_IRQ_4,REG_BASE_IRQ, (4<<3),G_DMA2) // 1 Bit, 1'h0, R
#define IRQ_BDMA2 _bm(_IRQ_4,REG_BASE_IRQ, (4<<3),BDMA2) // 1 Bit, 1'h0, R
#define IRQ_CDMA2 _bm(_IRQ_4,REG_BASE_IRQ, (4<<3),CDMA2) // 1 Bit, 1'h0, R
#define IRQ_G_DMA3 _bm(_IRQ_5,REG_BASE_IRQ, (5<<3),G_DMA3) // 1 Bit, 1'h0, R
#define IRQ_BDMA3 _bm(_IRQ_5,REG_BASE_IRQ, (5<<3),BDMA3) // 1 Bit, 1'h0, R
#define IRQ_CDMA3 _bm(_IRQ_5,REG_BASE_IRQ, (5<<3),CDMA3) // 1 Bit, 1'h0, R
#define IRQ_G_CORE0 _bm(_IRQ_6,REG_BASE_IRQ, (6<<3),G_CORE0) // 1 Bit, 1'h0, R
#define IRQ_ATOB _bm(_IRQ_6,REG_BASE_IRQ, (6<<3),ATOB) // 1 Bit, 1'h0, R
#define IRQ_G_CORE1 _bm(_IRQ_7,REG_BASE_IRQ, (7<<3),G_CORE1) // 1 Bit, 1'h0, R
#define IRQ_BTOA _bm(_IRQ_7,REG_BASE_IRQ, (7<<3),BTOA) // 1 Bit, 1'h0, R
#define IRQ_G_ETH _bm(_IRQ_8,REG_BASE_IRQ, (8<<3),G_ETH) // 1 Bit, 1'h0, R
#define IRQ_ETH_RX _bm(_IRQ_8,REG_BASE_IRQ, (8<<3),ETH_RX) // 1 Bit, 1'h0, R
#define IRQ_ETH_TX _bm(_IRQ_8,REG_BASE_IRQ, (8<<3),ETH_TX) // 1 Bit, 1'h0, R
#define IRQ_G_SDIO0 _bm(_IRQ_9,REG_BASE_IRQ, (9<<3),G_SDIO0) // 1 Bit, 1'h0, R
#define IRQ_SDIO0 _bm(_IRQ_9,REG_BASE_IRQ, (9<<3),SDIO0) // 1 Bit, 1'h0, R
#define IRQ_G_SDIO1 _bm(_IRQ_10,REG_BASE_IRQ, (10<<3),G_SDIO1) // 1 Bit, 1'h0, R
#define IRQ_SDIO1 _bm(_IRQ_10,REG_BASE_IRQ, (10<<3),SDIO1) // 1 Bit, 1'h0, R
#define IRQ_G_NPU _bm(_IRQ_11,REG_BASE_IRQ, (11<<3),G_NPU) // 1 Bit, 1'h0, R
#define IRQ_NPU _bm(_IRQ_11,REG_BASE_IRQ, (11<<3),NPU) // 1 Bit, 1'h0, R
#define IRQ_G_I2S _bm(_IRQ_12,REG_BASE_IRQ, (12<<3),G_I2S) // 1 Bit, 1'h0, R
#define IRQ_I2S_TX _bm(_IRQ_12,REG_BASE_IRQ, (12<<3),I2S_TX) // 1 Bit, 1'h0, R
#define IRQ_I2S_RX _bm(_IRQ_12,REG_BASE_IRQ, (12<<3),I2S_RX) // 1 Bit, 1'h0, R
#define IRQ_G_USB _bm(_IRQ_13,REG_BASE_IRQ, (13<<3),G_USB) // 1 Bit, 1'h0, R
#define IRQ_USB_DMA _bm(_IRQ_13,REG_BASE_IRQ, (13<<3),USB_DMA) // 1 Bit, 1'h0, R
#define IRQ_USB_MC _bm(_IRQ_13,REG_BASE_IRQ, (13<<3),USB_MC) // 1 Bit, 1'h0, R
#define IRQ_G_CAL _bm(_IRQ_14,REG_BASE_IRQ, (14<<3),G_CAL) // 1 Bit, 1'h0, R
#define IRQ_CHKSUM _bm(_IRQ_14,REG_BASE_IRQ, (14<<3),CHKSUM) // 1 Bit, 1'h0, R
#define IRQ_G_HASH _bm(_IRQ_15,REG_BASE_IRQ, (15<<3),G_HASH) // 1 Bit, 1'h0, R
#define IRQ_SHA _bm(_IRQ_15,REG_BASE_IRQ, (15<<3),SHA) // 1 Bit, 1'h0, R
#define IRQ_G_ENCRYPT _bm(_IRQ_16,REG_BASE_IRQ, (16<<3),G_ENCRYPT) // 1 Bit, 1'h0, R
#define IRQ_AES _bm(_IRQ_16,REG_BASE_IRQ, (16<<3),AES) // 1 Bit, 1'h0, R
#define IRQ_G_OIC _bm(_IRQ_17,REG_BASE_IRQ, (17<<3),G_OIC) // 1 Bit, 1'h0, R
#define IRQ_OIC _bm(_IRQ_17,REG_BASE_IRQ, (17<<3),OIC) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE19 _bm(_IRQ_18,REG_BASE_IRQ, (18<<3),G_SOURCE19) // 1 Bit, 1'h0, R
#define IRQ_SPI0 _bm(_IRQ_18,REG_BASE_IRQ, (18<<3),SPI0) // 1 Bit, 1'h0, R
#define IRQ_TIMER3 _bm(_IRQ_18,REG_BASE_IRQ, (18<<3),TIMER3) // 1 Bit, 1'h0, R
#define IRQ_TIMER2 _bm(_IRQ_18,REG_BASE_IRQ, (18<<3),TIMER2) // 1 Bit, 1'h0, R
#define IRQ_TIMER1 _bm(_IRQ_18,REG_BASE_IRQ, (18<<3),TIMER1) // 1 Bit, 1'h0, R
#define IRQ_TIMER0 _bm(_IRQ_18,REG_BASE_IRQ, (18<<3),TIMER0) // 1 Bit, 1'h0, R
#define IRQ_GPIO3 _bm(_IRQ_18,REG_BASE_IRQ, (18<<3),GPIO3) // 1 Bit, 1'h0, R
#define IRQ_GPIO2 _bm(_IRQ_18,REG_BASE_IRQ, (18<<3),GPIO2) // 1 Bit, 1'h0, R
#define IRQ_GPIO1 _bm(_IRQ_18,REG_BASE_IRQ, (18<<3),GPIO1) // 1 Bit, 1'h0, R
#define IRQ_GPIO0 _bm(_IRQ_18,REG_BASE_IRQ, (18<<3),GPIO0) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE20 _bm(_IRQ_19,REG_BASE_IRQ, (19<<3),G_SOURCE20) // 1 Bit, 1'h0, R
#define IRQ_I2C0 _bm(_IRQ_19,REG_BASE_IRQ, (19<<3),I2C0) // 1 Bit, 1'h0, R
#define IRQ_UART0 _bm(_IRQ_19,REG_BASE_IRQ, (19<<3),UART0) // 1 Bit, 1'h0, R
#define IRQ_TIMER7 _bm(_IRQ_19,REG_BASE_IRQ, (19<<3),TIMER7) // 1 Bit, 1'h0, R
#define IRQ_TIMER6 _bm(_IRQ_19,REG_BASE_IRQ, (19<<3),TIMER6) // 1 Bit, 1'h0, R
#define IRQ_TIMER5 _bm(_IRQ_19,REG_BASE_IRQ, (19<<3),TIMER5) // 1 Bit, 1'h0, R
#define IRQ_TIMER4 _bm(_IRQ_19,REG_BASE_IRQ, (19<<3),TIMER4) // 1 Bit, 1'h0, R
#define IRQ_GPIO7 _bm(_IRQ_19,REG_BASE_IRQ, (19<<3),GPIO7) // 1 Bit, 1'h0, R
#define IRQ_GPIO6 _bm(_IRQ_19,REG_BASE_IRQ, (19<<3),GPIO6) // 1 Bit, 1'h0, R
#define IRQ_GPIO5 _bm(_IRQ_19,REG_BASE_IRQ, (19<<3),GPIO5) // 1 Bit, 1'h0, R
#define IRQ_GPIO4 _bm(_IRQ_19,REG_BASE_IRQ, (19<<3),GPIO4) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE21 _bm(_IRQ_20,REG_BASE_IRQ, (20<<3),G_SOURCE21) // 1 Bit, 1'h0, R
#define IRQ_SPI1 _bm(_IRQ_20,REG_BASE_IRQ, (20<<3),SPI1) // 1 Bit, 1'h0, R
#define IRQ_TIMER11 _bm(_IRQ_20,REG_BASE_IRQ, (20<<3),TIMER11) // 1 Bit, 1'h0, R
#define IRQ_TIMER10 _bm(_IRQ_20,REG_BASE_IRQ, (20<<3),TIMER10) // 1 Bit, 1'h0, R
#define IRQ_TIMER9 _bm(_IRQ_20,REG_BASE_IRQ, (20<<3),TIMER9) // 1 Bit, 1'h0, R
#define IRQ_TIMER8 _bm(_IRQ_20,REG_BASE_IRQ, (20<<3),TIMER8) // 1 Bit, 1'h0, R
#define IRQ_GPIO11 _bm(_IRQ_20,REG_BASE_IRQ, (20<<3),GPIO11) // 1 Bit, 1'h0, R
#define IRQ_GPIO10 _bm(_IRQ_20,REG_BASE_IRQ, (20<<3),GPIO10) // 1 Bit, 1'h0, R
#define IRQ_GPIO9 _bm(_IRQ_20,REG_BASE_IRQ, (20<<3),GPIO9) // 1 Bit, 1'h0, R
#define IRQ_GPIO8 _bm(_IRQ_20,REG_BASE_IRQ, (20<<3),GPIO8) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE22 _bm(_IRQ_21,REG_BASE_IRQ, (21<<3),G_SOURCE22) // 1 Bit, 1'h0, R
#define IRQ_I2C1 _bm(_IRQ_21,REG_BASE_IRQ, (21<<3),I2C1) // 1 Bit, 1'h0, R
#define IRQ_UART1 _bm(_IRQ_21,REG_BASE_IRQ, (21<<3),UART1) // 1 Bit, 1'h0, R
#define IRQ_TIMER15 _bm(_IRQ_21,REG_BASE_IRQ, (21<<3),TIMER15) // 1 Bit, 1'h0, R
#define IRQ_TIMER14 _bm(_IRQ_21,REG_BASE_IRQ, (21<<3),TIMER14) // 1 Bit, 1'h0, R
#define IRQ_TIMER13 _bm(_IRQ_21,REG_BASE_IRQ, (21<<3),TIMER13) // 1 Bit, 1'h0, R
#define IRQ_TIMER12 _bm(_IRQ_21,REG_BASE_IRQ, (21<<3),TIMER12) // 1 Bit, 1'h0, R
#define IRQ_GPIO15 _bm(_IRQ_21,REG_BASE_IRQ, (21<<3),GPIO15) // 1 Bit, 1'h0, R
#define IRQ_GPIO14 _bm(_IRQ_21,REG_BASE_IRQ, (21<<3),GPIO14) // 1 Bit, 1'h0, R
#define IRQ_GPIO13 _bm(_IRQ_21,REG_BASE_IRQ, (21<<3),GPIO13) // 1 Bit, 1'h0, R
#define IRQ_GPIO12 _bm(_IRQ_21,REG_BASE_IRQ, (21<<3),GPIO12) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE23 _bm(_IRQ_22,REG_BASE_IRQ, (22<<3),G_SOURCE23) // 1 Bit, 1'h0, R
#define IRQ_SPI2 _bm(_IRQ_22,REG_BASE_IRQ, (22<<3),SPI2) // 1 Bit, 1'h0, R
#define IRQ_GPIO19 _bm(_IRQ_22,REG_BASE_IRQ, (22<<3),GPIO19) // 1 Bit, 1'h0, R
#define IRQ_GPIO18 _bm(_IRQ_22,REG_BASE_IRQ, (22<<3),GPIO18) // 1 Bit, 1'h0, R
#define IRQ_GPIO17 _bm(_IRQ_22,REG_BASE_IRQ, (22<<3),GPIO17) // 1 Bit, 1'h0, R
#define IRQ_GPIO16 _bm(_IRQ_22,REG_BASE_IRQ, (22<<3),GPIO16) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE24 _bm(_IRQ_23,REG_BASE_IRQ, (23<<3),G_SOURCE24) // 1 Bit, 1'h0, R
#define IRQ_I2C2 _bm(_IRQ_23,REG_BASE_IRQ, (23<<3),I2C2) // 1 Bit, 1'h0, R
#define IRQ_UART2 _bm(_IRQ_23,REG_BASE_IRQ, (23<<3),UART2) // 1 Bit, 1'h0, R
#define IRQ_TIMER19 _bm(_IRQ_23,REG_BASE_IRQ, (23<<3),TIMER19) // 1 Bit, 1'h0, R
#define IRQ_TIMER18 _bm(_IRQ_23,REG_BASE_IRQ, (23<<3),TIMER18) // 1 Bit, 1'h0, R
#define IRQ_TIMER17 _bm(_IRQ_23,REG_BASE_IRQ, (23<<3),TIMER17) // 1 Bit, 1'h0, R
#define IRQ_TIMER16 _bm(_IRQ_23,REG_BASE_IRQ, (23<<3),TIMER16) // 1 Bit, 1'h0, R
#define IRQ_GPIO23 _bm(_IRQ_23,REG_BASE_IRQ, (23<<3),GPIO23) // 1 Bit, 1'h0, R
#define IRQ_GPIO22 _bm(_IRQ_23,REG_BASE_IRQ, (23<<3),GPIO22) // 1 Bit, 1'h0, R
#define IRQ_GPIO21 _bm(_IRQ_23,REG_BASE_IRQ, (23<<3),GPIO21) // 1 Bit, 1'h0, R
#define IRQ_GPIO20 _bm(_IRQ_23,REG_BASE_IRQ, (23<<3),GPIO20) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE25 _bm(_IRQ_24,REG_BASE_IRQ, (24<<3),G_SOURCE25) // 1 Bit, 1'h0, R
#define IRQ_SPI3 _bm(_IRQ_24,REG_BASE_IRQ, (24<<3),SPI3) // 1 Bit, 1'h0, R
#define IRQ_TIMER23 _bm(_IRQ_24,REG_BASE_IRQ, (24<<3),TIMER23) // 1 Bit, 1'h0, R
#define IRQ_TIMER22 _bm(_IRQ_24,REG_BASE_IRQ, (24<<3),TIMER22) // 1 Bit, 1'h0, R
#define IRQ_TIMER21 _bm(_IRQ_24,REG_BASE_IRQ, (24<<3),TIMER21) // 1 Bit, 1'h0, R
#define IRQ_TIMER20 _bm(_IRQ_24,REG_BASE_IRQ, (24<<3),TIMER20) // 1 Bit, 1'h0, R
#define IRQ_GPIO27 _bm(_IRQ_24,REG_BASE_IRQ, (24<<3),GPIO27) // 1 Bit, 1'h0, R
#define IRQ_GPIO26 _bm(_IRQ_24,REG_BASE_IRQ, (24<<3),GPIO26) // 1 Bit, 1'h0, R
#define IRQ_GPIO25 _bm(_IRQ_24,REG_BASE_IRQ, (24<<3),GPIO25) // 1 Bit, 1'h0, R
#define IRQ_GPIO24 _bm(_IRQ_24,REG_BASE_IRQ, (24<<3),GPIO24) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE26 _bm(_IRQ_25,REG_BASE_IRQ, (25<<3),G_SOURCE26) // 1 Bit, 1'h0, R
#define IRQ_I2C3 _bm(_IRQ_25,REG_BASE_IRQ, (25<<3),I2C3) // 1 Bit, 1'h0, R
#define IRQ_UART3 _bm(_IRQ_25,REG_BASE_IRQ, (25<<3),UART3) // 1 Bit, 1'h0, R
#define IRQ_TIMER27 _bm(_IRQ_25,REG_BASE_IRQ, (25<<3),TIMER27) // 1 Bit, 1'h0, R
#define IRQ_TIMER26 _bm(_IRQ_25,REG_BASE_IRQ, (25<<3),TIMER26) // 1 Bit, 1'h0, R
#define IRQ_TIMER25 _bm(_IRQ_25,REG_BASE_IRQ, (25<<3),TIMER25) // 1 Bit, 1'h0, R
#define IRQ_TIMER24 _bm(_IRQ_25,REG_BASE_IRQ, (25<<3),TIMER24) // 1 Bit, 1'h0, R
#define IRQ_GPIO31 _bm(_IRQ_25,REG_BASE_IRQ, (25<<3),GPIO31) // 1 Bit, 1'h0, R
#define IRQ_GPIO30 _bm(_IRQ_25,REG_BASE_IRQ, (25<<3),GPIO30) // 1 Bit, 1'h0, R
#define IRQ_GPIO29 _bm(_IRQ_25,REG_BASE_IRQ, (25<<3),GPIO29) // 1 Bit, 1'h0, R
#define IRQ_GPIO28 _bm(_IRQ_25,REG_BASE_IRQ, (25<<3),GPIO28) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE27 _bm(_IRQ_26,REG_BASE_IRQ, (26<<3),G_SOURCE27) // 1 Bit, 1'h0, R
#define IRQ_SPI4 _bm(_IRQ_26,REG_BASE_IRQ, (26<<3),SPI4) // 1 Bit, 1'h0, R
#define IRQ_TIMER31 _bm(_IRQ_26,REG_BASE_IRQ, (26<<3),TIMER31) // 1 Bit, 1'h0, R
#define IRQ_TIMER30 _bm(_IRQ_26,REG_BASE_IRQ, (26<<3),TIMER30) // 1 Bit, 1'h0, R
#define IRQ_TIMER29 _bm(_IRQ_26,REG_BASE_IRQ, (26<<3),TIMER29) // 1 Bit, 1'h0, R
#define IRQ_TIMER28 _bm(_IRQ_26,REG_BASE_IRQ, (26<<3),TIMER28) // 1 Bit, 1'h0, R
#define IRQ_GPIO35 _bm(_IRQ_26,REG_BASE_IRQ, (26<<3),GPIO35) // 1 Bit, 1'h0, R
#define IRQ_GPIO34 _bm(_IRQ_26,REG_BASE_IRQ, (26<<3),GPIO34) // 1 Bit, 1'h0, R
#define IRQ_GPIO33 _bm(_IRQ_26,REG_BASE_IRQ, (26<<3),GPIO33) // 1 Bit, 1'h0, R
#define IRQ_GPIO32 _bm(_IRQ_26,REG_BASE_IRQ, (26<<3),GPIO32) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE28 _bm(_IRQ_27,REG_BASE_IRQ, (27<<3),G_SOURCE28) // 1 Bit, 1'h0, R
#define IRQ_I2C4 _bm(_IRQ_27,REG_BASE_IRQ, (27<<3),I2C4) // 1 Bit, 1'h0, R
#define IRQ_UART4 _bm(_IRQ_27,REG_BASE_IRQ, (27<<3),UART4) // 1 Bit, 1'h0, R
#define IRQ_GPIO39 _bm(_IRQ_27,REG_BASE_IRQ, (27<<3),GPIO39) // 1 Bit, 1'h0, R
#define IRQ_GPIO38 _bm(_IRQ_27,REG_BASE_IRQ, (27<<3),GPIO38) // 1 Bit, 1'h0, R
#define IRQ_GPIO37 _bm(_IRQ_27,REG_BASE_IRQ, (27<<3),GPIO37) // 1 Bit, 1'h0, R
#define IRQ_GPIO36 _bm(_IRQ_27,REG_BASE_IRQ, (27<<3),GPIO36) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE29 _bm(_IRQ_28,REG_BASE_IRQ, (28<<3),G_SOURCE29) // 1 Bit, 1'h0, R
#define IRQ_SPI5 _bm(_IRQ_28,REG_BASE_IRQ, (28<<3),SPI5) // 1 Bit, 1'h0, R
#define IRQ_GPIO43 _bm(_IRQ_28,REG_BASE_IRQ, (28<<3),GPIO43) // 1 Bit, 1'h0, R
#define IRQ_GPIO42 _bm(_IRQ_28,REG_BASE_IRQ, (28<<3),GPIO42) // 1 Bit, 1'h0, R
#define IRQ_GPIO41 _bm(_IRQ_28,REG_BASE_IRQ, (28<<3),GPIO41) // 1 Bit, 1'h0, R
#define IRQ_GPIO40 _bm(_IRQ_28,REG_BASE_IRQ, (28<<3),GPIO40) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE30 _bm(_IRQ_29,REG_BASE_IRQ, (29<<3),G_SOURCE30) // 1 Bit, 1'h0, R
#define IRQ_I2C5 _bm(_IRQ_29,REG_BASE_IRQ, (29<<3),I2C5) // 1 Bit, 1'h0, R
#define IRQ_UART5 _bm(_IRQ_29,REG_BASE_IRQ, (29<<3),UART5) // 1 Bit, 1'h0, R
#define IRQ_GPIO47 _bm(_IRQ_29,REG_BASE_IRQ, (29<<3),GPIO47) // 1 Bit, 1'h0, R
#define IRQ_GPIO46 _bm(_IRQ_29,REG_BASE_IRQ, (29<<3),GPIO46) // 1 Bit, 1'h0, R
#define IRQ_GPIO45 _bm(_IRQ_29,REG_BASE_IRQ, (29<<3),GPIO45) // 1 Bit, 1'h0, R
#define IRQ_GPIO44 _bm(_IRQ_29,REG_BASE_IRQ, (29<<3),GPIO44) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE31 _bm(_IRQ_30,REG_BASE_IRQ, (30<<3),G_SOURCE31) // 1 Bit, 1'h0, R
#define IRQ_SPI6 _bm(_IRQ_30,REG_BASE_IRQ, (30<<3),SPI6) // 1 Bit, 1'h0, R
#define IRQ_GPIO51 _bm(_IRQ_30,REG_BASE_IRQ, (30<<3),GPIO51) // 1 Bit, 1'h0, R
#define IRQ_GPIO50 _bm(_IRQ_30,REG_BASE_IRQ, (30<<3),GPIO50) // 1 Bit, 1'h0, R
#define IRQ_GPIO49 _bm(_IRQ_30,REG_BASE_IRQ, (30<<3),GPIO49) // 1 Bit, 1'h0, R
#define IRQ_GPIO48 _bm(_IRQ_30,REG_BASE_IRQ, (30<<3),GPIO48) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE32 _bm(_IRQ_31,REG_BASE_IRQ, (31<<3),G_SOURCE32) // 1 Bit, 1'h0, R
#define IRQ_I2C6 _bm(_IRQ_31,REG_BASE_IRQ, (31<<3),I2C6) // 1 Bit, 1'h0, R
#define IRQ_UART6 _bm(_IRQ_31,REG_BASE_IRQ, (31<<3),UART6) // 1 Bit, 1'h0, R
#define IRQ_TIMER34 _bm(_IRQ_31,REG_BASE_IRQ, (31<<3),TIMER34) // 1 Bit, 1'h0, R
#define IRQ_TIMER33 _bm(_IRQ_31,REG_BASE_IRQ, (31<<3),TIMER33) // 1 Bit, 1'h0, R
#define IRQ_TIMER32 _bm(_IRQ_31,REG_BASE_IRQ, (31<<3),TIMER32) // 1 Bit, 1'h0, R
#define IRQ_GPIO55 _bm(_IRQ_31,REG_BASE_IRQ, (31<<3),GPIO55) // 1 Bit, 1'h0, R
#define IRQ_GPIO54 _bm(_IRQ_31,REG_BASE_IRQ, (31<<3),GPIO54) // 1 Bit, 1'h0, R
#define IRQ_GPIO53 _bm(_IRQ_31,REG_BASE_IRQ, (31<<3),GPIO53) // 1 Bit, 1'h0, R
#define IRQ_GPIO52 _bm(_IRQ_31,REG_BASE_IRQ, (31<<3),GPIO52) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE33 _bm(_IRQ_32,REG_BASE_IRQ, (32<<3),G_SOURCE33) // 1 Bit, 1'h0, R
#define IRQ_SPI7 _bm(_IRQ_32,REG_BASE_IRQ, (32<<3),SPI7) // 1 Bit, 1'h0, R
#define IRQ_TIMER38 _bm(_IRQ_32,REG_BASE_IRQ, (32<<3),TIMER38) // 1 Bit, 1'h0, R
#define IRQ_TIMER37 _bm(_IRQ_32,REG_BASE_IRQ, (32<<3),TIMER37) // 1 Bit, 1'h0, R
#define IRQ_TIMER36 _bm(_IRQ_32,REG_BASE_IRQ, (32<<3),TIMER36) // 1 Bit, 1'h0, R
#define IRQ_TIMER35 _bm(_IRQ_32,REG_BASE_IRQ, (32<<3),TIMER35) // 1 Bit, 1'h0, R
#define IRQ_GPIO59 _bm(_IRQ_32,REG_BASE_IRQ, (32<<3),GPIO59) // 1 Bit, 1'h0, R
#define IRQ_GPIO58 _bm(_IRQ_32,REG_BASE_IRQ, (32<<3),GPIO58) // 1 Bit, 1'h0, R
#define IRQ_GPIO57 _bm(_IRQ_32,REG_BASE_IRQ, (32<<3),GPIO57) // 1 Bit, 1'h0, R
#define IRQ_GPIO56 _bm(_IRQ_32,REG_BASE_IRQ, (32<<3),GPIO56) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE34 _bm(_IRQ_33,REG_BASE_IRQ, (33<<3),G_SOURCE34) // 1 Bit, 1'h0, R
#define IRQ_I2C7 _bm(_IRQ_33,REG_BASE_IRQ, (33<<3),I2C7) // 1 Bit, 1'h0, R
#define IRQ_UART7 _bm(_IRQ_33,REG_BASE_IRQ, (33<<3),UART7) // 1 Bit, 1'h0, R
#define IRQ_GPIO63 _bm(_IRQ_33,REG_BASE_IRQ, (33<<3),GPIO63) // 1 Bit, 1'h0, R
#define IRQ_GPIO62 _bm(_IRQ_33,REG_BASE_IRQ, (33<<3),GPIO62) // 1 Bit, 1'h0, R
#define IRQ_GPIO61 _bm(_IRQ_33,REG_BASE_IRQ, (33<<3),GPIO61) // 1 Bit, 1'h0, R
#define IRQ_GPIO60 _bm(_IRQ_33,REG_BASE_IRQ, (33<<3),GPIO60) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE35 _bm(_IRQ_34,REG_BASE_IRQ, (34<<3),G_SOURCE35) // 1 Bit, 1'h0, R
#define IRQ_SPI8 _bm(_IRQ_34,REG_BASE_IRQ, (34<<3),SPI8) // 1 Bit, 1'h0, R
#define IRQ_GPIO67 _bm(_IRQ_34,REG_BASE_IRQ, (34<<3),GPIO67) // 1 Bit, 1'h0, R
#define IRQ_GPIO66 _bm(_IRQ_34,REG_BASE_IRQ, (34<<3),GPIO66) // 1 Bit, 1'h0, R
#define IRQ_GPIO65 _bm(_IRQ_34,REG_BASE_IRQ, (34<<3),GPIO65) // 1 Bit, 1'h0, R
#define IRQ_GPIO64 _bm(_IRQ_34,REG_BASE_IRQ, (34<<3),GPIO64) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE36 _bm(_IRQ_35,REG_BASE_IRQ, (35<<3),G_SOURCE36) // 1 Bit, 1'h0, R
#define IRQ_I2C8 _bm(_IRQ_35,REG_BASE_IRQ, (35<<3),I2C8) // 1 Bit, 1'h0, R
#define IRQ_UART8 _bm(_IRQ_35,REG_BASE_IRQ, (35<<3),UART8) // 1 Bit, 1'h0, R
#define IRQ_GPIO71 _bm(_IRQ_35,REG_BASE_IRQ, (35<<3),GPIO71) // 1 Bit, 1'h0, R
#define IRQ_GPIO70 _bm(_IRQ_35,REG_BASE_IRQ, (35<<3),GPIO70) // 1 Bit, 1'h0, R
#define IRQ_GPIO69 _bm(_IRQ_35,REG_BASE_IRQ, (35<<3),GPIO69) // 1 Bit, 1'h0, R
#define IRQ_GPIO68 _bm(_IRQ_35,REG_BASE_IRQ, (35<<3),GPIO68) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE37 _bm(_IRQ_36,REG_BASE_IRQ, (36<<3),G_SOURCE37) // 1 Bit, 1'h0, R
#define IRQ_IR _bm(_IRQ_36,REG_BASE_IRQ, (36<<3),IR) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE38 _bm(_IRQ_37,REG_BASE_IRQ, (37<<3),G_SOURCE38) // 1 Bit, 1'h0, R
#define IRQ_OMC_COOLDONWN _bm(_IRQ_37,REG_BASE_IRQ, (37<<3),OMC_COOLDONWN) // 1 Bit, 1'h0, R
#define IRQ_OMC_HIGHTEMP _bm(_IRQ_37,REG_BASE_IRQ, (37<<3),OMC_HIGHTEMP) // 1 Bit, 1'h0, R
#define IRQ_OMC_OVERTEMP _bm(_IRQ_37,REG_BASE_IRQ, (37<<3),OMC_OVERTEMP) // 1 Bit, 1'h0, R
#define IRQ_OMC_ASP _bm(_IRQ_37,REG_BASE_IRQ, (37<<3),OMC_ASP) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE39 _bm(_IRQ_38,REG_BASE_IRQ, (38<<3),G_SOURCE39) // 1 Bit, 1'h0, R
#define IRQ_G_SOURCE40 _bm(_IRQ_39,REG_BASE_IRQ, (39<<3),G_SOURCE40) // 1 Bit, 1'h0, R
#define ADC_LOCK_CNT _bm(_ADC_0,REG_BASE_ADC, (0<<3),LOCK_CNT) // 16 Bit, 16'h400, RW
#define ADC_CAP_POS _bm(_ADC_0,REG_BASE_ADC, (0<<3),CAP_POS) // 2 Bit, 2'h1, RW
#define ADC_CTRL_POS _bm(_ADC_0,REG_BASE_ADC, (0<<3),CTRL_POS) // 2 Bit, 2'h1, RW
#define ADC_CLK_DIV _bm(_ADC_0,REG_BASE_ADC, (0<<3),CLK_DIV) // 8 Bit, 8'h9, RW
#define ADC_CLK_PD _bm(_ADC_0,REG_BASE_ADC, (0<<3),CLK_PD) // 1 Bit, 1'h1, RW
#define ADC_MODE _bm(_ADC_0,REG_BASE_ADC, (0<<3),MODE) // 1 Bit, 1'h0, RW
#define ADC_IIR_COEF3 _bm(_ADC_1,REG_BASE_ADC, (1<<3),IIR_COEF3) // 6 Bit, 6'h0, RW
#define ADC_IIR_COEF2 _bm(_ADC_1,REG_BASE_ADC, (1<<3),IIR_COEF2) // 6 Bit, 6'h0, RW
#define ADC_IIR_COEF1 _bm(_ADC_1,REG_BASE_ADC, (1<<3),IIR_COEF1) // 6 Bit, 6'h0, RW
#define ADC_IIR_COEF0 _bm(_ADC_1,REG_BASE_ADC, (1<<3),IIR_COEF0) // 6 Bit, 6'h0, RW
#define ADC_OSEL3 _bm(_ADC_1,REG_BASE_ADC, (1<<3),OSEL3) // 1 Bit, 1'h0, RW
#define ADC_OSEL2 _bm(_ADC_1,REG_BASE_ADC, (1<<3),OSEL2) // 1 Bit, 1'h0, RW
#define ADC_OSEL1 _bm(_ADC_1,REG_BASE_ADC, (1<<3),OSEL1) // 1 Bit, 1'h0, RW
#define ADC_OSEL0 _bm(_ADC_1,REG_BASE_ADC, (1<<3),OSEL0) // 1 Bit, 1'h0, RW
#define ADC_ESEL _bm(_ADC_1,REG_BASE_ADC, (1<<3),ESEL) // 1 Bit, 1'h1, RW
#define ADC_HIGHF _bm(_ADC_1,REG_BASE_ADC, (1<<3),HIGHF) // 1 Bit, 1'h1, RW
#define ADC_OSEL_IIR_INV _bm(_ADC_1,REG_BASE_ADC, (1<<3),OSEL_IIR_INV) // 1 Bit, 1'h0, RW
#define ADC_PD _bm(_ADC_1,REG_BASE_ADC, (1<<3),PD) // 1 Bit, 1'h1, RW
#define ADC_DATA1 _bm(_ADC_2,REG_BASE_ADC, (2<<3),DATA1) // 10 Bit, 10'h0, R
#define ADC_DATA0 _bm(_ADC_2,REG_BASE_ADC, (2<<3),DATA0) // 10 Bit, 10'h0, R
#define ADC_DATA3 _bm(_ADC_3,REG_BASE_ADC, (3<<3),DATA3) // 10 Bit, 10'h0, R
#define ADC_DATA2 _bm(_ADC_3,REG_BASE_ADC, (3<<3),DATA2) // 10 Bit, 10'h0, R
#define IR_CLK _bm(_IR_0,REG_BASE_IR, (0<<3),CLK) // 20 Bit, 20'h0, RW
#define IR_IRQ _bm(_IR_0,REG_BASE_IR, (0<<3),IRQ) // 1 Bit, 1'h0, R
#define IR_IRQ_EN _bm(_IR_0,REG_BASE_IR, (0<<3),IRQ_EN) // 1 Bit, 1'h0, RW
#define IR_IRQ_CLR _bm(_IR_0,REG_BASE_IR, (0<<3),IRQ_CLR) // 1 Bit, 1'h0, RW
#define IR_EN _bm(_IR_0,REG_BASE_IR, (0<<3),EN) // 1 Bit, 1'h0, RW
#define IR_IRQ_ADDR _bm(_IR_0,REG_BASE_IR, (0<<3),IRQ_ADDR) // 8 Bit, 8'h0, RW
#define IR_MARGIN _bm(_IR_1,REG_BASE_IR, (1<<3),MARGIN) // 32 Bit, 32'h0, RW
#define IR_RPT_MG _bm(_IR_2,REG_BASE_IR, (2<<3),RPT_MG) // 32 Bit, 32'h0, RW
#define IR_RPT _bm(_IR_3,REG_BASE_IR, (3<<3),RPT) // 1 Bit, 1'h0, R
#define IR_ADDR _bm(_IR_3,REG_BASE_IR, (3<<3),ADDR) // 8 Bit, 8'h0, R
#define IR_DAT _bm(_IR_3,REG_BASE_IR, (3<<3),DAT) // 8 Bit, 8'h0, R
#endif
