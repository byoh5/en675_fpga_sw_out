/* **************************************************************************
 File Name	: 	isp_awb_tbl.h
 Description:	EN675 - Auto White Balance module
 Designer	:	Lee, Hoon (14.12.05)
 Modified by:	Kim, Sunghoon (19.08.20)
 Copyright â“’ Eyenix Co., Ltd. All Rights Reserved.
*************************************************************************** */

#if (model_Sens==SENS_IMX291)

		const int giDbDrMnl[3][2]	=	{
										{-453, -17 },	// 3700K, 8
										{-276, -206},	// 5100K, 10
										{-69 , -319}	// 9500K, 14
										};

		#define AWB_MTRX_GAIN	0.7

		const WORD gwCmap[64][2]  = {	// Offset margin: MinX 128, MaxX 128, MinY 128, MaxY 128
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x2938 },
										{0x2c36, 0x273a },
										{0x2a37, 0x263a },
										{0x2838, 0x243a },
										{0x2639, 0x233a },
										{0x2439, 0x223a },
										{0x2239, 0x213a },
										{0x2139, 0x2039 },
										{0x2038, 0x1f39 },
										{0x1f38, 0x1e38 },
										{0x1e37, 0x1e38 },
										{0x1d36, 0x1d37 },
										{0x1c34, 0x1c36 },
										{0x1b33, 0x1c34 },
										{0x1a31, 0x1b33 },
										{0x192f, 0x1a32 },
										{0x182d, 0x1930 },
										{0x172a, 0x192f },
										{0x1628, 0x182d },
										{0x1526, 0x172c },
										{0x1424, 0x162b },
										{0x1423, 0x1529 },
										{0x1322, 0x1528 },
										{0x1221, 0x1426 },
										{0x1120, 0x1325 },
										{0x101f, 0x1223 },
										{0x0f1e, 0x1121 },
										{0x0f1d, 0x1120 },
										{0x0e1c, 0x101e },
										{0x0e1b, 0xf1d	},
										{0x0d1a, 0xf1c	},
										{0x0c19, 0xe1a	},
										{0x0c18, 0xe19	},
										{0x0b17, 0xd18	},
										{0x0b16, 0xc17	},
										{0x0a15, 0xc16	},
										{0x0a14, 0xb14	},
										{0x0a13, 0xa14	},
										{0x0913, 0xa13	},
										{0x0912, 0x912	},
										{0x0811, 0x812	},
										{0x0810, 0x811	},
										{0x0810, 0x710	},
										{0x070f, 0x710	},
										{0x070f, 0x70f	},
										{0x070e, 0x60e	},
										{0x060e, 0x60e	},
										{0x060d, 0x60d	},
										{0x060c, 0x50c	},
										{0x060c, 0x50c	},
										{0x060b, 0x50b	},
										{0x070a, 0x50a	},
										{0x3f00, 0x40a	},
										{0x3f00, 0x409	},
										{0x3f00, 0x409	},
										{0x3f00, 0x408	},
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 }
								};


#elif (model_Sens==SENS_IMX323) 	// 15.03.31 WHL

	const int giDbDrMnl[3][2]	=	{
									{-449,32 },	// 3700K 8
									{-291,-153},	// 5100K 10
									{-115,-257}		// 9500K 14
									};

	#define AWB_MTRX_GAIN	0.6
//	#define AWB_MTRX_GAIN	0.7	// 15.04.06 WHL

	const WORD gwCmap[64][2] =		{	// Offset margin: MinX 128, MaxX 128, MinY 128, MaxY 128
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x313c, 0x3f00 },
									{0x2f3d, 0x3f00 },
									{0x2e3d, 0x2938 },
									{0x2c3d, 0x273a },
									{0x2b3d, 0x263a },
									{0x2a3d, 0x243a },
									{0x293d, 0x233a },
									{0x273c, 0x223a },
									{0x263c, 0x213a },
									{0x253b, 0x2039 },
									{0x233a, 0x1f39 },
									{0x223a, 0x1e38 },
									{0x2139, 0x1e38 },
									{0x2038, 0x1d37 },
									{0x1f36, 0x1c36 },
									{0x1e35, 0x1c34 },
									{0x1c34, 0x1b33 },
									{0x1b33, 0x1a32 },
									{0x1931, 0x1930 },
									{0x182f, 0x192f },
									{0x172d, 0x182d },
									{0x172c, 0x172c },
									{0x162a, 0x162b },
									{0x1528, 0x1529 },
									{0x1425, 0x1528 },
									{0x1423, 0x1426 },
									{0x1322, 0x1325 },
									{0x1320, 0x1223 },
									{0x121f, 0x1121 },
									{0x121d, 0x1120 },
									{0x111c, 0x101e },
									{0x111b, 0xf1d  },
									{0x1019, 0xf1c  },
									{0x0f17, 0xe1a  },
									{0x0f15, 0xe19  },
									{0x0e15, 0xd18  },
									{0x0e13, 0xc17  },
									{0x0d13, 0xc16  },
									{0x0c12, 0xb14  },
									{0x0c12, 0xa14  },
									{0x0b11, 0xa13  },
									{0x0b11, 0x912  },
									{0x0a10, 0x812  },
									{0x0a0f, 0x811  },
									{0x090f, 0x710  },
									{0x090e, 0x710  },
									{0x080e, 0x70f  },
									{0x080d, 0x60e  },
									{0x070c, 0x60e  },
									{0x060c, 0x60d  },
									{0x060b, 0x50c  },
									{0x050b, 0x50c  },
									{0x050a, 0x50b  },
									{0x050a, 0x50a  },
									{0x050a, 0x40a  },
									{0x0509, 0x409  },
									{0x0508, 0x409  },
									{0x0607, 0x408  },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 }
									};

#elif (model_Sens==SENS_IMX415)
    //Designer 	: Jang, Jae Hoon
	//Date		: 19.04.18
	const int giDbDrMnl[3][2]	=	{
									{-514, -23},	// 3700K    8
									{-376,-183},	// 5100K    10
									{-220,-275}		// 9500K    14
									};

	#define AWB_MTRX_GAIN	0.7


	const WORD gwCmap[64][2] =		{	// Offset margin: MinX 128, MaxX 128, MinY 128, MaxY 128
									{0x3f00, 0x3f00 },
									{0x363b, 0x3f00 },
									{0x323c, 0x353b },
									{0x2e3c, 0x313c },
									{0x2c3c, 0x2f3c },
									{0x2a3c, 0x2e3c },
									{0x283b, 0x2c3c },
									{0x263b, 0x2a3c },
									{0x243a, 0x293c },
									{0x2239, 0x273c },
									{0x2138, 0x263c },
									{0x2037, 0x243b },
									{0x1f36, 0x233a },
									{0x1e35, 0x223a },
									{0x1d34, 0x2139 },
									{0x1c33, 0x1f38 },
									{0x1b32, 0x1e36 },
									{0x1931, 0x1d35 },
									{0x1930, 0x1c34 },
									{0x182e, 0x1b32 },
									{0x182d, 0x1a31 },
									{0x172c, 0x192f },
									{0x162b, 0x182e },
									{0x162a, 0x172c },
									{0x1529, 0x162b },
									{0x1528, 0x1529 },
									{0x1426, 0x1428 },
									{0x1324, 0x1326 },
									{0x1322, 0x1225 },
									{0x1220, 0x1123 },
									{0x111f, 0x1022 },
									{0x111d, 0x1021 },
									{0x111b, 0x0f1f },
									{0x1019, 0x0e1e },
									{0x1017, 0x0e1c },
									{0x0f16, 0x0d1b },
									{0x0f14, 0x0c1a },
									{0x0e13, 0x0c18 },
									{0x0e12, 0x0b17 },
									{0x0e12, 0x0a16 },
									{0x0d11, 0x0a15 },
									{0x0d11, 0x0914 },
									{0x0c10, 0x0913 },
									{0x0c10, 0x0812 },
									{0x0c0f, 0x0711 },
									{0x0b0f, 0x0710 },
									{0x0b0e, 0x060f },
									{0x0a0e, 0x060f },
									{0x0a0e, 0x050e },
									{0x090d, 0x050d },
									{0x090c, 0x040c },
									{0x090c, 0x040b },
									{0x080b, 0x040b },
									{0x080b, 0x030a },
									{0x070a, 0x030a },
									{0x070a, 0x0309 },
									{0x0809, 0x0209 },
									{0x3f00, 0x0208 },
									{0x3f00, 0x0208 },
									{0x3f00, 0x0307 },
									{0x3f00, 0x0406 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
									{0x3f00, 0x3f00 },
							};

#elif (model_Sens==SENS_OS08A10)
	//Designer 	: Jo, Hong Rae
	//Date		: 18.07.25

	const int giDbDrMnl[3][2]	=	{
										{-431, -75 },	// 3700K, 8
										{-264, -251},	// 5100K, 10
										{-78 , -346}	// 9500K, 14
										};

	#define AWB_MTRX_GAIN	0.6

			const WORD gwCmap[64][2]  = {	// Offset margin: MinX 128, MaxX 128, MinY 128, MaxY 128
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x353b },
										{0x3f00, 0x313c },
										{0x3f00, 0x2f3c },
										{0x3439, 0x2e3c },
										{0x3239, 0x2c3c },
										{0x3039, 0x2a3c },
										{0x2d39, 0x293c },
										{0x2a39, 0x273c },
										{0x2838, 0x263c },
										{0x2738, 0x243b },
										{0x2637, 0x233a },
										{0x2336, 0x223a },
										{0x2236, 0x2139 },
										{0x2035, 0x1f38 },
										{0x2034, 0x1e36 },
										{0x1f34, 0x1d35 },
										{0x1e33, 0x1c34 },
										{0x1d32, 0x1b32 },
										{0x1c30, 0x1a31 },
										{0x1b2f, 0x192f },
										{0x1a2e, 0x182e },
										{0x192d, 0x172c },
										{0x182c, 0x162b },
										{0x182a, 0x1529 },
										{0x1729, 0x1428 },
										{0x1727, 0x1326 },
										{0x1625, 0x1225 },
										{0x1523, 0x1123 },
										{0x151e, 0x1022 },
										{0x141c, 0x1021 },
										{0x131b, 0x0f1f },
										{0x121a, 0x0e1e },
										{0x1218, 0x0e1c },
										{0x1117, 0x0d1b },
										{0x1017, 0x0c1a },
										{0x1016, 0x0c18 },
										{0x0f15, 0x0b17 },
										{0x0e15, 0x0a16 },
										{0x0d14, 0x0a15 },
										{0x0d13, 0x0914 },
										{0x0c12, 0x0913 },
										{0x0b12, 0x0812 },
										{0x0b11, 0x0711 },
										{0x0a10, 0x0710 },
										{0x0a0f, 0x060f },
										{0x090f, 0x060f },
										{0x090e, 0x050e },
										{0x080e, 0x050d },
										{0x080d, 0x040c },
										{0x070c, 0x040b },
										{0x070c, 0x040b },
										{0x060b, 0x030a },
										{0x060b, 0x030a },
										{0x060a, 0x0309 },
										{0x0609, 0x0209 },
										{0x0609, 0x0208 },
										{0x3f00, 0x0208 },
										{0x3f00, 0x0307 },
										{0x3f00, 0x0406 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
										{0x3f00, 0x3f00 },
								};


#elif	0

#endif


